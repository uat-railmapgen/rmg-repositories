{"version":3,"file":"static/js/AppRoot.42f9a044.chunk.js","mappings":"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","sources":["components/workspace/welcome.tsx","components/workspace/app-container.tsx","components/workspace/workspace.tsx","components/menu/app-item-button.tsx","service/info-service.ts","components/modal/about-modal.tsx","components/menu/apps-section.tsx","i18n/config.ts","components/menu/settings-section.tsx","components/modal/help-modal.tsx","components/modal/contributor-modal.tsx","components/menu/nav-menu-footer.tsx","components/menu/nav-menu.tsx","components/app-root.tsx"],"sourcesContent":["import React from 'react';\nimport { Heading, Image, Text, VStack } from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\n\nexport default function Welcome() {\n    const { t } = useTranslation();\n\n    return (\n        <VStack flex={1} justifyContent=\"center\" mb={10}>\n            <Image\n                src={process.env.PUBLIC_URL + '/logo512.png'}\n                w={120}\n                p={2}\n                mb={3}\n                backgroundColor=\"white\"\n                borderRadius={12}\n            />\n            <Heading>{t('Welcome to RMG')}</Heading>\n            <Text fontSize=\"lg\" textAlign=\"center\">\n                {t('Select an app to start your own rail map design!')}\n            </Text>\n        </VStack>\n    );\n}\n","import React, { useState } from 'react';\nimport { FRAME_ID_PREFIX, WorkspaceTab } from '../../util/constants';\nimport { Box } from '@chakra-ui/react';\n\ninterface AppContainerProps {\n    tab: WorkspaceTab;\n    isActive: boolean;\n}\n\nexport default function AppContainer(props: AppContainerProps) {\n    const { tab, isActive } = props;\n\n    const [frameUrl] = useState(tab.url ?? '/' + tab.app + '/');\n\n    // setFrameUrl if tab.id is updated?\n\n    return (\n        <Box display={isActive ? 'block' : 'none'} flex={1}>\n            <iframe\n                id={FRAME_ID_PREFIX + tab.id}\n                src={frameUrl}\n                loading=\"lazy\"\n                title={tab.app}\n                width=\"100%\"\n                height=\"100%\"\n            />\n        </Box>\n    );\n}\n","import { Box, CloseButton, SystemStyleObject, Tab, TabList, Tabs } from '@chakra-ui/react';\nimport React from 'react';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { closeTab, setActiveTab } from '../../redux/app/app-slice';\nimport { useTranslation } from 'react-i18next';\nimport { appEnablement, AppId, Events } from '../../util/constants';\nimport Welcome from './welcome';\nimport AppContainer from './app-container';\nimport rmgRuntime from '@railmapgen/rmg-runtime';\n\nconst style: SystemStyleObject = {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    overflow: 'hidden',\n\n    '& .chakra-tabs__tablist': {\n        whiteSpace: 'nowrap',\n        overflowX: 'auto',\n        overflowY: 'hidden',\n        ml: 10,\n        transition: '0.3s ease-in-out',\n\n        '.show-menu &': {\n            ml: 0,\n        },\n    },\n\n    '& .chakra-tabs__tab': {\n        '& button': {\n            ml: 1,\n        },\n    },\n};\n\nexport default function Workspace() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n    const { openedTabs, activeTab } = useRootSelector(state => state.app);\n\n    const tabIndex = activeTab ? openedTabs.findIndex(tab => tab.id === activeTab) : -1;\n\n    const handleCloseTab = (event: React.MouseEvent<HTMLButtonElement>, tabId: string, app: AppId) => {\n        event.stopPropagation();\n        dispatch(closeTab(tabId));\n        rmgRuntime.event(Events.CLOSE_APP, { app });\n    };\n\n    if (openedTabs.length === 0) {\n        return <Welcome />;\n    }\n\n    return (\n        <Tabs as=\"section\" variant=\"enclosed\" colorScheme=\"primary\" index={tabIndex} sx={style}>\n            <TabList>\n                {openedTabs.map(({ id, app }) => (\n                    <Tab key={id} as={Box} onClick={() => dispatch(setActiveTab(id))} cursor=\"pointer\">\n                        {t(appEnablement[app].name)}\n                        <CloseButton size=\"sm\" onClick={e => handleCloseTab(e, id, app)} title={t('Close')} />\n                    </Tab>\n                ))}\n            </TabList>\n\n            {openedTabs.map(tab => (\n                <AppContainer key={tab.id} tab={tab} isActive={activeTab === tab.id} />\n            ))}\n        </Tabs>\n    );\n}\n","import React from 'react';\nimport { openApp, openAppInNew, toggleMenu } from '../../redux/app/app-slice';\nimport { appEnablement, AppId, Events } from '../../util/constants';\nimport {\n    Button,\n    ButtonGroup,\n    IconButton,\n    Menu,\n    MenuButton,\n    MenuItem,\n    MenuList,\n    SystemStyleObject,\n    theme,\n    useMediaQuery,\n} from '@chakra-ui/react';\nimport { useRootDispatch } from '../../redux';\nimport { useTranslation } from 'react-i18next';\nimport rmgRuntime from '@railmapgen/rmg-runtime';\nimport { MdInfoOutline, MdMoreHoriz, MdOpenInNew } from 'react-icons/md';\n\nconst style: SystemStyleObject = {\n    w: '100%',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    textOverflow: 'ellipsis',\n    textAlign: 'start',\n};\n\ninterface AppItemProps {\n    appId: AppId;\n    onAboutOpen: () => void;\n}\n\nexport default function AppItemButton(props: AppItemProps) {\n    const { appId, onAboutOpen } = props;\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const smMediaQuery = useMediaQuery(`(min-width: ${theme.breakpoints.sm})`);\n\n    const handleOpenApp = (isOpenInNew: boolean) => {\n        if (isOpenInNew) {\n            dispatch(openAppInNew(appId));\n        } else {\n            dispatch(openApp(appId));\n        }\n\n        if (!smMediaQuery[0]) {\n            dispatch(toggleMenu());\n        }\n\n        rmgRuntime.event(Events.OPEN_APP, { appId, isOpenInNew });\n    };\n\n    return (\n        <ButtonGroup variant=\"ghost\" size=\"md\" isAttached>\n            <Button onClick={() => handleOpenApp(false)} title={t(appEnablement[appId].name)} sx={style}>\n                {t(appEnablement[appId].name)}\n            </Button>\n            <Menu>\n                <MenuButton as={IconButton} icon={<MdMoreHoriz />} aria-label={t('More')} title={t('More')} />\n                <MenuList>\n                    {appEnablement[appId].allowMultiInstances && (\n                        <MenuItem icon={<MdOpenInNew />} onClick={() => handleOpenApp(true)}>\n                            {t('Open in new Workspace')}\n                        </MenuItem>\n                    )}\n                    <MenuItem icon={<MdInfoOutline />} onClick={onAboutOpen}>\n                        {t('About') + ' ' + t(appEnablement[appId].name)}\n                    </MenuItem>\n                </MenuList>\n            </Menu>\n        </ButtonGroup>\n    );\n}\n","export const getVersion = async (component: string): Promise<string> => {\n    let url: string = `/${component}/info.json`;\n    try {\n        const res = await fetch(url);\n        const data = await res.json();\n        return data.version as string;\n    } catch (error) {\n        console.log(`Failed to get version for ${component}`);\n        return 'unknown';\n    }\n};\n\nexport interface InfoStatus {\n    id: string;\n    uat?: string;\n    prd?: string;\n}\n\nexport const getStatus = (): Promise<InfoStatus[]> => {\n    return Promise.all(\n        Object.keys({}).map(async component => {\n            return {\n                id: component,\n                uat: await getVersion(component),\n                prd: await getVersion(component),\n            };\n        })\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n    Badge,\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { appEnablement, AppId } from '../../util/constants';\nimport { getVersion } from '../../service/info-service';\n\ninterface AboutModalProps {\n    appId?: AppId;\n    onClose: () => void;\n}\n\nexport default function AboutModal(props: AboutModalProps) {\n    const { appId, onClose } = props;\n    const { t } = useTranslation();\n\n    const [version, setVersion] = useState('Unknown');\n\n    useEffect(() => {\n        if (appId) {\n            getVersion(appId).then(data => setVersion(data));\n        } else {\n            setVersion('Unknown');\n        }\n    }, [appId]);\n\n    return (\n        <Modal isOpen={!!appId} onClose={onClose} size=\"xl\" scrollBehavior=\"inside\">\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>\n                    {t('About') + ' ' + (appId ? t(appEnablement[appId].name) : '')}\n                    <Badge ml={1}>{version}</Badge>\n                </ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody />\n\n                <ModalFooter>\n                    <Button\n                        colorScheme=\"primary\"\n                        onClick={() => window.open('https://github.com/railmapgen/' + appId, '_blank')}\n                    >\n                        {t('Visit GitHub')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useState } from 'react';\nimport { AppId, getAvailableApps } from '../../util/constants';\nimport { Flex, Heading, SystemStyleObject } from '@chakra-ui/react';\nimport AppItemButton from './app-item-button';\nimport rmgRuntime from '@railmapgen/rmg-runtime';\nimport { useTranslation } from 'react-i18next';\nimport AboutModal from '../modal/about-modal';\n\nconst style: SystemStyleObject = {\n    flexDirection: 'column',\n\n    '& h5': {\n        mx: 1,\n        my: 2,\n    },\n\n    '& > div': {\n        flexDirection: 'column',\n    },\n};\n\nexport default function AppsSection() {\n    const { t } = useTranslation();\n\n    const [aboutModalAppId, setAboutModalAppId] = useState<AppId>();\n\n    const availableApps = getAvailableApps(rmgRuntime.getEnv());\n\n    return (\n        <Flex sx={style}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('Apps')}\n            </Heading>\n            <Flex>\n                {availableApps.map(appId => (\n                    <AppItemButton key={appId} appId={appId} onAboutOpen={() => setAboutModalAppId(appId)} />\n                ))}\n            </Flex>\n\n            <AboutModal appId={aboutModalAppId} onClose={() => setAboutModalAppId(undefined)} />\n        </Flex>\n    );\n}\n","import rmgRuntime from '@railmapgen/rmg-runtime';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport RmgTranslate, { LanguageCode, Translation } from '@railmapgen/rmg-translate';\nimport enTranslation from './translations/en.json';\nimport zhHansTranslation from './translations/zh-Hans.json';\nimport zhHantTranslation from './translations/zh-Hant.json';\n\nconst resources = new RmgTranslate.Builder()\n    .withResource('en', enTranslation)\n    .withResource('zh-Hans', zhHansTranslation)\n    .withResource('zh-Hant', zhHantTranslation)\n    .build();\n\ni18n.use(initReactI18next)\n    .init({\n        lng: rmgRuntime.getLanguage(),\n        fallbackLng: {\n            [LanguageCode.ChineseCN]: [LanguageCode.ChineseSimp, LanguageCode.English],\n            [LanguageCode.ChineseHK]: [LanguageCode.ChineseTrad, LanguageCode.English],\n            [LanguageCode.ChineseTW]: [LanguageCode.ChineseTrad, LanguageCode.English],\n\n            [LanguageCode.ChineseTrad]: [LanguageCode.ChineseHK, LanguageCode.ChineseTW, LanguageCode.English],\n\n            default: [LanguageCode.English],\n        },\n        resources,\n    })\n    .then(() => {\n        document.documentElement.lang = i18n.language;\n    });\n\nexport default i18n;\n\nexport const handleLanguageChange = (language: string) => {\n    i18n.changeLanguage(language).then();\n    document.documentElement.lang = language;\n};\nrmgRuntime.onLanguageChange(handleLanguageChange);\n\nexport const translateText = (translation: Translation): string => {\n    return (\n        i18n.languages.map(lang => translation[lang as LanguageCode]).find(name => name !== undefined) ??\n        translation[LanguageCode.English] ??\n        '(Translation Error)'\n    );\n};\n","import React from 'react';\nimport { Box, Flex, Heading, SystemStyleObject } from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { LanguageCode } from '@railmapgen/rmg-translate';\nimport rmgRuntime from '@railmapgen/rmg-runtime';\nimport { handleLanguageChange } from '../../i18n/config';\nimport { Events } from '../../util/constants';\n\nconst style: SystemStyleObject = {\n    flexDirection: 'column',\n\n    '& h5': {\n        mx: 1,\n        my: 2,\n    },\n\n    '& > div': {\n        px: 2,\n    },\n};\n\nexport default function SettingsSection() {\n    const { t } = useTranslation();\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('Language'),\n            value: rmgRuntime.getLanguage(),\n            options: {\n                [LanguageCode.English]: 'English',\n                [LanguageCode.ChineseSimp]: '简体中文',\n                [LanguageCode.ChineseTrad]: '繁體中文',\n            },\n            onChange: value => {\n                const language = value as LanguageCode;\n                rmgRuntime.setLanguage(language);\n                handleLanguageChange(language);\n                rmgRuntime.event(Events.CHANGE_LANGUAGE, { language });\n            },\n        },\n    ];\n\n    return (\n        <Flex sx={style}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('Settings')}\n            </Heading>\n\n            <Box>\n                <RmgFields fields={fields} />\n            </Box>\n        </Flex>\n    );\n}\n","import React from 'react';\nimport {\n    Button,\n    Icon,\n    Link,\n    ListItem,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    OrderedList,\n    useColorModeValue,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { MdOpenInNew } from 'react-icons/md';\n\ninterface HelpModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function HelpModal(props: HelpModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n\n    const linkColour = useColorModeValue('primary.500', 'primary.300');\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose} size=\"xl\" scrollBehavior=\"inside\">\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('Terms and conditions')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <OrderedList>\n                        <ListItem>\n                            The layout of the elements on the signage or rail map, is designed by{' '}\n                            <Link color={linkColour} href=\"https://www.gzmtr.com/\" isExternal={true}>\n                                Guangzhou Metro Group <Icon as={MdOpenInNew} />\n                            </Link>\n                            {', '}\n                            <Link color={linkColour} href=\"https://www.mtr.com.hk/\" isExternal={true}>\n                                MTR Corporation <Icon as={MdOpenInNew} />\n                            </Link>\n                            {' or '}\n                            <Link color={linkColour} href=\"https://www.shmetro.com/\" isExternal={true}>\n                                Shanghai Shentong Metro Group <Icon as={MdOpenInNew} />\n                            </Link>\n                            , depending on your selection. You shall grant appropriate permit or license from the\n                            relevant company above before using the generated images for commercial purposes, if it is\n                            required to do so.\n                            <br />\n                            標誌版或路線圖之元素之佈局，基於你所選擇之風格，為\n                            <Link color={linkColour} href=\"https://www.gzmtr.com/\" isExternal={true}>\n                                廣州地鐵集團公司 <Icon as={MdOpenInNew} />\n                            </Link>\n                            ，\n                            <Link color={linkColour} href=\"https://www.mtr.com.hk/\" isExternal={true}>\n                                港鐵公司 <Icon as={MdOpenInNew} />\n                            </Link>\n                            或\n                            <Link color={linkColour} href=\"https://www.shmetro.com/\" isExternal={true}>\n                                上海申通地鐵集團 <Icon as={MdOpenInNew} />\n                            </Link>\n                            所設計。在產生之圖像用作商業用途前，你應向相關公司取得適當之許可證或授權。\n                        </ListItem>\n                        <ListItem>\n                            The elements including shapes and lines on the image are drawn by{' '}\n                            <Link color={linkColour} href=\"https://www.github.com/wongchito\" isExternal={true}>\n                                Chito Wong <Icon as={MdOpenInNew} />\n                            </Link>\n                            {' and '}\n                            <Link color={linkColour} href=\"https://www.github.com/thekingofcity\" isExternal={true}>\n                                thekingofcity <Icon as={MdOpenInNew} />\n                            </Link>\n                            , based on the design standards or rules of the companies listed above. You may use them for\n                            any purposes, but it is recommended to state the name and the link of software alongside.\n                            <br />\n                            圖像之元素，包括圖形及線條，均由\n                            <Link color={linkColour} href=\"https://www.github.com/wongchito\" isExternal={true}>\n                                Chito Wong <Icon as={MdOpenInNew} />\n                            </Link>\n                            及\n                            <Link color={linkColour} href=\"https://www.github.com/thekingofcity\" isExternal={true}>\n                                thekingofcity <Icon as={MdOpenInNew} />\n                            </Link>\n                            基於上述公司之設計標準或準則繪製。你可將其用於任何目的，但我們建議你於使用同時附以我們之名字以及該軟件之連結。\n                        </ListItem>\n                        <ListItem>\n                            Due to copyright, licensing and other legal restrictions, Rail Map Generator uses{' '}\n                            <Link color={linkColour} href=\"https://github.com/ButTaiwan/genyo-font\" isExternal={true}>\n                                GenYoMin provided by ButTaiwan <Icon as={MdOpenInNew} />\n                            </Link>\n                            , and Vegur instead of MTRSung and Myriad Pro respectively to display and generate MTR-style\n                            signage. You shall grant appropriate permit or license from the manufacturers before using\n                            those generated images for commercial purposes.\n                            <br />\n                            由於著作權及其他法律限制，鐵路路線圖產生器使用\n                            <Link color={linkColour} href=\"https://github.com/ButTaiwan/genyo-font\" isExternal={true}>\n                                由ButTaiwan提供之源樣明體 <Icon as={MdOpenInNew} />\n                            </Link>\n                            ，以及Vegur，以代替港鐵樣式標誌牌所使用之地鐵宋及Myriad\n                            Pro。在產生之圖像用作商業用途前，你應向字型生產廠商取得適當之許可證或授權。\n                        </ListItem>\n                        <ListItem>\n                            The exported images in PNG or SVG format may be modified, published, or used for other\n                            purposes, under the conditions above.\n                            <br />\n                            輸出之PNG或SVG種類之圖像可基於上述條款，用於修改、發行或其他用途。\n                        </ListItem>\n                        <ListItem>\n                            All flag emojis shown on Windows platforms are designed by{' '}\n                            <Link color={linkColour} href=\"https://openmoji.org/\" isExternal={true}>\n                                OpenMoji <Icon as={MdOpenInNew} />\n                            </Link>{' '}\n                            – the open-source emoji and icon project. License:\n                            <Link\n                                color={linkColour}\n                                href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n                                isExternal={true}\n                            >\n                                CC BY-SA 4.0 <Icon as={MdOpenInNew} />\n                            </Link>\n                            <br />\n                            於Windows作業系統上顯示之旗幟Emoji為\n                            <Link color={linkColour} href=\"https://openmoji.org/\" isExternal={true}>\n                                OpenMoji <Icon as={MdOpenInNew} />\n                            </Link>\n                            所設計。許可證：\n                            <Link\n                                color={linkColour}\n                                href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n                                isExternal={true}\n                            >\n                                CC BY-SA 4.0 <Icon as={MdOpenInNew} />\n                            </Link>\n                        </ListItem>\n                        <ListItem>\n                            We reserve the rights, without prior notice, to modify, add, or remove these terms. The\n                            Chinese translation is for reference only. In case of any discrepancy between the English\n                            version and the Chinese version, the English version shall prevail.\n                            <br />\n                            我們保留修改、新增或移除上述條款之權利，而無需另行通知。中文譯本僅供參考，文義如與英文有歧異，概以英文本為準。\n                        </ListItem>\n                    </OrderedList>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        colorScheme=\"teal\"\n                        onClick={() => window.open('https://github.com/railmapgen/rmg', '_blank')}\n                    >\n                        {t('Visit GitHub')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React from 'react';\nimport {\n    Avatar,\n    Button,\n    Flex,\n    Heading,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    Tag,\n    TagLabel,\n    Text,\n    VStack,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\n\nconst CONTRIBUTORS_ADMINS = ['52PD', 'linchen1965'];\nconst CONTRIBUTORS_LIST = [\n    'jealousyge',\n    'Jay20081229',\n    'clearng-kly',\n    'Dingdong2334',\n    'C1P918R',\n    'AnDanJuneUnderline',\n    'GrassRabbit1410',\n    'xiany114514',\n    'Andy1782010',\n    'Thomastzc',\n    'Tianxiu11111',\n];\n\ninterface ContributorModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function ContributorModal(props: ContributorModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose} size=\"xl\" scrollBehavior=\"inside\">\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('Contributors')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <Heading as=\"h6\" size=\"xs\" my={1}>\n                        {t('Core contributors')}\n                    </Heading>\n\n                    <VStack>\n                        <Tag\n                            size=\"lg\"\n                            minW=\"80%\"\n                            onClick={() => window.open('https://github.com/wongchito', '_blank')}\n                            cursor=\"pointer\"\n                        >\n                            <Avatar src=\"https://github.com/wongchito.png\" size=\"lg\" my={2} ml={-1} mr={2} />\n                            <TagLabel display=\"block\">\n                                <Text fontSize=\"lg\" fontWeight=\"bold\" mb={1}>\n                                    Chito Wong\n                                </Text>\n                                <Text fontSize=\"sm\">Project initiator</Text>\n                                <Text fontSize=\"sm\">Author of MTR and Guangzhou Metro styles</Text>\n                            </TagLabel>\n                        </Tag>\n                        <Tag\n                            size=\"lg\"\n                            minW=\"80%\"\n                            onClick={() => window.open('https://github.com/thekingofcity', '_blank')}\n                            cursor=\"pointer\"\n                        >\n                            <Avatar src=\"https://github.com/thekingofcity.png\" size=\"lg\" my={2} ml={-1} mr={2} />\n                            <TagLabel display=\"block\">\n                                <Text fontSize=\"lg\" fontWeight=\"bold\" mb={1}>\n                                    thekingofcity\n                                </Text>\n                                <Text fontSize=\"sm\">Author of Shanghai Metro style</Text>\n                                <Text fontSize=\"sm\">Desktop version (Electron) maintainer</Text>\n                            </TagLabel>\n                        </Tag>\n                    </VStack>\n\n                    <Heading as=\"h6\" size=\"xs\" my={1}>\n                        {t('Resource contributors')}\n                    </Heading>\n\n                    <Flex wrap=\"wrap\">\n                        {CONTRIBUTORS_ADMINS.map(contributor => (\n                            <Tag\n                                key={contributor}\n                                size=\"lg\"\n                                mb={1}\n                                mr={1}\n                                flex=\"100%\"\n                                onClick={() =>\n                                    window.open(\n                                        `https://github.com/railmapgen/rmg/issues?q=is:issue+author:${contributor}`,\n                                        '_blank'\n                                    )\n                                }\n                                cursor=\"pointer\"\n                            >\n                                <Avatar src={`https://github.com/${contributor}.png`} size=\"xs\" ml={-1} mr={2} />\n                                <TagLabel>{contributor}</TagLabel>\n                                <TagLabel flexGrow={1} />\n                                <TagLabel>\n                                    <Text fontSize=\"sm\">{t('Resource Administrator')}</Text>\n                                </TagLabel>\n                            </Tag>\n                        ))}\n                        {CONTRIBUTORS_LIST.map(contributor => (\n                            <Tag\n                                key={contributor}\n                                size=\"lg\"\n                                mb={1}\n                                mr={1}\n                                onClick={() =>\n                                    window.open(\n                                        `https://github.com/railmapgen/rmg/issues?q=is:issue+author:${contributor}`,\n                                        '_blank'\n                                    )\n                                }\n                                cursor=\"pointer\"\n                            >\n                                <Avatar src={`https://github.com/${contributor}.png`} size=\"xs\" ml={-1} mr={2} />\n                                <TagLabel>{contributor}</TagLabel>\n                            </Tag>\n                        ))}\n                    </Flex>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        colorScheme=\"primary\"\n                        onClick={() =>\n                            window.open(\n                                'https://github.com/railmapgen/rmg/wiki/How-to-add-color-palette-and-line-templates',\n                                '_blank'\n                            )\n                        }\n                    >\n                        {t('Contribution Wiki')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import { Divider, Flex, HStack, Icon, IconButton, Link, Text, useColorModeValue } from '@chakra-ui/react';\nimport rmgRuntime, { RmgInstance } from '@railmapgen/rmg-runtime';\nimport React, { useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { MdHelp, MdOpenInNew, MdPeople } from 'react-icons/md';\nimport { Events, getMirrorUrl, mirrorName } from '../../util/constants';\nimport HelpModal from '../modal/help-modal';\nimport ContributorModal from '../modal/contributor-modal';\n\nexport default function NavMenuFooter() {\n    const { t } = useTranslation();\n    const linkColour = useColorModeValue('primary.500', 'primary.300');\n\n    const [isContributorModalOpen, setIsContributorModalOpen] = useState(false);\n    const [isHelpModalOpen, setIsHelpModalOpen] = useState(false);\n\n    const instance = rmgRuntime.getInstance();\n    const switchInstance = instance === RmgInstance.GITHUB ? RmgInstance.GITLAB : RmgInstance.GITHUB;\n    const mirror = mirrorName[instance];\n\n    const handleSwitchMirror = () => {\n        const mirrorUrl = getMirrorUrl(switchInstance, rmgRuntime.getEnv());\n        window.open(mirrorUrl, '_blank');\n        rmgRuntime.event(Events.SWITCH_MIRROR, { mirrorUrl });\n    };\n\n    return (\n        <Flex direction=\"column\">\n            <Text fontSize=\"sm\" textAlign=\"center\" width=\"100%\">\n                <Trans i18nKey=\"NavMenuFooter.currentMirror\" mirror={mirror}>\n                    You're on {{ mirror }} mirror\n                </Trans>\n                <br />\n                {t('Switch to') + ' '}\n                <Link color={linkColour} onClick={handleSwitchMirror}>\n                    {mirrorName[switchInstance]} <Icon as={MdOpenInNew} />\n                </Link>\n            </Text>\n\n            <Divider />\n\n            <HStack justifyContent=\"center\">\n                <IconButton\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    aria-label={t('Contributor')}\n                    title={t('Contributor')}\n                    icon={<MdPeople />}\n                    onClick={() => setIsContributorModalOpen(true)}\n                />\n\n                <IconButton\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    aria-label={t('Terms and conditions')}\n                    title={t('Terms and conditions')}\n                    icon={<MdHelp />}\n                    onClick={() => setIsHelpModalOpen(true)}\n                />\n            </HStack>\n\n            <ContributorModal isOpen={isContributorModalOpen} onClose={() => setIsContributorModalOpen(false)} />\n            <HelpModal isOpen={isHelpModalOpen} onClose={() => setIsHelpModalOpen(false)} />\n        </Flex>\n    );\n}\n","import React from 'react';\nimport { Flex, Heading, SystemStyleObject } from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport rmgRuntime from '@railmapgen/rmg-runtime';\nimport { RmgEnvBadge } from '@railmapgen/rmg-components';\nimport AppsSection from './apps-section';\nimport SettingsSection from './settings-section';\nimport NavMenuFooter from './nav-menu-footer';\n\nconst style: SystemStyleObject = {\n    flexShrink: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    alignItems: 'flex-end',\n    transition: '0.3s ease-in-out',\n    maxW: 0,\n    visibility: 'hidden',\n    boxShadow: 'lg',\n    zIndex: 100,\n\n    '.show-menu &': {\n        maxW: { base: '100%', sm: 320 },\n        w: { base: '100%', sm: 'unset' },\n        visibility: 'initial',\n    },\n\n    '& > div': {\n        flexDirection: 'column',\n        h: '100%',\n        w: { base: '100vw', sm: 320 },\n\n        '& > div:nth-of-type(1)': {\n            // header\n            flex: 0,\n            flexDirection: 'row',\n            alignItems: 'center',\n            minHeight: 10,\n            pl: 12,\n        },\n\n        '& > div:nth-of-type(2)': {\n            // body\n            flexDirection: 'column',\n            flex: 1,\n            overflowY: 'auto',\n        },\n    },\n};\n\nexport default function NavMenu() {\n    const { t } = useTranslation();\n\n    return (\n        <Flex as=\"section\" sx={style}>\n            <Flex>\n                {/* menu-header */}\n                <Flex>\n                    <Heading as=\"h4\" size=\"md\">\n                        {t('RMG Home')}\n                    </Heading>\n                    <RmgEnvBadge environment={rmgRuntime.getEnv()} version={rmgRuntime.getAppVersion()} />\n                </Flex>\n\n                {/* menu-body */}\n                <Flex>\n                    <AppsSection />\n                    <SettingsSection />\n                </Flex>\n\n                {/* menu-footer */}\n                <NavMenuFooter />\n            </Flex>\n        </Flex>\n    );\n}\n","import { IconButton } from '@chakra-ui/react';\nimport React from 'react';\nimport Workspace from './workspace/workspace';\nimport { RmgPage, RmgWindow } from '@railmapgen/rmg-components';\nimport { MdMenu } from 'react-icons/md';\nimport { toggleMenu } from '../redux/app/app-slice';\nimport { useTranslation } from 'react-i18next';\nimport { useRootDispatch, useRootSelector } from '../redux';\nimport NavMenu from './menu/nav-menu';\nimport rmgRuntime from '@railmapgen/rmg-runtime';\nimport { Events } from '../util/constants';\n\nexport default function AppRoot() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const isShowMenu = useRootSelector(state => state.app.isShowMenu);\n\n    const handleToggle = () => {\n        dispatch(toggleMenu());\n        rmgRuntime.event(Events.TOGGLE_NAV_MENU, {});\n    };\n\n    return (\n        <RmgWindow className={isShowMenu ? 'show-menu' : ''}>\n            <IconButton\n                variant=\"ghost\"\n                size=\"md\"\n                aria-label={t('Toggle menu')}\n                title={t('Toggle menu')}\n                icon={<MdMenu />}\n                position=\"absolute\"\n                zIndex={110}\n                onClick={handleToggle}\n            />\n            <RmgPage sx={{ flexDirection: 'row' }}>\n                <NavMenu />\n                <Workspace />\n            </RmgPage>\n        </RmgWindow>\n    );\n}\n"],"names":["Welcome","t","useTranslation","flex","justifyContent","mb","src","w","p","backgroundColor","borderRadius","fontSize","textAlign","AppContainer","props","tab","isActive","useState","url","app","frameUrl","display","id","FRAME_ID_PREFIX","loading","title","width","height","style","flexDirection","overflow","whiteSpace","overflowX","overflowY","ml","transition","Workspace","dispatch","useRootDispatch","useRootSelector","state","openedTabs","activeTab","tabIndex","findIndex","length","as","variant","colorScheme","index","sx","map","Box","onClick","setActiveTab","cursor","appEnablement","name","size","e","event","tabId","stopPropagation","closeTab","rmgRuntime","Events","handleCloseTab","textOverflow","AppItemButton","appId","onAboutOpen","smMediaQuery","useMediaQuery","theme","handleOpenApp","isOpenInNew","openAppInNew","openApp","toggleMenu","isAttached","IconButton","icon","allowMultiInstances","getVersion","component","fetch","res","json","data","version","console","log","AboutModal","onClose","setVersion","useEffect","then","isOpen","scrollBehavior","window","open","mx","my","AppsSection","aboutModalAppId","setAboutModalAppId","availableApps","getAvailableApps","undefined","resources","RmgTranslate","withResource","zhHansTranslation","zhHantTranslation","build","i18n","initReactI18next","init","lng","fallbackLng","LanguageCode","document","documentElement","lang","handleLanguageChange","language","px","SettingsSection","fields","type","label","value","options","onChange","HelpModal","linkColour","useColorModeValue","color","href","isExternal","MdOpenInNew","CONTRIBUTORS_ADMINS","CONTRIBUTORS_LIST","ContributorModal","minW","mr","fontWeight","wrap","contributor","flexGrow","NavMenuFooter","isContributorModalOpen","setIsContributorModalOpen","isHelpModalOpen","setIsHelpModalOpen","instance","switchInstance","RmgInstance","mirror","mirrorName","direction","Trans","i18nKey","mirrorUrl","getMirrorUrl","flexShrink","alignItems","maxW","visibility","boxShadow","zIndex","base","sm","h","minHeight","pl","NavMenu","environment","AppRoot","isShowMenu","className","position"],"sourceRoot":""}