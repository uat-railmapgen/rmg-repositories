{"version":3,"file":"static/js/TicketView.c704e8c8.chunk.js","mappings":"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","sources":["components/hooks/use-translated-name.tsx","components/ticket-view/multi-lang-entry-card.tsx","components/ticket-view/country-section.tsx","components/ticket-view/city-section.tsx","components/ticket-view/lines-section.tsx","components/modal/submit-modal.tsx","components/ticket-view/ticket-view.tsx","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { LanguageCode, Translation } from '@railmapgen/rmg-palette-resources';\n\nexport default function useTranslatedName(): (name: Translation) => string {\n    const { i18n } = useTranslation();\n\n    return (name: Translation) => {\n        return (\n            i18n.languages.map(lang => name[lang as LanguageCode]).find(name => name !== undefined) ??\n            name[LanguageCode.English] ??\n            '(Translation Error)'\n        );\n    };\n}\n","import { RmgCard, RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport React from 'react';\nimport { Box, HStack, IconButton } from '@chakra-ui/react';\nimport { LanguageCode } from '@railmapgen/rmg-palette-resources';\nimport { MdAdd, MdDelete } from 'react-icons/md';\nimport { EntityId, EntityState } from '@reduxjs/toolkit';\nimport { TranslationEntity, translationEntityAdapter, translationEntitySelector } from '../../redux/ticket/util';\nimport { useTranslation } from 'react-i18next';\n\ninterface MultiLangEntryCardProps {\n    entries?: EntityState<TranslationEntity>;\n    onUpdate: (id: EntityId, changes: Partial<TranslationEntity>) => void;\n    onAdd: (lang: LanguageCode) => void;\n    onRemove: (id: EntityId) => void;\n}\n\nexport default function MultiLangEntryCard(props: MultiLangEntryCardProps) {\n    const { onUpdate, onAdd, onRemove } = props;\n    const entries = props.entries ?? translationEntityAdapter.getInitialState();\n\n    const { t } = useTranslation();\n\n    const getFields = (id: EntityId): RmgFieldsField[] => {\n        const entity = translationEntitySelector.selectById(entries, id);\n\n        if (!entity) {\n            return [];\n        }\n\n        const { lang, name } = entity;\n        const languageOptions = Object.entries(LanguageCode).reduce<Record<string, string>>((acc, cur) => {\n            if (cur[1] !== lang && cur[1] in entries) {\n                return acc;\n            } else {\n                return { ...acc, [cur[1]]: cur[0] };\n            }\n        }, {});\n\n        return [\n            {\n                type: 'select',\n                label: t('Language'),\n                value: lang,\n                options: languageOptions,\n                onChange: value => onUpdate(id, { lang: value as LanguageCode }),\n            },\n            {\n                type: 'input',\n                label: t('Name'),\n                value: name,\n                onChange: value => onUpdate(id, { name: value }),\n                validator: value => value !== '',\n            },\n        ];\n    };\n\n    const handleAddEntry = () => {\n        const lang = Object.values(LanguageCode).filter(\n            l => !Object.values(entries.entities).find(entity => entity?.lang === l)\n        )[0];\n        onAdd(lang);\n    };\n\n    return (\n        <RmgCard direction=\"column\">\n            {translationEntitySelector.selectIds(entries).map((id, i) => (\n                <HStack key={id} sx={{ '& > div:first-of-type': { flex: 1 } }} data-testid={'entry-card-stack-' + id}>\n                    <RmgFields fields={getFields(id)} noLabel={i > 0} />\n\n                    {i === entries.ids.length - 1 ? (\n                        <IconButton\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            aria-label={t('Add a name in another language')}\n                            title={t('Add a name in another language')}\n                            onClick={handleAddEntry}\n                            icon={<MdAdd />}\n                        />\n                    ) : (\n                        <Box minW={8} />\n                    )}\n\n                    <IconButton\n                        size=\"sm\"\n                        variant=\"ghost\"\n                        aria-label={t('Remove this name')}\n                        title={t('Remove this name')}\n                        onClick={() => onRemove(id)}\n                        icon={<MdDelete />}\n                    />\n                </HStack>\n            ))}\n        </RmgCard>\n    );\n}\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport MultiLangEntryCard from './multi-lang-entry-card';\nimport {\n    addCountryName,\n    removeCountryName,\n    setCountry,\n    setNewCountry,\n    updateCountryName,\n} from '../../redux/ticket/ticket-slice';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { CountryCode, countryList } from '@railmapgen/rmg-palette-resources';\nimport { useTranslation } from 'react-i18next';\nimport useTranslatedName from '../hooks/use-translated-name';\n\nexport default function CountrySection() {\n    const { t, i18n } = useTranslation();\n    const translateName = useTranslatedName();\n\n    const dispatch = useRootDispatch();\n\n    const { country, newCountry, countryName } = useRootSelector(state => state.ticket);\n\n    const countryOptions = {\n        ...countryList\n            .map(country => [country.id, translateName(country.name)]) // translate country name\n            .sort((a, b) => a[1].localeCompare(b[1], i18n.languages[0])) // sort\n            .reduce<Record<string, string>>((acc, cur) => {\n                if (cur[0] === CountryCode.UN) {\n                    // exclude customise\n                    return acc;\n                } else {\n                    return { ...acc, [cur[0]]: cur[1] };\n                }\n            }, {}), // associate to obj\n        new: t('Add a country/region...'),\n    };\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('Country / Region'),\n            value: country,\n            options: countryOptions,\n            onChange: value => dispatch(setCountry(value as CountryCode | 'new')),\n        },\n        {\n            type: 'input',\n            label: t('Country/region code'),\n            placeholder: 'e.g. CN, HK, JP (ISO 3166-1 alpha-2)',\n            value: newCountry,\n            onChange: value => dispatch(setNewCountry(value)),\n            hidden: country !== 'new',\n        },\n    ];\n\n    return (\n        <Box as=\"section\">\n            <Heading as=\"h5\" size=\"sm\" mb={2}>\n                {t('Country / Region')}\n            </Heading>\n\n            <RmgFields fields={fields} />\n            {country === 'new' && (\n                <MultiLangEntryCard\n                    entries={countryName}\n                    onUpdate={(id, changes) => dispatch(updateCountryName({ id, changes }))}\n                    onAdd={lang => dispatch(addCountryName(lang))}\n                    onRemove={id => dispatch(removeCountryName(id))}\n                />\n            )}\n        </Box>\n    );\n}\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport MultiLangEntryCard from './multi-lang-entry-card';\nimport { addCityName, removeCityName, setCity, updateCityName } from '../../redux/ticket/ticket-slice';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { useTranslation } from 'react-i18next';\n\nexport default function CitySection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const { city, cityName } = useRootSelector(state => state.ticket);\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'input',\n            label: t('City code'),\n            placeholder: 'e.g. hongkong, guangzhou, shanghai',\n            value: city,\n            onChange: value => dispatch(setCity(value)),\n            validator: value => value !== '' && !value.match(/[^a-z]/),\n        },\n    ];\n\n    return (\n        <Box as=\"section\">\n            <Heading as=\"h5\" size=\"sm\" mt={3} mb={2}>\n                {t('City')}\n            </Heading>\n\n            <RmgFields fields={fields} />\n            <MultiLangEntryCard\n                entries={cityName}\n                onUpdate={(id, changes) => dispatch(updateCityName({ id, changes }))}\n                onAdd={lang => dispatch(addCityName(lang))}\n                onRemove={id => dispatch(removeCityName(id))}\n            />\n        </Box>\n    );\n}\n","import React, { useState } from 'react';\nimport { Box, Button, Flex, Heading, HStack, IconButton } from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField, RmgLineBadge } from '@railmapgen/rmg-components';\nimport { ColourHex, MonoColour, Translation } from '@railmapgen/rmg-palette-resources';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport {\n    addLine,\n    addLineName,\n    copyLine,\n    removeLine,\n    removeLineName,\n    updateLineBgColour,\n    updateLineFgColour,\n    updateLineId,\n    updateLineName,\n} from '../../redux/ticket/ticket-slice';\nimport MultiLangEntryCard from './multi-lang-entry-card';\nimport { MdAdd, MdContentCopy, MdDelete, MdEdit } from 'react-icons/md';\nimport { translationEntitySelector } from '../../redux/ticket/util';\nimport { useTranslation } from 'react-i18next';\nimport useTranslatedName from '../hooks/use-translated-name';\n\nexport default function LinesSection() {\n    const { t } = useTranslation();\n    const translateName = useTranslatedName();\n    const dispatch = useRootDispatch();\n\n    const lines = useRootSelector(state => state.ticket.lines);\n\n    const [selectedLine, setSelectedLine] = useState(Object.keys(lines)[0]);\n\n    const getFields = (entryId: string): RmgFieldsField[] => {\n        const line = lines[entryId];\n\n        if (!line) {\n            return [];\n        }\n\n        return [\n            {\n                type: 'input',\n                label: t('Line code'),\n                placeholder: 'e.g. twl, gz1, sh1',\n                value: line.id,\n                onChange: value => dispatch(updateLineId({ entryId, lineId: value })),\n                validator: value => value !== '' && !value.match(/[^a-z0-9]/),\n            },\n            {\n                type: 'input',\n                label: t('Background colour'),\n                variant: 'color',\n                value: line.colour,\n                onChange: value => dispatch(updateLineBgColour({ entryId, bgColour: value as ColourHex })),\n            },\n            {\n                type: 'select',\n                label: t('Foreground colour'),\n                value: line.fg,\n                options: {\n                    [MonoColour.white]: t('White'),\n                    [MonoColour.black]: t('Black'),\n                },\n                onChange: value => dispatch(updateLineFgColour({ entryId, fgColour: value as MonoColour })),\n            },\n        ];\n    };\n\n    return (\n        <Box as=\"section\">\n            <Flex mt={3} mb={2} alignItems=\"center\">\n                <Heading as=\"h5\" size=\"sm\" mr=\"auto\">\n                    {t('Lines')}\n                </Heading>\n\n                <Button size=\"xs\" variant=\"ghost\" leftIcon={<MdAdd />} mr={1} onClick={() => dispatch(addLine())}>\n                    {t('Add a line')}\n                </Button>\n            </Flex>\n\n            <HStack flexWrap=\"wrap\" sx={{ '& .chakra-badge': { mb: 1 } }}>\n                {Object.entries(lines).map(([entryId, line]) => {\n                    const nameTranslation = translationEntitySelector\n                        .selectAll(line.nameEntity)\n                        .reduce<Translation>((acc, cur) => ({ ...acc, [cur.lang]: cur.name }), {});\n                    const nameToShow = translateName(nameTranslation);\n\n                    return (\n                        <RmgLineBadge\n                            key={entryId}\n                            name={nameToShow}\n                            bg={line.colour}\n                            fg={line.fg}\n                            actions={\n                                <>\n                                    <IconButton\n                                        size=\"xs\"\n                                        variant=\"ghost\"\n                                        color={line.fg}\n                                        aria-label={t('Edit') + ' ' + nameToShow}\n                                        title={t('Edit') + ' ' + nameToShow}\n                                        icon={<MdEdit />}\n                                        onClick={() => setSelectedLine(entryId)}\n                                    />\n                                    <IconButton\n                                        size=\"xs\"\n                                        variant=\"ghost\"\n                                        color={line.fg}\n                                        aria-label={t('Copy') + ' ' + nameToShow}\n                                        title={t('Copy') + ' ' + nameToShow}\n                                        icon={<MdContentCopy />}\n                                        onClick={() => dispatch(copyLine(entryId))}\n                                    />\n                                    <IconButton\n                                        size=\"xs\"\n                                        variant=\"ghost\"\n                                        color={line.fg}\n                                        aria-label={t('Remove') + ' ' + nameToShow}\n                                        title={t('Remove') + ' ' + nameToShow}\n                                        icon={<MdDelete />}\n                                        onClick={() => dispatch(removeLine(entryId))}\n                                    />\n                                </>\n                            }\n                        />\n                    );\n                })}\n            </HStack>\n\n            <RmgFields fields={getFields(selectedLine)} />\n            <MultiLangEntryCard\n                entries={lines[selectedLine]?.nameEntity}\n                onUpdate={(id, changes) => dispatch(updateLineName({ entryId: selectedLine, id, changes }))}\n                onAdd={lang => dispatch(addLineName({ entryId: selectedLine, lang }))}\n                onRemove={id => dispatch(removeLineName({ entryId: selectedLine, id }))}\n            />\n        </Box>\n    );\n}\n","import {\n    Button,\n    Heading,\n    HStack,\n    Icon,\n    Link,\n    ListItem,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    OrderedList,\n    Text,\n    UnorderedList,\n} from '@chakra-ui/react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {\n    getGitHubIssueDetailsBlock,\n    GITHUB_ISSUE_PREAMBLE,\n    INVALID_REASON,\n    InvalidReasonType,\n} from '../../util/constants';\nimport { MdContentCopy, MdOpenInNew } from 'react-icons/md';\nimport { RmgDebouncedTextarea } from '@railmapgen/rmg-components';\nimport { useRootSelector } from '../../redux';\nimport { ticketSelectors } from '../../redux/ticket/ticket-slice';\nimport { useTranslation } from 'react-i18next';\nimport useTranslatedName from '../hooks/use-translated-name';\n\ninterface SubmitModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function SubmitModal(props: SubmitModalProps) {\n    const { isOpen, onClose } = props;\n\n    const { t } = useTranslation();\n    const translateName = useTranslatedName();\n\n    const [countryErrors, setCountryErrors] = useState<InvalidReasonType[]>([]);\n    const [cityErrors, setCityErrors] = useState<InvalidReasonType[]>([]);\n    const [lineErrors, setLineErrors] = useState<Record<string, InvalidReasonType[]>>({});\n    const [isIgnoreErrors, setIsIgnoreErrors] = useState(false);\n\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n    const ticket = useRootSelector(state => state.ticket);\n    const countryEntry = ticketSelectors.getCountryEntry(ticket);\n    const cityEntry = ticketSelectors.getCityEntry(ticket);\n    const paletteList = ticketSelectors.getPalettes(ticket);\n\n    useEffect(() => {\n        if (isOpen) {\n            setCountryErrors(ticketSelectors.getCountryErrors(ticket));\n            setCityErrors(ticketSelectors.getCityErrors(ticket));\n            setLineErrors(ticketSelectors.getLineErrors(ticket));\n        } else {\n            setIsIgnoreErrors(false);\n        }\n    }, [isOpen]);\n\n    const issueBody = [\n        `**Justification:** ${t(\n            'Please provide any source or justification or we will not proceed with your request.'\n        )} (REPLACE ME)`,\n        GITHUB_ISSUE_PREAMBLE,\n        getGitHubIssueDetailsBlock('country', countryEntry),\n        getGitHubIssueDetailsBlock('city', cityEntry),\n        getGitHubIssueDetailsBlock('lines', paletteList),\n    ].join('\\n\\n');\n\n    const fullSearchParams = new URLSearchParams({\n        template: 'new-palettes-request.md',\n        label: 'resources',\n        title: 'Resources: New palettes of ' + cityEntry?.name?.en,\n        body: issueBody,\n    });\n\n    const manualSearchParams = new URLSearchParams({\n        template: 'new-palettes-request.md',\n        label: 'resources',\n        title: 'Resources: New palettes of ' + cityEntry?.name?.en,\n    });\n\n    const handleCopy = async () => {\n        if (textareaRef?.current) {\n            textareaRef.current.select();\n            await navigator.clipboard.writeText(issueBody);\n        }\n    };\n\n    const isContainError =\n        countryErrors.length > 0 || cityErrors.length > 0 || Object.values(lineErrors).flat().length > 0;\n\n    return (\n        <Modal blockScrollOnMount={false} isOpen={isOpen} onClose={onClose} scrollBehavior=\"inside\">\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('Submit palettes')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    {isContainError && (\n                        <Text>\n                            {t(\n                                'Your inputs contain the following errors. Please consider fixing it before submitting.'\n                            )}\n                        </Text>\n                    )}\n\n                    {countryErrors.length > 0 && (\n                        <>\n                            <Heading as=\"h5\" size=\"sm\" my={2}>\n                                {t('Country / Region')}\n                            </Heading>\n                            <UnorderedList aria-label=\"List of country errors\">\n                                {countryErrors.map((e, i) => (\n                                    <ListItem key={i}>{translateName(INVALID_REASON[e])}</ListItem>\n                                ))}\n                            </UnorderedList>\n                        </>\n                    )}\n\n                    {cityErrors.length > 0 && (\n                        <>\n                            <Heading as=\"h5\" size=\"sm\" my={2}>\n                                {t('City')}\n                            </Heading>\n                            <UnorderedList aria-label=\"List of city errors\">\n                                {cityErrors.map((e, i) => (\n                                    <ListItem key={i}>{translateName(INVALID_REASON[e])}</ListItem>\n                                ))}\n                            </UnorderedList>\n                        </>\n                    )}\n\n                    {Object.values(lineErrors).flat().length > 0 && (\n                        <>\n                            <Heading as=\"h5\" size=\"sm\" my={2}>\n                                {t('Lines')}\n                            </Heading>\n                            <UnorderedList aria-label=\"List of line errors\">\n                                {Object.entries(lineErrors).map(([item, errors]) => (\n                                    <ListItem key={item}>\n                                        {item}\n                                        <UnorderedList>\n                                            {errors.map((e, i) => (\n                                                <ListItem key={i}>{translateName(INVALID_REASON[e])}</ListItem>\n                                            ))}\n                                        </UnorderedList>\n                                    </ListItem>\n                                ))}\n                            </UnorderedList>\n                        </>\n                    )}\n\n                    {(!isContainError || isIgnoreErrors) && (\n                        <>\n                            <Text>\n                                {t(\"If the button below doesn't work for you, please follow the instructions below:\")}\n                            </Text>\n                            <OrderedList>\n                                <ListItem>\n                                    {t('Open')}{' '}\n                                    <Link\n                                        color=\"teal.500\"\n                                        href={\n                                            'https://github.com/railmapgen/rmg-palette/issues/new?' +\n                                            manualSearchParams.toString()\n                                        }\n                                        isExternal={true}\n                                    >\n                                        Issue: New Palettes Request <Icon as={MdOpenInNew} />\n                                    </Link>\n                                </ListItem>\n                                <ListItem>\n                                    {t('Paste following text to the issue body and add anything you want to say.')}{' '}\n                                    <Button size=\"xs\" leftIcon={<MdContentCopy />} onClick={handleCopy}>\n                                        {t('Copy')}\n                                    </Button>\n                                    <RmgDebouncedTextarea\n                                        ref={textareaRef}\n                                        isReadOnly={true}\n                                        defaultValue={issueBody}\n                                        onClick={({ target }) => (target as HTMLTextAreaElement).select()}\n                                    />\n                                </ListItem>\n                            </OrderedList>\n                        </>\n                    )}\n                </ModalBody>\n\n                <ModalFooter>\n                    {!isIgnoreErrors && isContainError ? (\n                        <HStack>\n                            <Button onClick={() => setIsIgnoreErrors(true)}>{t('Submit anyway')}</Button>\n                            <Button colorScheme=\"primary\" onClick={onClose}>\n                                {t('Go back')}\n                            </Button>\n                        </HStack>\n                    ) : (\n                        <Button\n                            colorScheme=\"primary\"\n                            onClick={() =>\n                                window.open(\n                                    'https://github.com/railmapgen/rmg-palette/issues/new?' +\n                                        fullSearchParams.toString(),\n                                    '_blank'\n                                )\n                            }\n                        >\n                            {t('1-click open issue')}\n                        </Button>\n                    )}\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import { Button, Flex, HStack } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport CountrySection from './country-section';\nimport CitySection from './city-section';\nimport LinesSection from './lines-section';\nimport { resetTicket } from '../../redux/ticket/ticket-slice';\nimport { useRootDispatch } from '../../redux';\nimport SubmitModal from '../modal/submit-modal';\nimport { useNavigate } from 'react-router-dom';\nimport { RmgPage } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\nimport rmgRuntime from '@railmapgen/rmg-runtime';\nimport { Events } from '../../util/constants';\n\nexport default function TicketView() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n    const navigate = useNavigate();\n\n    const [isSubmitModalOpen, setIsSubmitModalOpen] = useState(false);\n\n    const handleReset = () => {\n        dispatch(resetTicket());\n        rmgRuntime.event(Events.RESET_TICKET, {});\n    };\n\n    return (\n        <RmgPage\n            px={2}\n            pt={2}\n            sx={{\n                width: { base: '100%', md: 520 },\n            }}\n        >\n            <Flex direction=\"column\" flex={1} overflowY=\"auto\">\n                <CountrySection />\n                <CitySection />\n                <LinesSection />\n            </Flex>\n\n            <Flex my={2}>\n                <Button size=\"sm\" onClick={() => navigate('/')}>\n                    {t('Go back')}\n                </Button>\n\n                <HStack ml=\"auto\">\n                    <Button size=\"sm\" variant=\"outline\" onClick={handleReset}>\n                        {t('Reset')}\n                    </Button>\n                    <Button size=\"sm\" colorScheme=\"primary\" onClick={() => setIsSubmitModalOpen(true)}>\n                        {t('Submit')}\n                    </Button>\n                </HStack>\n            </Flex>\n\n            <SubmitModal isOpen={isSubmitModalOpen} onClose={() => setIsSubmitModalOpen(false)} />\n        </RmgPage>\n    );\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useTranslatedName","i18n","useTranslation","name","languages","map","lang","find","undefined","LanguageCode","MultiLangEntryCard","props","onUpdate","onAdd","onRemove","entries","translationEntityAdapter","t","getFields","id","entity","translationEntitySelector","languageOptions","Object","reduce","acc","cur","type","label","value","options","onChange","validator","handleAddEntry","values","filter","l","entities","direction","i","sx","flex","fields","noLabel","ids","length","size","variant","title","onClick","icon","minW","CountrySection","translateName","dispatch","useRootDispatch","useRootSelector","state","ticket","country","newCountry","countryName","countryOptions","countryList","sort","a","b","localeCompare","CountryCode","new","setCountry","placeholder","setNewCountry","hidden","as","mb","changes","updateCountryName","addCountryName","removeCountryName","CitySection","city","cityName","setCity","match","mt","updateCityName","addCityName","removeCityName","LinesSection","lines","useState","keys","selectedLine","setSelectedLine","alignItems","mr","leftIcon","addLine","flexWrap","entryId","line","nameTranslation","nameEntity","nameToShow","bg","colour","fg","actions","color","copyLine","removeLine","updateLineId","lineId","updateLineBgColour","bgColour","MonoColour","updateLineFgColour","fgColour","updateLineName","addLineName","removeLineName","SubmitModal","isOpen","onClose","countryErrors","setCountryErrors","cityErrors","setCityErrors","lineErrors","setLineErrors","isIgnoreErrors","setIsIgnoreErrors","textareaRef","useRef","countryEntry","ticketSelectors","cityEntry","paletteList","useEffect","issueBody","GITHUB_ISSUE_PREAMBLE","getGitHubIssueDetailsBlock","join","fullSearchParams","URLSearchParams","template","en","body","manualSearchParams","handleCopy","current","select","navigator","clipboard","writeText","isContainError","flat","blockScrollOnMount","scrollBehavior","my","e","INVALID_REASON","item","errors","href","toString","isExternal","MdOpenInNew","ref","isReadOnly","defaultValue","target","colorScheme","window","open","TicketView","navigate","useNavigate","isSubmitModalOpen","setIsSubmitModalOpen","px","pt","width","base","md","overflowY","ml","resetTicket","rmgRuntime","Events","_typeof","_regeneratorRuntime","module","exports","__esModule","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply"],"sourceRoot":""}