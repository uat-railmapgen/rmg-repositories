{"version":3,"file":"static/js/PaletteView.b2e43636.chunk.js","mappings":"mGAAA,IAAIA,EAAM,CACT,cAAe,CACd,KACA,MAED,YAAa,CACZ,KACA,MAED,iBAAkB,CACjB,IACA,MAED,eAAgB,CACf,KACA,MAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,IACA,MAED,eAAgB,CACf,IACA,MAED,iBAAkB,CACjB,KACA,MAED,aAAc,CACb,IACA,MAED,cAAe,CACd,KACA,MAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,KAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,IACA,MAED,eAAgB,CACf,KACA,MAED,kBAAmB,CAClB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,gBAAiB,CAChB,IACA,IAED,aAAc,CACb,KACA,MAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,aAAc,CACb,KACA,MAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,eAAgB,CACf,KACA,MAED,YAAa,CACZ,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,IACA,MAED,aAAc,CACb,KACA,KAED,cAAe,CACd,KACA,MAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,KACA,MAED,cAAe,CACd,KACA,MAED,eAAgB,CACf,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,aAAc,CACb,KACA,MAED,YAAa,CACZ,KACA,MAED,aAAc,CACb,KACA,MAED,cAAe,CACd,KACA,KAED,aAAc,CACb,KACA,MAED,eAAgB,CACf,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,KAED,sBAAuB,CACtB,IACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,cAAe,CACd,IACA,GAED,gBAAiB,CAChB,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,eAAgB,CACf,KACA,MAED,aAAc,CACb,KACA,MAED,eAAgB,CACf,IACA,KAED,mBAAoB,CACnB,KACA,MAED,cAAe,CACd,KACA,MAED,aAAc,CACb,KACA,MAED,YAAa,CACZ,KACA,MAED,cAAe,CACd,KACA,MAED,YAAa,CACZ,IACA,MAED,gBAAiB,CAChB,KACA,MAED,iBAAkB,CACjB,KACA,OAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAAa,OAAOC,OAAOD,KAAKb,IAC3DC,EAAoBW,GAAK,KACzBG,EAAOC,QAAUf,G,0FCvUF,SAASgB,IACpB,IAAQC,GAASC,EAAAA,EAAAA,KAATD,KAER,OAAO,SAACE,GAAuB,IAAD,IAC1B,2BACIF,EAAKG,UAAUrB,KAAI,SAAAsB,GAAI,OAAIF,EAAKE,MAAuBC,MAAK,SAAAH,GAAI,YAAaI,IAATJ,YADxE,QAEIA,EAAKK,EAAAA,GAAAA,gBAFT,QAGI,yB,8NCAG,SAASC,IACpB,IAAQC,GAAMR,EAAAA,EAAAA,KAANQ,EACFC,GAAgBX,EAAAA,EAAAA,KAEhBY,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAkBC,EAAAA,EAAAA,KAAgB,SAAAC,GAAK,OAAIA,EAAMC,IAAIH,mBAErDI,EAAiBC,EAAAA,GAAAA,QACnB,SAACC,EAAKC,GACF,OAAO,kBAAKD,GAAZ,cAAkBC,EAAI5B,GAAKgB,EAAcY,EAAIpB,UAEjD,CAAE,GAAIO,EAAE,sBAGNc,EAA2B,CAC7B,CACIC,KAAM,SACNC,MAAOhB,EAAE,oBACTiB,MAAOX,EACPY,QAASR,EACTS,gBAAiB,CAAC,IAClBC,SAAU,SAAAH,GAAK,OAAIf,GAASmB,EAAAA,EAAAA,GAAmBJ,OAIvD,OACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAWH,OAAQA,KAEnB,SAAC,KAAD,CAAQQ,GAAG,OAAX,UACI,SAAC,KAAD,CAAQC,QAAQ,QAAQC,KAAK,KAAKC,YAAY,OAAOC,QAAS,kBAAMtB,EAAS,SAA7E,SACKJ,EAAE,qB,+DCpBR,SAAS2B,EAAWC,GAC/B,IAEMC,EAnBS,SAACC,GAChB,OAAsCC,EAAAA,EAAAA,UAAyB,IAA/D,eAAOF,EAAP,KAAoBG,EAApB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACN,oBAAwFH,EAAxF,QACKlD,MAAK,SAAAQ,GAAM,OAAI4C,EAAe5C,EAAO8C,YACrCC,OAAM,kBAAMH,EAAe,SACjC,CAACF,IAEGD,EAUaO,CAFHR,EAATS,MAGFpC,GAAgBX,EAAAA,EAAAA,KAEtB,OACI,SAAC,KAAD,CAAQgD,SAAS,OAAOC,GAAI,CAAE,kBAAmB,CAAEC,GAAI,IAAvD,SACKX,EAAYxD,KAAI,SAAAoE,GAAI,OACjB,SAAC,KAAD,CAEIhD,KAAMQ,EAAcwC,EAAKhD,MACzBiD,GAAID,EAAKC,IAAMC,EAAAA,GAAAA,MACfC,GAAIH,EAAKI,QAHJJ,EAAKxD,S,wBCpBf,SAAS6D,IACpB,OAAoBtD,EAAAA,EAAAA,KAAZQ,EAAR,EAAQA,EAAGT,EAAX,EAAWA,KACLU,GAAgBX,EAAAA,EAAAA,KAChBY,GAAW6C,EAAAA,EAAAA,MACX3C,GAAWC,EAAAA,EAAAA,MAEXC,GAAkBC,EAAAA,EAAAA,KAAgB,SAAAC,GAAK,OAAIA,EAAMC,IAAIH,mBACrD0C,EAAUC,EAAAA,GAAAA,QAAgB,SAAAZ,GAAI,OAAIA,EAAKa,UAAY5C,KAEnD6C,GAA2CC,EAAAA,EAAAA,UAC7C,iBAAM,CACF,CACIC,WAAYrD,EAAE,QACdsD,MAAO,OACPC,eAAgB,gBAAGtC,EAAH,EAAGA,MAAH,OAA6ChB,EAAcgB,IAC3EuC,UAAU,GAEd,CACIH,WAAYrD,EAAE,SACdsD,MAAO,KACPG,aAAc,gBAAGxC,EAAH,EAAGA,MAAH,OAA2C,SAACU,EAAD,CAAYU,KAAMpB,KAC3EyC,KAAM,EACNC,YAAY,EACZC,WAAW,GAEf,CACIP,WAAYrD,EAAE,UACdsD,MAAO,KACPG,aAAc,gBAAGxC,EAAH,EAAGA,MAAH,OACV,SAAC,KAAD,CACIO,KAAK,KACL,aAAYxB,EAAE,aACd6D,MAAO7D,EAAE,aACT8D,MAAM,SAAC,MAAD,IACNpC,QAAS,kBAAMqC,EAAe9C,OAGtC2C,WAAW,EACXI,MAAO,OAGf,CAACzE,EAAK0E,WAGJC,GAAgBd,EAAAA,EAAAA,UAAQ,iBAAO,CAAEQ,WAAW,KAAS,IAErDG,EAAc,mCAAG,WAAO9E,GAAP,2FAEToD,EAAOY,EAAAA,GAAAA,MAAc,SAAAZ,GAAI,OAAIA,EAAKpD,KAAOA,KAFhC,SAIa,oBACyDA,EADzD,QAJb,OAITkF,EAJS,OAOEC,EAAaD,EAAtBjC,QAERhC,GAASmE,EAAAA,EAAAA,IAAe,CAAEhC,KAAAA,EAAM+B,SAAAA,KAChChE,EAAS,QAVM,kDAYfkE,QAAQC,MAAM,mDAAd,MAZe,0DAAH,sDAgBpB,OACI,SAAC,IAAD,WACI,SAAC,EAAAC,YAAD,CACIxB,QAASA,EACTG,WAAYA,EACZe,cAAeA,EACfO,SAAU,qBAAGC,KAAgBzF,IAC7B0F,aAAc,GACdC,UAAW,GACXC,mBAAmB,EACnBC,2BAA2B,EAC3BC,OAAOC,MCjFR,SAASC,IACpB,OACI,UAAC,KAAD,YACI,SAAClF,EAAD,KACA,SAAC+C,EAAD","sources":["../node_modules/@railmapgen/rmg-palette-resources/palettes|lazy|/^/.//.*/.js$/|chunkName: palettes|groupOptions: {}|namespace object","components/hooks/use-translated-name.tsx","components/page-header.tsx","components/ag-grid/line-badges.tsx","components/ag-grid/palette-grid.tsx","components/palette-view/palette-view.tsx"],"sourcesContent":["var map = {\n\t\"./athens.js\": [\n\t\t9442,\n\t\t6869\n\t],\n\t\"./baku.js\": [\n\t\t8722,\n\t\t6810\n\t],\n\t\"./barcelona.js\": [\n\t\t513,\n\t\t5792\n\t],\n\t\"./beijing.js\": [\n\t\t3949,\n\t\t2358\n\t],\n\t\"./berlin.js\": [\n\t\t298,\n\t\t436\n\t],\n\t\"./bucharest.js\": [\n\t\t7444,\n\t\t5520\n\t],\n\t\"./budapest.js\": [\n\t\t6935,\n\t\t1321\n\t],\n\t\"./cairo.js\": [\n\t\t9810,\n\t\t5189\n\t],\n\t\"./changsha.js\": [\n\t\t124,\n\t\t6739\n\t],\n\t\"./chengdu.js\": [\n\t\t858,\n\t\t7599\n\t],\n\t\"./chongqing.js\": [\n\t\t2141,\n\t\t7081\n\t],\n\t\"./daegu.js\": [\n\t\t143,\n\t\t4874\n\t],\n\t\"./dalian.js\": [\n\t\t6295,\n\t\t9186\n\t],\n\t\"./delhi.js\": [\n\t\t2893,\n\t\t8719\n\t],\n\t\"./dongguan.js\": [\n\t\t6621,\n\t\t7206\n\t],\n\t\"./dortmund.js\": [\n\t\t6604,\n\t\t134\n\t],\n\t\"./edinburgh.js\": [\n\t\t9743,\n\t\t9770\n\t],\n\t\"./eskisehir.js\": [\n\t\t5570,\n\t\t8189\n\t],\n\t\"./foshan.js\": [\n\t\t8004,\n\t\t9898\n\t],\n\t\"./frankfurt.js\": [\n\t\t261,\n\t\t4447\n\t],\n\t\"./glasgow.js\": [\n\t\t1902,\n\t\t1847\n\t],\n\t\"./gothenburg.js\": [\n\t\t3933,\n\t\t6951\n\t],\n\t\"./guadalajara.js\": [\n\t\t2517,\n\t\t1392\n\t],\n\t\"./guangzhou.js\": [\n\t\t5672,\n\t\t5449\n\t],\n\t\"./hangzhou.js\": [\n\t\t264,\n\t\t17\n\t],\n\t\"./hanoi.js\": [\n\t\t2611,\n\t\t8237\n\t],\n\t\"./harbin.js\": [\n\t\t7460,\n\t\t886\n\t],\n\t\"./hochiminh.js\": [\n\t\t7391,\n\t\t4788\n\t],\n\t\"./hongkong.js\": [\n\t\t9392,\n\t\t3106\n\t],\n\t\"./istanbul.js\": [\n\t\t8318,\n\t\t4073\n\t],\n\t\"./jinan.js\": [\n\t\t6510,\n\t\t5303\n\t],\n\t\"./kansai.js\": [\n\t\t3098,\n\t\t310\n\t],\n\t\"./kaohsiung.js\": [\n\t\t2120,\n\t\t5081\n\t],\n\t\"./klangvalley.js\": [\n\t\t6319,\n\t\t1951\n\t],\n\t\"./kunming.js\": [\n\t\t5273,\n\t\t8183\n\t],\n\t\"./lima.js\": [\n\t\t1921,\n\t\t8140\n\t],\n\t\"./lisbon.js\": [\n\t\t3693,\n\t\t3417\n\t],\n\t\"./london.js\": [\n\t\t710,\n\t\t3875\n\t],\n\t\"./macao.js\": [\n\t\t8581,\n\t\t425\n\t],\n\t\"./madrid.js\": [\n\t\t8104,\n\t\t7826\n\t],\n\t\"./milan.js\": [\n\t\t7157,\n\t\t2028\n\t],\n\t\"./montreal.js\": [\n\t\t7058,\n\t\t9890\n\t],\n\t\"./munich.js\": [\n\t\t7916,\n\t\t5944\n\t],\n\t\"./nanjing.js\": [\n\t\t9306,\n\t\t4737\n\t],\n\t\"./naples.js\": [\n\t\t4462,\n\t\t3579\n\t],\n\t\"./newtaipei.js\": [\n\t\t5137,\n\t\t8975\n\t],\n\t\"./osaka.js\": [\n\t\t8917,\n\t\t1614\n\t],\n\t\"./oslo.js\": [\n\t\t3559,\n\t\t5066\n\t],\n\t\"./other.js\": [\n\t\t9025,\n\t\t2168\n\t],\n\t\"./ottawa.js\": [\n\t\t2739,\n\t\t743\n\t],\n\t\"./paris.js\": [\n\t\t2694,\n\t\t8291\n\t],\n\t\"./qingdao.js\": [\n\t\t5589,\n\t\t8413\n\t],\n\t\"./rheinruhr.js\": [\n\t\t6005,\n\t\t6195\n\t],\n\t\"./sanfrancisco.js\": [\n\t\t5831,\n\t\t441\n\t],\n\t\"./sanktpeterburg.js\": [\n\t\t585,\n\t\t6546\n\t],\n\t\"./santiago.js\": [\n\t\t7598,\n\t\t5288\n\t],\n\t\"./saopaulo.js\": [\n\t\t9898,\n\t\t3658\n\t],\n\t\"./seoul.js\": [\n\t\t1549,\n\t\t2194\n\t],\n\t\"./shanghai.js\": [\n\t\t2983,\n\t\t1342\n\t],\n\t\"./shenyang.js\": [\n\t\t7436,\n\t\t7153\n\t],\n\t\"./shenzhen.js\": [\n\t\t4142,\n\t\t5885\n\t],\n\t\"./singapore.js\": [\n\t\t1963,\n\t\t6977\n\t],\n\t\"./stockholm.js\": [\n\t\t6345,\n\t\t7719\n\t],\n\t\"./suzhou.js\": [\n\t\t205,\n\t\t9\n\t],\n\t\"./taichung.js\": [\n\t\t5982,\n\t\t9450\n\t],\n\t\"./taipei.js\": [\n\t\t1705,\n\t\t1608\n\t],\n\t\"./tehran.js\": [\n\t\t4183,\n\t\t2871\n\t],\n\t\"./tianjin.js\": [\n\t\t3780,\n\t\t2832\n\t],\n\t\"./tokyo.js\": [\n\t\t6007,\n\t\t1902\n\t],\n\t\"./toronto.js\": [\n\t\t827,\n\t\t530\n\t],\n\t\"./tyneandwear.js\": [\n\t\t2453,\n\t\t7101\n\t],\n\t\"./vienna.js\": [\n\t\t9225,\n\t\t4111\n\t],\n\t\"./wuhan.js\": [\n\t\t7045,\n\t\t5418\n\t],\n\t\"./wuxi.js\": [\n\t\t9830,\n\t\t2338\n\t],\n\t\"./xiamen.js\": [\n\t\t5077,\n\t\t4760\n\t],\n\t\"./xian.js\": [\n\t\t960,\n\t\t8759\n\t],\n\t\"./yokohama.js\": [\n\t\t5304,\n\t\t1568\n\t],\n\t\"./zhengzhou.js\": [\n\t\t1882,\n\t\t5562\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 7827;\nmodule.exports = webpackAsyncContext;","import { useTranslation } from 'react-i18next';\nimport { LanguageCode, Translation } from '@railmapgen/rmg-palette-resources';\n\nexport default function useTranslatedName(): (name: Translation) => string {\n    const { i18n } = useTranslation();\n\n    return (name: Translation) => {\n        return (\n            i18n.languages.map(lang => name[lang as LanguageCode]).find(name => name !== undefined) ??\n            name[LanguageCode.English] ??\n            '(Translation Error)'\n        );\n    };\n}\n","import { countryList } from '@railmapgen/rmg-palette-resources';\nimport { useDispatch } from 'react-redux';\nimport { setSelectedCountry } from '../redux/app/app-slice';\nimport { RmgFields, RmgFieldsField, RmgPageHeader } from '@railmapgen/rmg-components';\nimport { useRootSelector } from '../redux';\nimport { Button, HStack } from '@chakra-ui/react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport useTranslatedName from './hooks/use-translated-name';\n\nexport default function PageHeader() {\n    const { t } = useTranslation();\n    const translateName = useTranslatedName();\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const selectedCountry = useRootSelector(state => state.app.selectedCountry);\n\n    const countryOptions = countryList.reduce<Record<string, string>>(\n        (acc, cur) => {\n            return { ...acc, [cur.id]: translateName(cur.name) };\n        },\n        { '': t('Please select...') }\n    );\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('Country / Region'),\n            value: selectedCountry,\n            options: countryOptions,\n            disabledOptions: [''],\n            onChange: value => dispatch(setSelectedCountry(value as string)),\n        },\n    ];\n\n    return (\n        <RmgPageHeader>\n            <RmgFields fields={fields} />\n\n            <HStack ml=\"auto\">\n                <Button variant=\"solid\" size=\"sm\" colorScheme=\"teal\" onClick={() => navigate('/new')}>\n                    {t('Add a city')}\n                </Button>\n            </HStack>\n        </RmgPageHeader>\n    );\n}\n","import { HStack } from '@chakra-ui/react';\nimport { MonoColour } from '../../util/constants';\nimport { CityCode, PaletteEntry } from '@railmapgen/rmg-palette-resources';\nimport React, { useEffect, useState } from 'react';\nimport { RmgLineBadge } from '@railmapgen/rmg-components';\nimport useTranslatedName from '../hooks/use-translated-name';\n\nconst usePalette = (cityCode?: CityCode) => {\n    const [paletteList, setPaletteList] = useState<PaletteEntry[]>([]);\n\n    useEffect(() => {\n        import(/* webpackChunkName: \"palettes\" */ `@railmapgen/rmg-palette-resources/palettes/${cityCode}.js`)\n            .then(module => setPaletteList(module.default))\n            .catch(() => setPaletteList([]));\n    }, [cityCode]);\n\n    return paletteList;\n};\n\ninterface LineBadgesProps {\n    city: CityCode;\n}\n\nexport default function LineBadges(props: LineBadgesProps) {\n    const { city } = props;\n\n    const paletteList = usePalette(city);\n    const translateName = useTranslatedName();\n\n    return (\n        <HStack flexWrap=\"wrap\" sx={{ '& .chakra-badge': { mb: 1 } }}>\n            {paletteList.map(line => (\n                <RmgLineBadge\n                    key={line.id}\n                    name={translateName(line.name)}\n                    fg={line.fg || MonoColour.white}\n                    bg={line.colour}\n                />\n            ))}\n        </HStack>\n    );\n}\n","import { RmgAgGrid, RmgAgGridColDef } from '@railmapgen/rmg-components';\nimport React, { useMemo } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { CityEntry, cityList } from '@railmapgen/rmg-palette-resources';\nimport LineBadges from './line-badges';\nimport { IconButton } from '@chakra-ui/react';\nimport { MdEdit } from 'react-icons/md';\nimport { populateTicket } from '../../redux/ticket/ticket-slice';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport useTranslatedName from '../hooks/use-translated-name';\n\nexport default function PaletteGrid() {\n    const { t, i18n } = useTranslation();\n    const translateName = useTranslatedName();\n    const dispatch = useRootDispatch();\n    const navigate = useNavigate();\n\n    const selectedCountry = useRootSelector(state => state.app.selectedCountry);\n    const rowData = cityList.filter(city => city.country === selectedCountry);\n\n    const columnDefs: RmgAgGridColDef<CityEntry>[] = useMemo(\n        () => [\n            {\n                headerName: t('City'),\n                field: 'name',\n                valueFormatter: ({ value }: { value: CityEntry['name'] }) => translateName(value),\n                wrapText: true,\n            },\n            {\n                headerName: t('Lines'),\n                field: 'id',\n                cellRenderer: ({ value }: { value: CityEntry['id'] }) => <LineBadges city={value} />,\n                flex: 1,\n                autoHeight: true,\n                resizable: false,\n            },\n            {\n                headerName: t('Action'),\n                field: 'id',\n                cellRenderer: ({ value }: { value: CityEntry['id'] }) => (\n                    <IconButton\n                        size=\"xs\"\n                        aria-label={t('Edit city')}\n                        title={t('Edit city')}\n                        icon={<MdEdit />}\n                        onClick={() => handleCityEdit(value)}\n                    />\n                ),\n                resizable: false,\n                width: 72,\n            },\n        ],\n        [i18n.language]\n    );\n\n    const defaultColDef = useMemo(() => ({ resizable: true }), []);\n\n    const handleCityEdit = async (id: string) => {\n        try {\n            const city = cityList.find(city => city.id === id)!;\n\n            const paletteModule = await import(\n                /* webpackChunkName: \"palettes\" */ `@railmapgen/rmg-palette-resources/palettes/${id}.js`\n            );\n            const { default: palettes } = paletteModule;\n\n            dispatch(populateTicket({ city, palettes }));\n            navigate('/new');\n        } catch (e) {\n            console.error('PaletteGrid.handleCityEdit():: Unexpected errors', e);\n        }\n    };\n\n    return (\n        <RmgAgGrid>\n            <AgGridReact\n                rowData={rowData}\n                columnDefs={columnDefs}\n                defaultColDef={defaultColDef}\n                getRowId={({ data }) => data.id}\n                headerHeight={36}\n                rowHeight={36}\n                suppressCellFocus={true}\n                suppressRowVirtualisation={true}\n                debug={process.env.NODE_ENV !== 'production'}\n            />\n        </RmgAgGrid>\n    );\n}\n","import { RmgPage } from '@railmapgen/rmg-components';\nimport React from 'react';\nimport PageHeader from '../page-header';\nimport PaletteGrid from '../ag-grid/palette-grid';\n\nexport default function PaletteView() {\n    return (\n        <RmgPage>\n            <PageHeader />\n            <PaletteGrid />\n        </RmgPage>\n    );\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","useTranslatedName","i18n","useTranslation","name","languages","lang","find","undefined","LanguageCode","PageHeader","t","translateName","dispatch","useDispatch","navigate","useNavigate","selectedCountry","useRootSelector","state","app","countryOptions","countryList","acc","cur","fields","type","label","value","options","disabledOptions","onChange","setSelectedCountry","ml","variant","size","colorScheme","onClick","LineBadges","props","paletteList","cityCode","useState","setPaletteList","useEffect","default","catch","usePalette","city","flexWrap","sx","mb","line","fg","MonoColour","bg","colour","PaletteGrid","useRootDispatch","rowData","cityList","country","columnDefs","useMemo","headerName","field","valueFormatter","wrapText","cellRenderer","flex","autoHeight","resizable","title","icon","handleCityEdit","width","language","defaultColDef","paletteModule","palettes","populateTicket","console","error","AgGridReact","getRowId","data","headerHeight","rowHeight","suppressCellFocus","suppressRowVirtualisation","debug","process","PaletteView"],"sourceRoot":""}