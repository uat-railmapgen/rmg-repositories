{"version":3,"file":"static/js/2756.71e5f7ee.chunk.js","mappings":"6IAGMA,EAAc,SAACC,GACjB,OAAQA,GACJ,KAAKC,EAAAA,GAAAA,GACD,OAAO,IACX,KAAKA,EAAAA,GAAAA,KACD,OAAO,EACX,KAAKA,EAAAA,GAAAA,KACD,OAAO,GACX,KAAKA,EAAAA,GAAAA,MACD,OAAQ,GAEnB,EASD,SAASC,EAAgBC,GACrB,IAAQC,EAA+CD,EAA/CC,gBAAiBC,EAA8BF,EAA9BE,SAAUL,EAAoBG,EAApBH,SAAUM,EAAUH,EAAVG,MAEvCC,EAAcH,EAAgB,GAAGI,MAAM,MAAMC,OAC7CC,EAAcN,EAAgB,GAAGI,MAAM,MAAMC,OAE7CE,EACFX,IAAaC,EAAAA,GAAAA,MAAiBK,IAAUM,EAAAA,GAAAA,KAClC,MACAZ,IAAaC,EAAAA,GAAAA,OAAkBK,IAAUM,EAAAA,GAAAA,MACzC,QACA,SAEJC,EAAa,CACfC,KAAM,CACFC,OAAQhB,EAAYC,IAExBgB,EAAG,CACCC,GACKjB,IAAaC,EAAAA,GAAAA,MAAiB,GAAKD,IAAaC,EAAAA,GAAAA,MAAiB,GAAK,IACtEK,IAAUM,EAAAA,GAAAA,MAAkB,EAAIN,IAAUM,EAAAA,GAAAA,MAAkB,EAAI,GACrEM,EACIlB,IAAaC,EAAAA,GAAAA,IACN,GAAK,IAAMM,EAAc,GAAK,GAAKG,EAAc,GAClDV,IAAaC,EAAAA,GAAAA,KACb,GACA,GAAK,GAAK,IAAMM,EAAc,GAAK,GAAKG,EAAc,GAAK,GAAK,IAIlF,OACI,iCACI,iBACIS,EAAE,UACFC,cAAc,QACdC,OAAQhB,EAAW,kBAAoBD,EAAgB,GACvDkB,YAAa,EACbC,UAAS,iBAAYV,EAAWC,KAAKC,OAA5B,QAEb,eACIJ,WAAYA,EACZY,UAAS,oBAAeV,EAAWG,EAAEC,EAA5B,YAAiCJ,EAAWG,EAAEE,EAA9C,KACTM,KAAMnB,EAAW,kBAAoB,mBAHzC,UAKKD,EAAgB,GAAGI,MAAM,MAAMiB,KAAI,SAACC,EAAKC,GAAN,OAChC,iBAAcC,GAAI,GAAKD,EAAGE,UAAU,eAAeC,SAAU,GAA7D,SACKJ,GADMC,EADqB,IAKnCvB,EAAgB,GAAGI,MAAM,MAAMiB,KAAI,SAACC,EAAKK,GAAN,OAChC,iBAA4BH,GAAkB,GAAdrB,EAAmB,EAAI,EAAIwB,EAAGF,UAAU,eAAeC,SAAU,EAAjG,SACKJ,GADMnB,EAAcwB,EADO,SAQnD,CAED,WAAeC,EAAAA,EAAAA,MACX9B,GACA,SAAC+B,EAAWC,GAAZ,OACID,EAAU7B,gBAAgB+B,aAAeD,EAAU9B,gBAAgB+B,YACnEF,EAAU5B,WAAa6B,EAAU7B,UACjC4B,EAAUjC,WAAakC,EAAUlC,UACjCiC,EAAU3B,QAAU4B,EAAU5B,KAJlC,G","sources":["svgs/mtr/station/interchange-tick.tsx"],"sourcesContent":["import React, { memo } from 'react';\nimport { Direction, InterchangeInfo, Position } from '../../../constants/constants';\n\nconst getRotation = (position: Position): number => {\n    switch (position) {\n        case Position.UP:\n            return 180;\n        case Position.DOWN:\n            return 0;\n        case Position.LEFT:\n            return 90;\n        case Position.RIGHT:\n            return -90;\n    }\n};\n\ninterface InterchangeTickProps {\n    interchangeInfo: InterchangeInfo;\n    isPassed?: boolean;\n    position: Position;\n    repel?: Direction; // osi22\n}\n\nfunction InterchangeTick(props: InterchangeTickProps) {\n    const { interchangeInfo, isPassed, position, repel } = props;\n\n    const zhNameLines = interchangeInfo[4].split('\\\\').length;\n    const enNameLines = interchangeInfo[5].split('\\\\').length;\n\n    const textAnchor =\n        position === Position.LEFT || repel === Direction.left\n            ? 'end'\n            : position === Position.RIGHT || repel === Direction.right\n            ? 'start'\n            : 'middle';\n\n    const transforms = {\n        path: {\n            rotate: getRotation(position),\n        },\n        g: {\n            x:\n                (position === Position.LEFT ? -24 : position === Position.RIGHT ? 24 : 0) +\n                (repel === Direction.left ? -3 : repel === Direction.right ? 3 : 0),\n            y:\n                position === Position.UP\n                    ? -37 - 10 * (zhNameLines - 1) - 7 * (enNameLines - 1)\n                    : position === Position.DOWN\n                    ? 31\n                    : 6 - (20 + 10 * (zhNameLines - 1) + 7 * (enNameLines - 1) - 1) / 2,\n        },\n    };\n\n    return (\n        <>\n            <path\n                d=\"M0,0v17\"\n                strokeLinecap=\"round\"\n                stroke={isPassed ? 'var(--rmg-grey)' : interchangeInfo[2]}\n                strokeWidth={8}\n                transform={`rotate(${transforms.path.rotate})`}\n            />\n            <g\n                textAnchor={textAnchor}\n                transform={`translate(${transforms.g.x},${transforms.g.y})`}\n                fill={isPassed ? 'var(--rmg-grey)' : 'var(--rmg-black)'}\n            >\n                {interchangeInfo[4].split('\\\\').map((txt, i) => (\n                    <text key={i} dy={10 * i} className=\"rmg-name__zh\" fontSize={10}>\n                        {txt}\n                    </text>\n                ))}\n                {interchangeInfo[5].split('\\\\').map((txt, j) => (\n                    <text key={zhNameLines + j} dy={zhNameLines * 10 - 1 + 7 * j} className=\"rmg-name__en\" fontSize={7}>\n                        {txt}\n                    </text>\n                ))}\n            </g>\n        </>\n    );\n}\n\nexport default memo(\n    InterchangeTick,\n    (prevProps, nextProps) =>\n        prevProps.interchangeInfo.toString() === nextProps.interchangeInfo.toString() &&\n        prevProps.isPassed === nextProps.isPassed &&\n        prevProps.position === nextProps.position &&\n        prevProps.repel === nextProps.repel\n);\n"],"names":["getRotation","position","Position","InterchangeTick","props","interchangeInfo","isPassed","repel","zhNameLines","split","length","enNameLines","textAnchor","Direction","transforms","path","rotate","g","x","y","d","strokeLinecap","stroke","strokeWidth","transform","fill","map","txt","i","dy","className","fontSize","j","memo","prevProps","nextProps","toString"],"sourceRoot":""}