{"version":3,"file":"static/js/4995.7886f23b.chunk.js","mappings":"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","sources":["svgs/destination/destination-mtr.tsx","svgs/mtr/index.tsx","svgs/railmap/railmap-mtr.tsx","svgs/strip/strip-mtr.tsx","svgs/svg-wrapper.tsx"],"sourcesContent":["import React, { memo } from 'react';\nimport StripMTR from '../strip/strip-mtr';\nimport { CanvasType, Name, ShortDirection } from '../../constants/constants';\nimport { useRootSelector } from '../../redux';\nimport SvgWrapper from '../svg-wrapper';\n\nconst CANVAS_TYPE = CanvasType.Destination;\n\nexport default function DestinationMTR() {\n    const { canvasScale } = useRootSelector(state => state.app);\n    const { svgWidth: svgWidths, svg_height: svgHeight, theme } = useRootSelector(state => state.param);\n\n    const svgWidth = svgWidths[CANVAS_TYPE];\n\n    return (\n        <SvgWrapper\n            type={CANVAS_TYPE}\n            svgWidth={svgWidth}\n            svgHeight={svgHeight}\n            canvasScale={canvasScale}\n            theme={theme}\n        >\n            <DefsMTR />\n            <StripMTR stripPc={90} />\n            <InfoMTR />\n        </SvgWrapper>\n    );\n}\n\nconst DefsMTR = memo(() => (\n    <defs>\n        <path id=\"arrow\" d=\"M60,60L0,0L60-60H100L55-15H160V15H55L100,60z\" fill=\"var(--rmg-black,#000)\" />\n    </defs>\n));\n\nconst InfoMTR = () => {\n    const routes = useRootSelector(store => store.helper.routes);\n\n    const svgWidths = useRootSelector(store => store.param.svgWidth);\n    const direction = useRootSelector(store => store.param.direction);\n    const customisedMTRDestination = useRootSelector(store => store.param.customiseMTRDest);\n    const platformNumber = useRootSelector(store => store.param.platform_num);\n    const lineName = useRootSelector(store => store.param.line_name);\n\n    const currentStationIndex = useRootSelector(store => store.param.current_stn_idx);\n    const stationList = useRootSelector(store => store.param.stn_list);\n\n    let destNames: Name;\n    if (customisedMTRDestination.terminal !== false) {\n        destNames = customisedMTRDestination.terminal;\n    } else {\n        const validDests = [\n            ...new Set(\n                routes\n                    .filter(route => route.includes(currentStationIndex))\n                    .map(\n                        route =>\n                            route\n                                .filter(stnId => !['linestart', 'lineend'].includes(stnId))\n                                .slice(direction === ShortDirection.left ? 0 : -1)[0]\n                    )\n                    .filter(id => id !== currentStationIndex)\n            ),\n        ];\n        destNames = [\n            validDests.map(stnId => stationList[stnId].name[0]).join('/'),\n            validDests\n                .map(stnId => stationList[stnId].name[1])\n                .join('/')\n                .replace('\\\\', ' '),\n        ];\n    }\n\n    const destNameEl = React.useRef<SVGGElement | null>(null);\n    const [bBox, setBBox] = React.useState({ width: 0 } as DOMRect);\n    React.useEffect(\n        () => setBBox(destNameEl.current!.getBBox()),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [destNames.toString(), customisedMTRDestination.isLegacy]\n    );\n\n    const flagLength = 160 + 150 + bBox.width + 45 + 50;\n    const arrowX = (svgWidths[CanvasType.Destination] - (direction === ShortDirection.left ? 1 : -1) * flagLength) / 2;\n    const platformNumX = arrowX + (direction === ShortDirection.left ? 1 : -1) * (160 + 50 + 75);\n    const destNameX = platformNumX + (direction === ShortDirection.left ? 1 : -1) * (75 + 45);\n\n    return (\n        <g id=\"dest_name\" style={{ transform: 'translateY(calc(var(--rmg-svg-height) / 2 - 20px))' }}>\n            <use\n                xlinkHref=\"#arrow\"\n                transform={`translate(${arrowX},0)rotate(${direction === ShortDirection.left ? 0 : 180})`}\n            />\n            <PlatformNum num={platformNumber} transform={`translate(${platformNumX},0)`} />\n            <g\n                ref={destNameEl}\n                textAnchor={direction === ShortDirection.left ? 'start' : 'end'}\n                transform={`translate(${destNameX},-25)`}\n                fill=\"var(--rmg-black)\"\n            >\n                <text className=\"rmg-name__zh\" fontSize={90}>\n                    {(customisedMTRDestination.isLegacy ? lineName[0] : '') + 'å¾€' + destNames[0]}\n                </text>\n                <text className=\"rmg-name__en\" fontSize={45} dy={80}>\n                    {(customisedMTRDestination.isLegacy ? lineName[1] + ' ' : '') + 'to ' + destNames[1]}\n                </text>\n            </g>\n        </g>\n    );\n};\n\nconst PlatformNum = (props: { num: string | false } & React.SVGProps<SVGGElement>) => {\n    const { num, ...others } = props;\n\n    return (\n        <g id=\"platform\" {...others}>\n            {React.useMemo(\n                () => (\n                    <>\n                        <circle cx={0} cy={0} r={75} fill=\"var(--rmg-theme-colour)\" />\n                        <text className=\"rmg-name__zh\" dy={0} textAnchor=\"middle\" fontSize={135} fill=\"#fff\">\n                            {num}\n                        </text>\n                    </>\n                ),\n                [num]\n            )}\n        </g>\n    );\n};\n","import { CanvasType } from '../../constants/constants';\nimport { ReactNode } from 'react';\nimport DestinationMTR from '../destination/destination-mtr';\nimport RailMapMTR from '../railmap/railmap-mtr';\n\nconst mtrSvgs: Partial<Record<CanvasType, ReactNode>> = {\n    destination: <DestinationMTR />,\n    railmap: <RailMapMTR />,\n};\n\nexport default mtrSvgs;\n","import React from 'react';\nimport StripMTR from '../strip/strip-mtr';\nimport MainMTR from './main/main-mtr';\nimport { CanvasType } from '../../constants/constants';\nimport SvgWrapper from '../svg-wrapper';\nimport { useRootSelector } from '../../redux';\n\nconst CANVAS_TYPE = CanvasType.RailMap;\n\nexport default function RailMapMTR() {\n    const { canvasScale } = useRootSelector(state => state.app);\n    const { svgWidth: svgWidths, svg_height: svgHeight, theme } = useRootSelector(state => state.param);\n\n    const svgWidth = svgWidths[CANVAS_TYPE];\n\n    return (\n        <SvgWrapper\n            type={CANVAS_TYPE}\n            svgWidth={svgWidth}\n            svgHeight={svgHeight}\n            canvasScale={canvasScale}\n            theme={theme}\n        >\n            <DefsMTR />\n\n            <StripMTR stripPc={90} />\n            <MainMTR />\n        </SvgWrapper>\n    );\n}\n\nconst DefsMTR = React.memo(() => {\n    return (\n        <defs>\n            <g id=\"airport\" transform=\"scale(0.5970084519)\">\n                <rect x={-29.33899} height={58.67798} width={58.67798} />\n                <path\n                    id=\"airport\"\n                    d=\"M28.9769,6.60134c1.711.013,3.111,2.53205,3.111,4.241v10.337s17.106,15.435,17.358,15.666a1.145,1.145,0,0,1,.488,1.152v2.833c0,.651-.451.61-.695.467-.334-.119-17.151-8.863-17.151-8.863-.004,1.458-.797,9.006-1.326,13.304,0,0,4.61,2.457,4.699,2.521.334.268.352.359.352.852v2.001c0,.477-.352.428-.51.324-.183-.062-5.693-1.921-5.693-1.921a2.56018,2.56018,0,0,0-.633-.127,2.31654,2.31654,0,0,0-.666.127s-5.477,1.859-5.672,1.921c-.185.104-.523.153-.523-.324v-2.001c0-.493.029-.584.367-.852.086-.064,4.678-2.521,4.678-2.521-.524-4.298-1.307-11.846-1.325-13.304,0,0-16.822,8.744-17.148,8.863-.217.143-.69.184-.69-.467v-2.833a1.16206,1.16206,0,0,1,.473-1.152c.276-.231,17.365-15.666,17.365-15.666v-10.337c0-1.709,1.403-4.228,3.14105-4.241\"\n                    transform=\"translate(-28.9697,0.14347)\"\n                    fill=\"white\"\n                />\n            </g>\n            <g id=\"disney\" transform=\"scale(0.5970084519)\">\n                <rect x={-29.33899} width={58.67798} height={58.67798} />\n                <path\n                    fill=\"white\"\n                    d=\"M45.6152,7.85015a9.80248,9.80248,0,0,0-9.79907,9.801,9.70059,9.70059,0,0,0,.342,2.582c.002.026.002.055.002.093a.31815.31815,0,0,1-.31494.318.67741.67741,0,0,1-.12806-.02,15.71521,15.71521,0,0,0-13.498,0,.61.61,0,0,1-.122.02.31841.31841,0,0,1-.322-.318v-.067a9.62553,9.62553,0,0,0,.35608-2.608,9.803,9.803,0,1,0-9.797,9.8,10.10364,10.10364,0,0,0,2.308-.271h.05493a.31113.31113,0,0,1,.31409.318.32433.32433,0,0,1-.019.12,15.72588,15.72588,0,1,0,29.703,7.216,15.83676,15.83676,0,0,0-1.746-7.23.18417.18417,0,0,1-.0271-.106.31612.31612,0,0,1,.32007-.318h.057a10.15953,10.15953,0,0,0,2.316.271,9.80051,9.80051,0,0,0,0-19.601\"\n                    transform=\"translate(-28.9697 0.13398)\"\n                />\n            </g>\n            <clipPath id=\"hsr-clip-path\" transform=\"translate(-0.00057 0.01643)\">\n                <path\n                    fill=\"none\"\n                    d=\"M5.1606.89861a3.67176,3.67176,0,0,0-3.676,3.667v48.966a3.67842,3.67842,0,0,0,3.676,3.692h48.443a3.67892,3.67892,0,0,0,3.678-3.692V4.5656a3.67227,3.67227,0,0,0-3.678-3.667Z\"\n                />\n            </clipPath>\n            <g id=\"hsr\" transform=\"scale(0.5970084519)\">\n                <rect x={-29.33899} width={58.67798} height={58.67798} />\n                <g clipPath=\"url(#hsr-clip-path)\" transform=\"translate(-29.33899,0)\">\n                    <rect\n                        x={-3.25242}\n                        y={24.74141}\n                        width={61.75879}\n                        height={0.98008}\n                        transform=\"translate(-8.93747 17.31321) rotate(-30.16134)\"\n                        fill=\"white\"\n                    />\n                    <path\n                        d=\"M5.77169,48.97289c-2.17407-3.89294,2.56994-10.525,4.85-13.724l.173-.248a83.00826,83.00826,0,0,1,7.39294-9.285,97.384,97.384,0,0,1,11.082-9.958c7.051-6.045,15.832-5.876,16.447-5.894l11.785-.957.276,17.42-11.5271,10.586c-.36.39405-5.553,5.863-18.10193,11.035-6.752,2.783-11.877,4.146-15.66,4.146-3.301,0-5.561-1.049-6.71692-3.121\"\n                        transform=\"translate(-0.00057 0.01643)\"\n                        fill=\"white\"\n                    />\n                    <polygon\n                        points=\"57.453 29.614 32.426 58.31 35.582 58.509 57.584 30.433 57.453 29.614\"\n                        fill=\"white\"\n                    />\n                    <path\n                        d=\"M49.04708,11.61364a.94277.94277,0,0,0-.17407-.227c-.752-.93695-2.988-1.259-5.933-.793a25.98382,25.98382,0,0,0-9.99695,3.032A98.52916,98.52916,0,0,0,20.723,23.69768c-3.1759,3.487-4.645,6.388-3.62292,7.584,1.84,2.166,13.7539.716,22.00793-6.066,9.035-7.42,10.718-11.577,9.93909-13.602\"\n                        transform=\"translate(-0.00057 0.01643)\"\n                    />\n                    <path\n                        d=\"M34.65255,13.81182c5.65991-2.842,11.28088-2.856,12.1499-1.213.88306,1.652-2.99792,5.303-8.656,8.128-5.648,2.837-10.9469,3.805-11.81994,2.15-.873-1.641,2.668-6.237,8.326-9.065\"\n                        transform=\"translate(-0.00057 0.01643)\"\n                        fill=\"white\"\n                    />\n                    <path\n                        d=\"M58.10958,25.03454c-16.832,20.708-40.7301,26.038-40.7301,26.038,11-6.73,12.769-8.111,18.968-18.01,8.364-13.351,21.77808-21.549,21.912-21.63,0,0-.068,13.5-.1499,13.602\"\n                        transform=\"translate(-0.00057 0.01643)\"\n                    />\n                    <path\n                        d=\"M27.1877,26.69561l9.705-2.814a6.22768,6.22768,0,0,1-1.994,2.759,25.57277,25.57277,0,0,1-6.697,3.405,11.78221,11.78221,0,0,1-5.5.783Z\"\n                        transform=\"translate(-0.00057 0.01643)\"\n                        fill=\"white\"\n                    />\n                    <path\n                        d=\"M19.59005,25.97692a18.37656,18.37656,0,0,1,3.891-3.976,6.66452,6.66452,0,0,0-.30908,2.213l-4.391,4.829a6.18212,6.18212,0,0,1,.80908-3.066\"\n                        transform=\"translate(-0.00057 0.01643)\"\n                        fill=\"white\"\n                    />\n                    <polygon\n                        points=\"23.156 58.311 57.463 26.746 57.396 25.857 21.582 58.607 23.156 58.311\"\n                        fill=\"white\"\n                    />\n                    <path\n                        d=\"M60.15645,12.35973a68.6782,68.6782,0,0,0-12.602,9.542c-8.15,7.745-12.109,15.259-9.855,16.091,2.24793.816,10.678-4.782,18.83594-12.543,1.828-1.74,3.48-3.424,4.926-5.024Z\"\n                        transform=\"translate(-0.00057 0.01643)\"\n                        fill=\"white\"\n                    />\n                    <path\n                        d=\"M63.07638,11.82653a40.86955,40.86955,0,0,0-10,7.096c-5.90406,5.437-9.48609,11.105-7.848,11.742,1.657.631,8.28894-3.955,14.188-9.401a61.76591,61.76591,0,0,0,4.61694-4.705Z\"\n                        transform=\"translate(-0.00057 0.01643)\"\n                    />\n                    <path\n                        d=\"M12.67989,42.93969a9.87,9.87,0,0,0-5.754-1.895c-.113.22-.223.439-.33008.662a9.45046,9.45046,0,0,1,5.69507,1.749,6.27885,6.27885,0,0,1,2.61,6.305,10.16524,10.16524,0,0,1-.598,2.228c.238-.023.481-.053.725-.087.78308-2.249,1.394-6.184-2.3479-8.962\"\n                        transform=\"translate(-0.00057 0.01643)\"\n                    />\n                </g>\n            </g>\n\n            <path id=\"inttick\" d=\"M0,0v17\" strokeLinecap=\"round\" />\n        </defs>\n    );\n});\n","import React, { memo } from 'react';\n\nexport default memo(function StripMTR(props: { stripPc: number }) {\n    return (\n        <rect\n            fill=\"var(--rmg-theme-colour)\"\n            height={20}\n            style={{\n                width: 'var(--rmg-svg-width)',\n                ['--strip-percentage' as any]: props.stripPc,\n                transform: `translateY(calc(var(--strip-percentage, 95) * var(--rmg-svg-height) / 100 - 10px))`,\n            }}\n        />\n    );\n});\n","import { CanvasType, Theme } from '../constants/constants';\nimport React, { ReactNode } from 'react';\n\ninterface SvgWrapperProps {\n    type: CanvasType;\n    svgWidth: number;\n    svgHeight: number;\n    canvasScale: number;\n    theme: Theme;\n    children: ReactNode;\n}\n\nexport default function SvgWrapper(props: SvgWrapperProps) {\n    const { type, svgWidth, svgHeight, canvasScale, theme, children } = props;\n\n    return (\n        <svg\n            id={type}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            height={svgHeight * canvasScale}\n            viewBox={`0 0 ${svgWidth} ${svgHeight}`}\n            colorInterpolationFilters=\"sRGB\"\n            style={{\n                ['--rmg-svg-width' as any]: svgWidth + 'px',\n                ['--rmg-svg-height' as any]: svgHeight + 'px',\n                ['--rmg-theme-colour' as any]: theme[2],\n                ['--rmg-theme-fg' as any]: theme[3],\n            }}\n        >\n            <rect\n                id=\"canvas-bg\"\n                fill=\"white\"\n                style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n            />\n            {children}\n            <rect\n                id=\"canvas-border\"\n                fill=\"none\"\n                strokeWidth={3}\n                stroke=\"none\"\n                style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n            />\n        </svg>\n    );\n}\n"],"names":["CANVAS_TYPE","CanvasType","DestinationMTR","canvasScale","useRootSelector","state","app","param","svgWidths","svgWidth","svgHeight","svg_height","theme","type","DefsMTR","stripPc","InfoMTR","memo","id","d","fill","destNames","routes","store","helper","direction","customisedMTRDestination","customiseMTRDest","platformNumber","platform_num","lineName","line_name","currentStationIndex","current_stn_idx","stationList","stn_list","terminal","validDests","Set","filter","route","includes","map","stnId","slice","ShortDirection","name","join","replace","destNameEl","React","width","bBox","setBBox","current","getBBox","toString","isLegacy","flagLength","arrowX","platformNumX","destNameX","style","transform","xlinkHref","PlatformNum","num","ref","textAnchor","className","fontSize","dy","props","others","cx","cy","r","mtrSvgs","destination","railmap","RailMapMTR","x","height","clipPath","y","points","strokeLinecap","SvgWrapper","children","xmlns","xmlnsXlink","viewBox","colorInterpolationFilters","strokeWidth","stroke"],"sourceRoot":""}