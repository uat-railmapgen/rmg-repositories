{"version":3,"file":"static/js/1136.4477d053.chunk.js","mappings":"4MAIaA,EAAa,SAACC,GAepB,IAAD,EACMC,EAAqCD,EAArCC,MAAOC,EAA8BF,EAA9BE,UAAWC,EAAmBH,EAAnBG,GAAIC,EAAeJ,EAAfI,GAAIC,EAAWL,EAAXK,OAElC,UAA2CJ,EAA3C,GAAOK,EAAP,KAAeC,EAAf,KAAwBC,EAAxB,KACA,GADA,MAC8CC,EAAAA,EAAAA,KAAgB,SAAAC,GAAK,OAAIA,EAAMC,KAAV,KAA3DC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,OAE3BC,GAAaN,EAAAA,EAAAA,KAAgB,SAAAC,GAAK,OAAIA,EAAMM,MAAV,IAAlCD,SAGFE,EAAoBC,OAAOC,OAAOL,GACnCM,QAAO,SAAAC,GAAE,MACN,CAACA,EAAGC,KAAMD,EAAGE,IAAIC,OAAM,SAAAC,GAAM,OACzBV,EACKW,MAAM,EAAG,GACTN,QAAO,SAAAO,GAAM,OAAIC,EAAAA,EAAAA,IAAeD,EAAQd,EAA3B,IACbgB,OACAC,SAASL,EALW,GADvB,IASTM,KAAI,SAAAV,GAAE,OAAIA,EAAGW,MAAP,IACNC,GAAG,GAGFC,EAAa7B,IAAW8B,EAAAA,GAAAA,SAA0C,WAApBvB,EAA+B,EAAI,EACvF,OACI,eAAGwB,GAAG,cAAN,WACI,iBAAMC,EAAC,YAAO/B,EAAP,YAAiBE,EAAjB,aAA2BD,GAAW+B,YAAa,GAAIC,OAAM,OAAEtB,QAAF,IAAEA,GAAF,UAAEA,EAAmBgB,GAAG,UAAxB,aAAE,EAA0BA,GAAG,KAG/F5B,IAAW8B,EAAAA,GAAAA,SACPjB,OAAOsB,KAAK1B,GAAQ2B,OAAS,GAC7BvC,EAAUwC,IAAIX,KAAI,SAAAN,GAAM,aACpB,cAAgBkB,UAAS,oBAAexC,EAAGsB,GAAlB,YAA6BrB,EAAGqB,GAAhC,KAAzB,SACyB,WAApBb,GACG,iCACI,iBACI2B,OAAO,OACPK,OAAQ,GACRC,MAAO,GACPC,GAAI,EACJC,GAAIb,EAAa,EACjBc,KAAI,OAAE/B,QAAF,IAAEA,GAAF,UAAEA,EAAmBgB,GAAG,UAAxB,aAAE,EAA0BA,GAAG,MAEvC,iBACIM,OAAO,OACPK,OAAQV,EAvBzB,GAwBiBW,MAAO,GACPC,GAAI,EACJC,EAAGE,GACHD,KAAK,gCAIb,gBACIE,UAAU,WACVX,OAAO,0BACPI,UAAS,sBAAiB,GAAjB,QAxBblB,EADY,MAiC3C,C","sources":["svgs/railmap/main/loop/loop-coline-shmetro.tsx"],"sourcesContent":["import { useRootSelector } from '../../../../redux';\nimport { isColineBranch } from '../../../../redux/param/coline-action';\nimport { CanvasType } from '../../../../constants/constants';\n\nexport const LoopColine = (props: {\n    edges: [number, number, number, number];\n    loop_stns: {\n        top: string[];\n        left: string[];\n        right: string[];\n        bottom: string[];\n    };\n    xs: {\n        [stn_id: string]: number;\n    };\n    ys: {\n        [stn_id: string]: number;\n    };\n    canvas: CanvasType.RailMap | CanvasType.Indoor;\n}) => {\n    const { edges, loop_stns, xs, ys, canvas } = props;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [X_LEFT, X_RIGHT, Y_TOP, Y_BOTTOM] = edges;\n    const { info_panel_type, stn_list, coline } = useRootSelector(store => store.param);\n\n    const { branches } = useRootSelector(store => store.helper);\n\n    // find the coline color on the main/loop line\n    const coline_main_color = Object.values(coline)\n        .filter(co =>\n            [co.from, co.to].every(stn_id =>\n                branches\n                    .slice(1, 3)\n                    .filter(branch => isColineBranch(branch, stn_list))\n                    .flat()\n                    .includes(stn_id)\n            )\n        )\n        .map(co => co.colors)\n        .at(0); // only one coline in loop line is supported\n\n    const LINE_WIDTH = 12;\n    const COLINE_GAP = canvas === CanvasType.RailMap && info_panel_type === 'sh2020' ? 3 : 0;\n    return (\n        <g id=\"coline_main\">\n            <path d={`M ${X_LEFT},${Y_TOP} H${X_RIGHT}`} strokeWidth={12} stroke={coline_main_color?.at(0)?.at(2)} />\n            {\n                // additional station cover on the rail map\n                canvas === CanvasType.RailMap &&\n                    Object.keys(coline).length > 0 &&\n                    loop_stns.top.map(stn_id => (\n                        <g key={stn_id} transform={`translate(${xs[stn_id]},${ys[stn_id]})`}>\n                            {info_panel_type === 'sh2020' ? (\n                                <>\n                                    <rect\n                                        stroke=\"none\"\n                                        height={24}\n                                        width={12}\n                                        x={-6}\n                                        y={-COLINE_GAP - 1}\n                                        fill={coline_main_color?.at(0)?.at(2)}\n                                    />\n                                    <rect\n                                        stroke=\"none\"\n                                        height={COLINE_GAP + LINE_WIDTH}\n                                        width={12}\n                                        x={-6}\n                                        y={LINE_WIDTH - 2}\n                                        fill=\"var(--rmg-theme-colour)\"\n                                    />\n                                </>\n                            ) : (\n                                <use\n                                    xlinkHref=\"#int2_sh\"\n                                    stroke=\"var(--rmg-theme-colour)\"\n                                    transform={`translate(0,${1 + LINE_WIDTH})`}\n                                />\n                            )}\n                        </g>\n                    ))\n            }\n        </g>\n    );\n};\n"],"names":["LoopColine","props","edges","loop_stns","xs","ys","canvas","X_LEFT","X_RIGHT","Y_TOP","useRootSelector","store","param","info_panel_type","stn_list","coline","branches","helper","coline_main_color","Object","values","filter","co","from","to","every","stn_id","slice","branch","isColineBranch","flat","includes","map","colors","at","COLINE_GAP","CanvasType","id","d","strokeWidth","stroke","keys","length","top","transform","height","width","x","y","fill","LINE_WIDTH","xlinkHref"],"sourceRoot":""}