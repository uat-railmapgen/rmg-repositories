{"version":3,"file":"static/js/2138.40dc7a71.chunk.js","mappings":"iLAQe,SAASA,EAAUC,GAC9B,IAAQC,EAAeD,EAAfC,WACR,GAAuDC,EAAAA,EAAAA,KAAgB,SAAAC,GAAK,OAAIA,EAAMC,KAAV,IAA1DC,EAAlB,EAAQC,SAAiCC,EAAzC,EAA6BC,WAE7B,OACI,eAAGC,GAAG,aAAaC,YAAa,EAAGC,OAAO,QAA1C,WACI,iBAAMC,GAAIL,EAAWM,UAAS,oBAAeR,EAAUJ,GAAc,EAAvC,UAC9B,iBAAMa,GAAIT,EAAUJ,GAAaY,UAAU,sBAGtD,C","sources":["svgs/gzmtr/otis-frame.tsx"],"sourcesContent":["import React from 'react';\nimport { useRootSelector } from '../../redux';\nimport { CanvasType } from '../../constants/constants';\n\ninterface OtisFrameProps {\n    canvasType: CanvasType;\n}\n\nexport default function OtisFrame(props: OtisFrameProps) {\n    const { canvasType } = props;\n    const { svgWidth: svgWidths, svg_height: svgHeight } = useRootSelector(store => store.param);\n\n    return (\n        <g id=\"otis_frame\" strokeWidth={3} stroke=\"black\">\n            <line y2={svgHeight} transform={`translate(${svgWidths[canvasType] / 2},0)`} />\n            <line x2={svgWidths[canvasType]} transform=\"translate(0,90)\" />\n        </g>\n    );\n}\n"],"names":["OtisFrame","props","canvasType","useRootSelector","store","param","svgWidths","svgWidth","svgHeight","svg_height","id","strokeWidth","stroke","y2","transform","x2"],"sourceRoot":""}