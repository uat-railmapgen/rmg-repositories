{"version":3,"file":"static/js/9972.9d6bbdd0.chunk.js","mappings":"uMAQA,WAAeA,EAAAA,EAAAA,OACX,SAA4BC,GACxB,IAAQC,EAAsBD,EAAtBC,QAASC,EAAaF,EAAbE,SAEXC,GAASC,EAAAA,EAAAA,QAA2B,MAM1C,OAJAC,EAAAA,EAAAA,YAAU,WACE,OAARH,QAAQ,IAARA,GAAAA,EAAWC,EAAOG,QAASC,UAC9B,GAAE,CAACN,EAAQO,cAGR,eAAGC,IAAKN,EAAR,WACI,iBAAMO,UAAU,eAAeC,SAAU,GAAzC,SACKV,EAAQ,MAEb,cAAGU,SAAU,GAAb,SACKV,EAAQ,GAAGW,MAAM,MAAMC,KAAI,SAACC,EAAKC,GAAN,OACxB,iBAAML,UAAU,eAAuBM,GAAI,GAAS,GAAJD,EAAhD,SACKD,GAD+BC,EADZ,QAQ3C,IACD,SAACE,EAAWC,GAAZ,OAA0BD,EAAUhB,QAAQO,aAAeU,EAAUjB,QAAQO,UAA7E,IAOG,IAAMW,EAA8B,SAACnB,GACxC,IAAQoB,EAA6BpB,EAA7BoB,cAAeC,EAAcrB,EAAdqB,UAEjBlB,GAASC,EAAAA,EAAAA,QAA2B,MAE1C,GAAwBkB,EAAAA,EAAAA,UAAS,CAAEC,EAAG,EAAGC,MAAO,IAAhD,eAAOC,EAAP,KAAaC,EAAb,KAGA,OAFArB,EAAAA,EAAAA,YAAU,kBAAMqB,EAAQvB,EAAOG,QAASC,UAA9B,GAA0C,CAACa,EAAcZ,cAG/D,eAAGa,UAAWA,EAAd,WACI,eAAGA,UAAU,mBAAmBV,SAAU,GAA1C,WACI,iBAAMgB,WAAW,MAAMJ,EAAGE,EAAKF,EAAI,EAAGb,UAAU,eAAhD,SACK,OAEL,iBAAMiB,WAAW,QAAQJ,EAAGE,EAAKD,MAAQC,EAAKF,EAAI,EAAGb,UAAU,eAA/D,SACK,UAGT,eAAGD,IAAKN,EAAQwB,WAAW,SAA3B,WACI,iBAAMjB,UAAU,eAAeC,SAAU,GAAzC,SACKS,EAAc,MAEnB,iBAAMJ,GAAI,GAAIN,UAAU,eAAeC,SAAU,GAAjD,SACKS,EAAc,UAKlC,C","sources":["svgs/gzmtr/current-station-name.tsx"],"sourcesContent":["import React, { memo, SVGProps, useEffect, useRef, useState } from 'react';\nimport { Name } from '../../constants/constants';\n\ninterface CurrentStationNameProps {\n    stnName: Name;\n    onUpdate?: (bBox: SVGRect) => void;\n}\n\nexport default memo(\n    function CurrentStationName(props: CurrentStationNameProps) {\n        const { stnName, onUpdate } = props;\n\n        const nameEl = useRef<SVGGElement | null>(null);\n\n        useEffect(() => {\n            onUpdate?.(nameEl.current!.getBBox());\n        }, [stnName.toString()]);\n\n        return (\n            <g ref={nameEl}>\n                <text className=\"rmg-name__zh\" fontSize={90}>\n                    {stnName[0]}\n                </text>\n                <g fontSize={36}>\n                    {stnName[1].split('\\\\').map((txt, i) => (\n                        <text className=\"rmg-name__en\" key={i} dy={70 + i * 36}>\n                            {txt}\n                        </text>\n                    ))}\n                </g>\n            </g>\n        );\n    },\n    (prevProps, nextProps) => prevProps.stnName.toString() === nextProps.stnName.toString()\n);\n\ninterface CurrentStationSecondaryNameProps extends SVGProps<SVGGElement> {\n    secondaryName: Name;\n}\n\nexport const CurrentStationSecondaryName = (props: CurrentStationSecondaryNameProps) => {\n    const { secondaryName, transform } = props;\n\n    const nameEl = useRef<SVGGElement | null>(null);\n\n    const [bBox, setBBox] = useState({ x: 0, width: 0 } as DOMRect);\n    useEffect(() => setBBox(nameEl.current!.getBBox()), [secondaryName.toString()]);\n\n    return (\n        <g transform={transform}>\n            <g transform=\"translate(0,4.5)\" fontSize={36}>\n                <text textAnchor=\"end\" x={bBox.x - 3} className=\"rmg-name__zh\">\n                    {'('}\n                </text>\n                <text textAnchor=\"start\" x={bBox.width + bBox.x + 3} className=\"rmg-name__zh\">\n                    {')'}\n                </text>\n            </g>\n            <g ref={nameEl} textAnchor=\"middle\">\n                <text className=\"rmg-name__zh\" fontSize={26}>\n                    {secondaryName[0]}\n                </text>\n                <text dy={22} className=\"rmg-name__en\" fontSize={14}>\n                    {secondaryName[1]}\n                </text>\n            </g>\n        </g>\n    );\n};\n"],"names":["memo","props","stnName","onUpdate","nameEl","useRef","useEffect","current","getBBox","toString","ref","className","fontSize","split","map","txt","i","dy","prevProps","nextProps","CurrentStationSecondaryName","secondaryName","transform","useState","x","width","bBox","setBBox","textAnchor"],"sourceRoot":""}