{"version":3,"file":"static/js/127.b9c6e15a.chunk.js","mappings":"iIAQA,WAAeA,EAAAA,EAAAA,OACX,SAAqBC,GACjB,IAAQC,EAAsBD,EAAtBC,QAASC,EAAaF,EAAbE,SAEXC,GAASC,EAAAA,EAAAA,QAA2B,MAM1C,OAJAC,EAAAA,EAAAA,YAAU,WACNH,GAAYA,EAASC,EAAOG,QAASC,UACxC,GAAE,CAACN,EAAQO,cAGR,eAAGC,IAAKN,EAAR,WACI,iBAAMO,UAAU,eAAeC,SAAU,GAAzC,SACKV,EAAQ,MAEb,cAAGU,SAAU,KAAb,SACKV,EAAQ,GAAGW,MAAM,MAAMC,KAAI,SAACC,EAAKC,GAAN,OACxB,iBAAcL,UAAU,eAAeM,GAAI,GAAS,GAAJD,EAAhD,SACKD,GADMC,EADa,QAQ3C,IACD,SAACE,EAAWC,GAAZ,OAA0BD,EAAUhB,QAAQO,aAAeU,EAAUjB,QAAQO,UAA7E,G","sources":["svgs/gzmtr/station-name/station-name.tsx"],"sourcesContent":["import React, { memo, useEffect, useRef } from 'react';\nimport { Name } from '../../../constants/constants';\n\ninterface StationNameProps {\n    stnName: Name;\n    onUpdate?: (bBox: SVGRect) => void;\n}\n\nexport default memo(\n    function StationName(props: StationNameProps) {\n        const { stnName, onUpdate } = props;\n\n        const nameEl = useRef<SVGGElement | null>(null);\n\n        useEffect(() => {\n            onUpdate && onUpdate(nameEl.current!.getBBox());\n        }, [stnName.toString()]);\n\n        return (\n            <g ref={nameEl}>\n                <text className=\"rmg-name__zh\" fontSize={18}>\n                    {stnName[0]}\n                </text>\n                <g fontSize={10.5}>\n                    {stnName[1].split('\\\\').map((txt, i) => (\n                        <text key={i} className=\"rmg-name__en\" dy={16 + i * 11}>\n                            {txt}\n                        </text>\n                    ))}\n                </g>\n            </g>\n        );\n    },\n    (prevProps, nextProps) => prevProps.stnName.toString() === nextProps.stnName.toString()\n);\n"],"names":["memo","props","stnName","onUpdate","nameEl","useRef","useEffect","current","getBBox","toString","ref","className","fontSize","split","map","txt","i","dy","prevProps","nextProps"],"sourceRoot":""}