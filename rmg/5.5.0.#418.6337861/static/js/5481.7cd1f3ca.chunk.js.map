{"version":3,"file":"static/js/5481.7cd1f3ca.chunk.js","mappings":"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","sources":["svgs/indoor/station-shmetro.tsx"],"sourcesContent":["import React from 'react';\nimport { ColourHex, InterchangeInfo, Name, Services } from '../../constants/constants';\nimport { useRootSelector } from '../../redux';\n\nexport type NameDirection = 'upward' | 'downward' | 'left' | 'right';\n\ninterface Props {\n    stnId: string;\n    nameDirection: NameDirection;\n    services: Services[];\n    color?: ColourHex; // Control the station color if coline is in effect.\n}\n\nexport const StationSHMetro = (props: Props) => {\n    const { stnId, nameDirection, services, color } = props;\n    const stnInfo = useRootSelector(store => store.param.stn_list[stnId]);\n\n    const transfer = [...stnInfo.transfer.info[0], ...(stnInfo.transfer.info[1] || [])];\n    let stationIconStyle = '';\n    if (stnInfo.services.length === 3) stationIconStyle = 'direct_indoor_sh';\n    else if (stnInfo.services.length === 2) stationIconStyle = 'express_indoor_sh';\n    else if (transfer.length > 0) stationIconStyle = 'int2_indoor_sh';\n    else stationIconStyle = 'stn_indoor_sh';\n\n    const dr = nameDirection === 'left' || nameDirection === 'right' ? 90 : 0;\n    return (\n        <>\n            <StationNameGElement\n                name={stnInfo.name}\n                infos={stnInfo.transfer.info}\n                nameDirection={nameDirection}\n                services={services}\n            />\n            <use\n                xlinkHref={`#${stationIconStyle}`}\n                stroke={transfer.length > 0 ? 'var(--rmg-black)' : color ?? 'var(--rmg-theme-colour)'}\n                transform={`rotate(${dr})`}\n            />\n            {/* This should be in IntBoxGroupProps, put here because the station icon will cover this */}\n            {stnInfo.services.length > 1 && (\n                <text className=\"rmg-name__zh\" writingMode=\"tb\" fontSize=\"60%\" dy=\"-12\">\n                    {`大站车${stnInfo.services.length > 2 ? ' 直达车' : ''}停靠`}\n                </text>\n            )}\n        </>\n    );\n};\n\nexport default StationSHMetro;\n\ninterface StationNameGElementProps {\n    name: Name;\n    infos: InterchangeInfo[][];\n    nameDirection: NameDirection;\n    services: Services[];\n}\n\nconst StationNameGElement = (props: StationNameGElementProps) => {\n    const { name, infos, nameDirection, services } = props;\n    const dy = { upward: 60, downward: -30, left: 0, right: 0 }[nameDirection];\n    const osi_dx = { upward: 0, downward: 0, left: 85, right: -85 }[nameDirection];\n    const osi_dy = {\n        upward: -185,\n        downward: 150 + (services.length === 3 ? 40 : 0),\n        left: -30,\n        right: -30,\n    }[nameDirection];\n    const osysi_dx =\n        // only compute when there is a out-of-system transfer\n        infos[2]?.length > 0\n            ? {\n                  upward: 0,\n                  downward: 0,\n                  left: infos[0].length + infos[1].length !== 0 ? 85 : 25,\n                  right: infos[0].length + infos[1].length !== 0 ? -85 : -25,\n              }[nameDirection]\n            : 0;\n    const osysi_dy =\n        // only compute when there is a out-of-system transfer\n        infos[2]?.length > 0\n            ? {\n                  upward: infos[1]?.length ? -210 : infos[0].length ? -180 : -100,\n                  downward: (infos[1]?.length ? 190 : infos[0].length ? 160 : 100) + (services.length === 3 ? 40 : 0),\n                  left: infos[1]?.length ? -60 : infos[0].length ? -30 : 0,\n                  right: infos[1]?.length ? -60 : infos[0].length ? -30 : 0,\n              }[nameDirection]\n            : 0;\n    return (\n        <g transform={`translate(0,${dy})`}>\n            {nameDirection === 'upward' || nameDirection === 'downward' ? (\n                <>\n                    <line\n                        x1={-30}\n                        x2={30}\n                        y1={nameDirection === 'upward' ? -23 : -10}\n                        y2={nameDirection === 'upward' ? -23 : -10}\n                        stroke=\"black\"\n                    />\n                    <line\n                        y1={nameDirection === 'upward' ? -23 : -10}\n                        y2={nameDirection === 'upward' ? -23 - 25 : 20}\n                        stroke=\"black\"\n                    />\n                </>\n            ) : (\n                <>\n                    <line\n                        x1={nameDirection === 'left' ? -50 : 15}\n                        x2={nameDirection === 'left' ? -15 : 50}\n                        y1={0}\n                        y2={0}\n                        stroke=\"black\"\n                    />\n                    <line\n                        x1={nameDirection === 'left' ? -50 : 50}\n                        x2={nameDirection === 'left' ? -50 : 50}\n                        y1={-30}\n                        y2={30}\n                        stroke=\"black\"\n                    />\n                </>\n            )}\n\n            {[...infos[0], ...(infos[1] || [])].length > 0 && (\n                <IntBoxGroup\n                    intInfos={[...infos[0], ...(infos[1] || [])]}\n                    arrowDirection={nameDirection}\n                    services={services}\n                />\n            )}\n\n            <StationName stnName={name} nameDirection={nameDirection} fill=\"black\" />\n\n            {infos[1]?.length > 0 && (\n                <g transform={`translate(${osi_dx},${osi_dy})`}>\n                    <OSIText osiInfos={infos[1]} nameDirection={nameDirection} />\n                </g>\n            )}\n\n            {infos[2]?.length > 0 && (\n                <g transform={`translate(${osysi_dx},${osysi_dy})`}>\n                    <OSysIText osysiInfos={infos[2]} nameDirection={nameDirection} />\n                </g>\n            )}\n        </g>\n    );\n};\n\nconst StationName = React.forwardRef(\n    (\n        props: { stnName: Name; nameDirection: NameDirection } & React.SVGProps<SVGGElement>,\n        ref: React.Ref<SVGGElement>\n    ) => {\n        const { stnName, nameDirection, ...others } = props;\n        const name = stnName[0].split('\\\\');\n        const nameENLn = stnName[1].split('\\\\').length;\n        const dx = { upward: 0, downward: 0, left: -60, right: 60 }[nameDirection];\n        const dy = {\n            upward: -2,\n            downward: -30 - 12 * (nameENLn - 1),\n            left: -10 * (nameENLn - 1),\n            right: -10 * (nameENLn - 1),\n        }[nameDirection];\n        const anchor = { upward: 'middle', downward: 'middle', left: 'end', right: 'start' }[nameDirection];\n\n        return (\n            <g ref={ref} {...others} textAnchor={anchor} transform={`translate(${dx},${dy})`}>\n                {React.useMemo(\n                    () => (\n                        <>\n                            {name.map((txt, i, array) => (\n                                <text\n                                    key={i}\n                                    className=\"rmg-name__zh\"\n                                    dy={nameDirection === 'upward' ? 16 * i : (array.length - 1 - i) * -16}\n                                >\n                                    {txt}\n                                </text>\n                            ))}\n                            <g fontSize={9.6}>\n                                {stnName[1].split('\\\\').map((txt, i) => (\n                                    <text\n                                        key={i}\n                                        className=\"rmg-name__en\"\n                                        dy={\n                                            12 * (i + 1) +\n                                            (nameDirection === 'upward' ? (name.length > 1 ? name.length * 7.5 : 0) : 0)\n                                        }\n                                    >\n                                        {txt}\n                                    </text>\n                                ))}\n                            </g>\n                        </>\n                    ),\n                    // eslint-disable-next-line react-hooks/exhaustive-deps\n                    [...stnName]\n                )}\n            </g>\n        );\n    }\n);\n\ninterface IntBoxGroupProps {\n    intInfos: InterchangeInfo[];\n    arrowDirection: NameDirection;\n    services: Services[];\n}\n\nconst IntBoxGroup = (props: IntBoxGroupProps & React.SVGProps<SVGGElement>) => {\n    const { intInfos, arrowDirection, services } = props;\n\n    // name each different linearGradient that will fill the arrow\n    const intNameId = intInfos.map(intInfo => intInfo[2]).reduce((name, color) => name + color, '');\n\n    // get the interchange line names\n    const lineNames = [\n        intInfos\n            .filter(intInfo => intInfo[4].match(/^\\d+.*$/))\n            .map(intInfo => intInfo[4].replace(/^(\\d+)(.*)$/, '$1'))\n            .join('，')\n            .concat('号线'),\n        intInfos\n            .filter(intInfo => !intInfo[4].match(/^\\d+.*$/))\n            .map(intInfo => intInfo[4])\n            .join('，'),\n    ]\n        .filter(name => name && name !== '号线')\n        .join('，');\n    const lineNamesEn = [\n        'Line '.concat(\n            intInfos\n                .filter(intInfo => intInfo[5].match(/^L|line$/))\n                .map(intInfo => intInfo[5].replace('Line', '').replace('line', '').trim())\n                .join(',')\n        ),\n        intInfos\n            .filter(intInfo => !intInfo[5].match(/^L|line$/))\n            .map(intInfo => intInfo[5])\n            .join('，'),\n    ]\n        .filter(name => name && name !== 'Line ')\n        .join(',');\n\n    // for services contains three level (normal, express, direct)\n    // additional length is required on transfer arrow otherwise\n    // the station icon will be longer than the arrow itself\n    const arrowLength = services.length === 3 ? 80 : 45;\n    const transfer_dy = { upward: -145, downward: 125 + (services.length === 3 ? 40 : 0), left: 7, right: 7 }[\n        arrowDirection\n    ];\n\n    // bunch of constants for all four directions\n    const arrow_dx = { upward: 0, downward: 0, left: 20, right: -20 }[arrowDirection];\n    const arrow_dy = { upward: -74, downward: 44, left: 0, right: 0 }[arrowDirection];\n    const arrow_dr = { upward: 0, downward: 180, left: 90, right: -90 }[arrowDirection];\n    const transfer_dx = { upward: 0, downward: 0, left: 85, right: -85 }[arrowDirection];\n    const transfer_anchor = { upward: 'middle', downward: 'middle', left: 'start', right: 'end' }[arrowDirection];\n    return (\n        <g>\n            <path\n                id=\"int_indoor_arrow_sh\"\n                stroke=\"var(--rmg-black)\"\n                strokeWidth={1}\n                transform={`translate(${arrow_dx},${arrow_dy})rotate(${arrow_dr})`}\n                fill={intInfos.length === 1 ? intInfos[0][2] : `url(#grad${intNameId})`}\n                d={`M -7.5,0 v -${arrowLength} h -7.5 l 15,-15 l 15,15 h -7.5 v ${arrowLength} Z`}\n            />\n\n            {intInfos.length > 1 && (\n                <>\n                    <linearGradient\n                        id={`grad${intNameId}`}\n                        y1=\"0\"\n                        y2=\"0\"\n                        x1={arrowDirection === 'upward' ? '25%' : '75%'}\n                        x2={arrowDirection === 'upward' ? '75%' : '25%'}\n                    >\n                        {intInfos.map((intInfo, i) => (\n                            <React.Fragment key={i}>\n                                {/* more about React.Fragment on https://stackoverflow.com/a/59390967 */}\n                                <stop // start from\n                                    offset={`${(100 / intInfos.length) * (i + 0)}%`}\n                                    stopColor={intInfo[2]}\n                                />\n                                <stop // to\n                                    offset={`${(100 / intInfos.length) * (i + 1)}%`}\n                                    stopColor={intInfo[2]}\n                                />\n                            </React.Fragment>\n                        ))}\n                    </linearGradient>\n\n                    {/* a range inplementation [0, 1, 2 ... intInfos.length - 1] */}\n                    {/* {[...Array(intInfos.length - 1).keys()].map(i => (<line\n                        x1={-7.5 + (15 / intInfos.length) * (i + 1)}\n                        x2={-7.5 + (15 / intInfos.length) * (i + 1)}\n                        y1=\"-74\"\n                        y2={-104 - 7.5 - 7.5 / (intInfos.length - 1) * (i+1)}\n                        stroke=\"black\"\n                    />))} */}\n                </>\n            )}\n\n            <g transform={`translate(${transfer_dx},${transfer_dy})`} textAnchor={`${transfer_anchor}`}>\n                <text className=\"rmg-name__zh\" dy={-7}>\n                    {`换乘${lineNames}`}\n                </text>\n                <text className=\"rmg-name__en\" dy={5} fontSize={9.6}>\n                    {`Interchange ${lineNamesEn}`}\n                </text>\n            </g>\n        </g>\n    );\n};\n\nconst OSIText = (props: { osiInfos: InterchangeInfo[]; nameDirection: NameDirection }) => {\n    const anchor = { upward: 'middle', downward: 'middle', left: 'start', right: 'end' }[props.nameDirection];\n    return React.useMemo(\n        () => (\n            <g textAnchor={`${anchor}`} fontSize=\"50%\">\n                <text className=\"rmg-name__zh\" dy={-5}>\n                    {`换乘${props.osiInfos.map(info => info[4]).join('，')}`}\n                </text>\n                <text className=\"rmg-name__zh\" dy={5}>\n                    仅限公共交通卡\n                </text>\n                <text className=\"rmg-name__en\" dy={12.5} fontSize=\"75%\">\n                    Only for Public Transportation Card\n                </text>\n            </g>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.osiInfos.toString(), props.nameDirection]\n    );\n};\n\nconst OSysIText = (props: { osysiInfos: InterchangeInfo[]; nameDirection: NameDirection }) => {\n    const anchor = { upward: 'middle', downward: 'middle', left: 'start', right: 'end' }[props.nameDirection];\n    return React.useMemo(\n        () => (\n            <g textAnchor={`${anchor}`}>\n                <text className=\"rmg-name__zh\" dy={-5}>\n                    {`转乘${props.osysiInfos.map(info => info[4]).join('，')}`}\n                </text>\n                <text className=\"rmg-name__en\" dy={7.5} fontSize={9.6}>\n                    {`To ${props.osysiInfos.map(info => info[5]).join(', ')}`}\n                </text>\n            </g>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.osysiInfos.toString(), props.nameDirection]\n    );\n};\n"],"names":["StationSHMetro","props","stnId","nameDirection","services","color","stnInfo","useRootSelector","store","param","stn_list","transfer","info","stationIconStyle","length","dr","StationNameGElement","name","infos","xlinkHref","stroke","transform","className","writingMode","fontSize","dy","upward","downward","left","right","osi_dx","osi_dy","osysi_dx","osysi_dy","x1","x2","y1","y2","IntBoxGroup","intInfos","arrowDirection","StationName","stnName","fill","OSIText","osiInfos","OSysIText","osysiInfos","React","ref","others","split","nameENLn","dx","anchor","textAnchor","map","txt","i","array","intNameId","intInfo","reduce","lineNames","filter","match","replace","join","concat","lineNamesEn","trim","arrowLength","transfer_dy","arrow_dx","arrow_dy","arrow_dr","transfer_dx","transfer_anchor","id","strokeWidth","d","offset","stopColor","toString"],"sourceRoot":""}