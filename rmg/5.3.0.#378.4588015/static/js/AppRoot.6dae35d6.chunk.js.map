{"version":3,"file":"static/js/AppRoot.6dae35d6.chunk.js","mappings":"mFAAA,IAAIA,EAAM,CACT,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,GACA,IAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,IACA,KAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,kDAAmD,CAClD,KACA,MAED,kDAAmD,CAClD,IACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,OAGnCX,EAAoBa,KAAO,WAAa,OAAOC,OAAOD,KAAKd,IAC3DC,EAAoBW,GAAK,KACzBI,EAAOC,QAAUhB,G,qBC9JjB,IAAID,EAAM,CACT,cAAe,CACd,KACA,MAED,YAAa,CACZ,KACA,MAED,iBAAkB,CACjB,KACA,MAED,eAAgB,CACf,KACA,MAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,IACA,MAED,eAAgB,CACf,KACA,MAED,iBAAkB,CACjB,IACA,MAED,aAAc,CACb,KACA,MAED,cAAe,CACd,KACA,MAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,KAED,iBAAkB,CACjB,IACA,MAED,iBAAkB,CACjB,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,eAAgB,CACf,KACA,MAED,kBAAmB,CAClB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,gBAAiB,CAChB,KACA,IAED,aAAc,CACb,IACA,MAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,aAAc,CACb,KACA,MAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,KACA,MAED,mBAAoB,CACnB,IACA,MAED,eAAgB,CACf,KACA,MAED,YAAa,CACZ,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,aAAc,CACb,KACA,KAED,cAAe,CACd,KACA,MAED,aAAc,CACb,KACA,MAED,cAAe,CACd,KACA,MAED,eAAgB,CACf,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,aAAc,CACb,KACA,MAED,YAAa,CACZ,KACA,MAED,aAAc,CACb,KACA,MAED,cAAe,CACd,IACA,MAED,aAAc,CACb,KACA,KAED,eAAgB,CACf,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,cAAe,CACd,KACA,MAED,gBAAiB,CAChB,KACA,GAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,eAAgB,CACf,KACA,MAED,aAAc,CACb,KACA,MAED,eAAgB,CACf,KACA,MAED,mBAAoB,CACnB,KACA,KAED,cAAe,CACd,KACA,MAED,aAAc,CACb,KACA,MAED,YAAa,CACZ,KACA,MAED,cAAe,CACd,KACA,MAED,YAAa,CACZ,KACA,MAED,iBAAkB,CACjB,KACA,OAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBa,KAAO,WAAa,OAAOC,OAAOD,KAAKd,IAC3DC,EAAoBW,GAAK,KACzBI,EAAOC,QAAUhB,G,qBClUjB,IAAID,EAAM,CACT,sBAAuB,CACtB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,GACA,MAED,sBAAuB,CACtB,KACA,MAED,wBAAyB,CACxB,MAED,oBAAqB,CACpB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,kBAAmB,CAClB,IACA,MAED,mBAAoB,CACnB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,mBAAoB,CACnB,IACA,MAED,mBAAoB,CACnB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,uBAAwB,CACvB,KACA,KAED,uBAAwB,CACvB,KACA,MAED,uBAAwB,CACvB,IACA,MAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,IACA,MAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,8BAA+B,CAC9B,KACA,KAED,6BAA8B,CAC7B,KACA,MAED,iCAAkC,CACjC,KACA,MAED,kCAAmC,CAClC,KACA,MAED,6BAA8B,CAC7B,KACA,MAED,mBAAoB,CACnB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,kBAAmB,CAClB,KACA,MAED,iBAAkB,CACjB,KACA,KAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,sBAAuB,CACtB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,sBAAuB,CACtB,IACA,MAED,sBAAuB,CACtB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,4BAA6B,CAC5B,KACA,MAED,4BAA6B,CAC5B,KACA,MAED,4BAA6B,CAC5B,KACA,KAED,4BAA6B,CAC5B,KACA,MAED,4BAA6B,CAC5B,KACA,KAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,KACA,KAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,KACA,KAED,qBAAsB,CACrB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,KAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CACtB,KACA,IAED,sBAAuB,CACtB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,0BAA2B,CAC1B,MAED,4BAA6B,CAC5B,KACA,MAED,4BAA6B,CAC5B,KACA,MAED,4BAA6B,CAC5B,KACA,MAED,4BAA6B,CAC5B,KACA,MAED,qBAAsB,CACrB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,K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","sources":["../node_modules/@railmapgen/rmg-palette-resources/flags|lazy|/^/.//.*$/|groupOptions: {}|namespace object","../node_modules/@railmapgen/rmg-palette-resources/palettes|lazy|/^/.//.*/.js$/|chunkName: palettes|groupOptions: {}|namespace object","../node_modules/@railmapgen/rmg-templates-resources/templates|lazy|/^/.//.*/.json$/|chunkName: templates|groupOptions: {}|namespace object","svgs/svg-wrapper.tsx","svgs/svg-router.tsx","components/side-panel/station-side-panel/info-section.tsx","components/modal/colour-modal/flag-svg-emoji.tsx","components/modal/colour-modal/city-picker.tsx","components/modal/colour-modal/colour-picker.tsx","components/modal/colour-modal/colour-modal.tsx","theme/colour-util.ts","components/side-panel/theme-button.tsx","components/side-panel/station-side-panel/interchange-card.tsx","components/common/rmg-button-group.tsx","components/side-panel/station-side-panel/interchange-section.tsx","components/side-panel/station-side-panel/more-section.tsx","components/side-panel/station-side-panel/branch-section.tsx","components/side-panel/station-side-panel/station-side-panel.tsx","components/side-panel/style-side-panel/layout-section.tsx","components/side-panel/style-side-panel/design-section.tsx","components/side-panel/style-side-panel/loop-section.tsx","components/side-panel/style-side-panel/gzmtr-note-card.tsx","components/side-panel/style-side-panel/gzmtr-note-section.tsx","components/side-panel/style-side-panel/style-side-panel.tsx","methods.ts","components/modal/remove-confirm-modal.tsx","components/side-panel/station-side-panel/station-side-panel-footer.tsx","redux/param/remove-station-action.ts","components/side-panel/branch-side-panel/coline-card.tsx","components/side-panel/branch-side-panel/coline-section.tsx","components/modal/auto-num-modal.tsx","components/side-panel/branch-side-panel/action-section.tsx","components/side-panel/branch-side-panel/branch-side-panel.tsx","components/side-panel/side-panel.tsx","util/utils.ts","util/export-utils.ts","components/modal/download-modal.tsx","components/page-header/download-actions.tsx","components/modal/upload-confirm-modal.tsx","components/modal/template-modal.tsx","components/page-header/open-actions.tsx","redux/param/open-new-action.ts","components/page-header/header-actions.tsx","components/page-header/page-header.tsx","util/config.ts","components/modal/help-modal.tsx","components/root/window-header.tsx","redux/param/add-station-action.ts","components/modal/add-station-modal.tsx","components/modal/new-branch-modal.tsx","components/ag-grid/grid-tabs.tsx","components/modal/loading-modal.tsx","components/root/global-alerts.tsx","components/app-root.tsx","redux/param/coline-action.ts"],"sourcesContent":["var map = {\n\t\"./1F1E6-1F1F9.svg\": [\n\t\t9121,\n\t\t9121\n\t],\n\t\"./1F1E6-1F1FF.svg\": [\n\t\t9427,\n\t\t9427\n\t],\n\t\"./1F1E7-1F1F7.svg\": [\n\t\t7304,\n\t\t7304\n\t],\n\t\"./1F1E8-1F1E6.svg\": [\n\t\t56,\n\t\t56\n\t],\n\t\"./1F1E8-1F1F1.svg\": [\n\t\t3450,\n\t\t3450\n\t],\n\t\"./1F1E8-1F1F3.svg\": [\n\t\t2537,\n\t\t2537\n\t],\n\t\"./1F1E9-1F1EA.svg\": [\n\t\t6311,\n\t\t6311\n\t],\n\t\"./1F1EA-1F1EC.svg\": [\n\t\t7365,\n\t\t7365\n\t],\n\t\"./1F1EA-1F1F8.svg\": [\n\t\t8721,\n\t\t8721\n\t],\n\t\"./1F1EB-1F1F7.svg\": [\n\t\t8514,\n\t\t8514\n\t],\n\t\"./1F1EC-1F1F7.svg\": [\n\t\t9515,\n\t\t9515\n\t],\n\t\"./1F1ED-1F1F0.svg\": [\n\t\t2248,\n\t\t2248\n\t],\n\t\"./1F1ED-1F1FA.svg\": [\n\t\t268,\n\t\t268\n\t],\n\t\"./1F1EE-1F1F3.svg\": [\n\t\t6236,\n\t\t6236\n\t],\n\t\"./1F1EE-1F1F7.svg\": [\n\t\t2617,\n\t\t2617\n\t],\n\t\"./1F1EE-1F1F9.svg\": [\n\t\t3541,\n\t\t3541\n\t],\n\t\"./1F1EF-1F1F5.svg\": [\n\t\t2741,\n\t\t2741\n\t],\n\t\"./1F1F0-1F1F7.svg\": [\n\t\t2255,\n\t\t2255\n\t],\n\t\"./1F1F2-1F1F4.svg\": [\n\t\t6435,\n\t\t6435\n\t],\n\t\"./1F1F2-1F1FD.svg\": [\n\t\t3086,\n\t\t3086\n\t],\n\t\"./1F1F2-1F1FE.svg\": [\n\t\t6082,\n\t\t6082\n\t],\n\t\"./1F1F3-1F1F4.svg\": [\n\t\t6095,\n\t\t6095\n\t],\n\t\"./1F1F5-1F1EA.svg\": [\n\t\t2955,\n\t\t2955\n\t],\n\t\"./1F1F5-1F1F9.svg\": [\n\t\t7791,\n\t\t7791\n\t],\n\t\"./1F1F7-1F1F4.svg\": [\n\t\t7224,\n\t\t7224\n\t],\n\t\"./1F1F7-1F1FA.svg\": [\n\t\t6031,\n\t\t6031\n\t],\n\t\"./1F1F8-1F1EA.svg\": [\n\t\t1550,\n\t\t1550\n\t],\n\t\"./1F1F8-1F1EC.svg\": [\n\t\t1229,\n\t\t1229\n\t],\n\t\"./1F1F9-1F1F7.svg\": [\n\t\t2237,\n\t\t2237\n\t],\n\t\"./1F1F9-1F1FC.svg\": [\n\t\t4252,\n\t\t4252\n\t],\n\t\"./1F1FA-1F1F3.svg\": [\n\t\t3353,\n\t\t3353\n\t],\n\t\"./1F1FA-1F1F8.svg\": [\n\t\t5439,\n\t\t5439\n\t],\n\t\"./1F1FB-1F1F3.svg\": [\n\t\t3886,\n\t\t3886\n\t],\n\t\"./1F3F4-E0067-E0062-E0065-E006E-E0067-E007F.svg\": [\n\t\t6129,\n\t\t6129\n\t],\n\t\"./1F3F4-E0067-E0062-E0073-E0063-E0074-E007F.svg\": [\n\t\t138,\n\t\t138\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 4018;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./athens.js\": [\n\t\t6128,\n\t\t6869\n\t],\n\t\"./baku.js\": [\n\t\t2481,\n\t\t6810\n\t],\n\t\"./barcelona.js\": [\n\t\t6340,\n\t\t5792\n\t],\n\t\"./beijing.js\": [\n\t\t2145,\n\t\t2358\n\t],\n\t\"./berlin.js\": [\n\t\t7976,\n\t\t436\n\t],\n\t\"./bucharest.js\": [\n\t\t5249,\n\t\t5520\n\t],\n\t\"./budapest.js\": [\n\t\t8895,\n\t\t1321\n\t],\n\t\"./cairo.js\": [\n\t\t6509,\n\t\t5189\n\t],\n\t\"./changsha.js\": [\n\t\t574,\n\t\t6739\n\t],\n\t\"./chengdu.js\": [\n\t\t6312,\n\t\t7599\n\t],\n\t\"./chongqing.js\": [\n\t\t300,\n\t\t7081\n\t],\n\t\"./daegu.js\": [\n\t\t6995,\n\t\t4874\n\t],\n\t\"./dalian.js\": [\n\t\t5169,\n\t\t9186\n\t],\n\t\"./delhi.js\": [\n\t\t3707,\n\t\t8719\n\t],\n\t\"./dongguan.js\": [\n\t\t3280,\n\t\t7206\n\t],\n\t\"./dortmund.js\": [\n\t\t6079,\n\t\t134\n\t],\n\t\"./edinburgh.js\": [\n\t\t285,\n\t\t9770\n\t],\n\t\"./eskisehir.js\": [\n\t\t1686,\n\t\t8189\n\t],\n\t\"./foshan.js\": [\n\t\t3204,\n\t\t9898\n\t],\n\t\"./frankfurt.js\": [\n\t\t2040,\n\t\t4447\n\t],\n\t\"./glasgow.js\": [\n\t\t4476,\n\t\t1847\n\t],\n\t\"./gothenburg.js\": [\n\t\t6801,\n\t\t6951\n\t],\n\t\"./guadalajara.js\": [\n\t\t9399,\n\t\t1392\n\t],\n\t\"./guangzhou.js\": [\n\t\t5841,\n\t\t5449\n\t],\n\t\"./hangzhou.js\": [\n\t\t3427,\n\t\t17\n\t],\n\t\"./hanoi.js\": [\n\t\t507,\n\t\t8237\n\t],\n\t\"./harbin.js\": [\n\t\t4826,\n\t\t886\n\t],\n\t\"./hochiminh.js\": [\n\t\t6770,\n\t\t4788\n\t],\n\t\"./hongkong.js\": [\n\t\t4243,\n\t\t3106\n\t],\n\t\"./istanbul.js\": [\n\t\t3107,\n\t\t4073\n\t],\n\t\"./jinan.js\": [\n\t\t5719,\n\t\t5303\n\t],\n\t\"./kansai.js\": [\n\t\t382,\n\t\t310\n\t],\n\t\"./kaohsiung.js\": [\n\t\t3037,\n\t\t5081\n\t],\n\t\"./klangvalley.js\": [\n\t\t137,\n\t\t1951\n\t],\n\t\"./kunming.js\": [\n\t\t8852,\n\t\t8183\n\t],\n\t\"./lima.js\": [\n\t\t9118,\n\t\t8140\n\t],\n\t\"./lisbon.js\": [\n\t\t8814,\n\t\t3417\n\t],\n\t\"./london.js\": [\n\t\t8087,\n\t\t3875\n\t],\n\t\"./macao.js\": [\n\t\t8015,\n\t\t425\n\t],\n\t\"./madrid.js\": [\n\t\t8020,\n\t\t7826\n\t],\n\t\"./milan.js\": [\n\t\t4410,\n\t\t2028\n\t],\n\t\"./munich.js\": [\n\t\t7368,\n\t\t9890\n\t],\n\t\"./nanjing.js\": [\n\t\t1664,\n\t\t5944\n\t],\n\t\"./naples.js\": [\n\t\t3738,\n\t\t4737\n\t],\n\t\"./newtaipei.js\": [\n\t\t9114,\n\t\t3579\n\t],\n\t\"./osaka.js\": [\n\t\t1064,\n\t\t8975\n\t],\n\t\"./oslo.js\": [\n\t\t8057,\n\t\t1614\n\t],\n\t\"./other.js\": [\n\t\t7642,\n\t\t5066\n\t],\n\t\"./ottawa.js\": [\n\t\t254,\n\t\t2168\n\t],\n\t\"./paris.js\": [\n\t\t2720,\n\t\t743\n\t],\n\t\"./qingdao.js\": [\n\t\t7994,\n\t\t8291\n\t],\n\t\"./rheinruhr.js\": [\n\t\t6870,\n\t\t8413\n\t],\n\t\"./sanfrancisco.js\": [\n\t\t4747,\n\t\t6195\n\t],\n\t\"./sanktpeterburg.js\": [\n\t\t1832,\n\t\t441\n\t],\n\t\"./santiago.js\": [\n\t\t2568,\n\t\t6546\n\t],\n\t\"./saopaulo.js\": [\n\t\t6956,\n\t\t5288\n\t],\n\t\"./seoul.js\": [\n\t\t3266,\n\t\t3658\n\t],\n\t\"./shanghai.js\": [\n\t\t9656,\n\t\t2194\n\t],\n\t\"./shenyang.js\": [\n\t\t2266,\n\t\t1342\n\t],\n\t\"./shenzhen.js\": [\n\t\t4691,\n\t\t7153\n\t],\n\t\"./singapore.js\": [\n\t\t2459,\n\t\t5885\n\t],\n\t\"./stockholm.js\": [\n\t\t4606,\n\t\t6977\n\t],\n\t\"./suzhou.js\": [\n\t\t9819,\n\t\t7719\n\t],\n\t\"./taichung.js\": [\n\t\t5230,\n\t\t9\n\t],\n\t\"./taipei.js\": [\n\t\t9489,\n\t\t9450\n\t],\n\t\"./tehran.js\": [\n\t\t2573,\n\t\t1608\n\t],\n\t\"./tianjin.js\": [\n\t\t7942,\n\t\t2871\n\t],\n\t\"./tokyo.js\": [\n\t\t3762,\n\t\t2832\n\t],\n\t\"./toronto.js\": [\n\t\t8148,\n\t\t1902\n\t],\n\t\"./tyneandwear.js\": [\n\t\t9314,\n\t\t530\n\t],\n\t\"./vienna.js\": [\n\t\t5252,\n\t\t7101\n\t],\n\t\"./wuhan.js\": [\n\t\t3742,\n\t\t4111\n\t],\n\t\"./wuxi.js\": [\n\t\t4099,\n\t\t5418\n\t],\n\t\"./xiamen.js\": [\n\t\t4610,\n\t\t2338\n\t],\n\t\"./xian.js\": [\n\t\t2591,\n\t\t4760\n\t],\n\t\"./zhengzhou.js\": [\n\t\t7357,\n\t\t8759\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 7827;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./basic/coline.json\": [\n\t\t2401,\n\t\t8014\n\t],\n\t\"./basic/default.json\": [\n\t\t8453,\n\t\t8241\n\t],\n\t\"./basic/loop.json\": [\n\t\t8909,\n\t\t9410\n\t],\n\t\"./bjsubway/bj1.json\": [\n\t\t8741,\n\t\t6729\n\t],\n\t\"./bjsubway/bj10.json\": [\n\t\t8461,\n\t\t6230\n\t],\n\t\"./bjsubway/bj11.json\": [\n\t\t3279,\n\t\t7646\n\t],\n\t\"./bjsubway/bj13.json\": [\n\t\t7443,\n\t\t1188\n\t],\n\t\"./bjsubway/bj14.json\": [\n\t\t2906,\n\t\t9523\n\t],\n\t\"./bjsubway/bj16.json\": [\n\t\t7062,\n\t\t6698\n\t],\n\t\"./bjsubway/bj17.json\": [\n\t\t8241,\n\t\t8760\n\t],\n\t\"./bjsubway/bj2.json\": [\n\t\t5176,\n\t\t2773\n\t],\n\t\"./bjsubway/bj4.json\": [\n\t\t8641,\n\t\t6552\n\t],\n\t\"./bjsubway/bj5.json\": [\n\t\t1834,\n\t\t7680\n\t],\n\t\"./bjsubway/bj6.json\": [\n\t\t2022,\n\t\t5653\n\t],\n\t\"./bjsubway/bj7.json\": [\n\t\t6061,\n\t\t9259\n\t],\n\t\"./bjsubway/bj8.json\": [\n\t\t9846,\n\t\t5482\n\t],\n\t\"./bjsubway/bj9.json\": [\n\t\t9422,\n\t\t9797\n\t],\n\t\"./bjsubway/dae.json\": [\n\t\t4852,\n\t\t4269\n\t],\n\t\"./bjsubway/s1l.json\": [\n\t\t2830,\n\t\t3981\n\t],\n\t\"./bjsubway/t1l.json\": [\n\t\t1057,\n\t\t2381\n\t],\n\t\"./bjsubway/xjl.json\": [\n\t\t14,\n\t\t7200\n\t],\n\t\"./bjsubway/yzl.json\": [\n\t\t6315,\n\t\t1095\n\t],\n\t\"./company-config.json\": [\n\t\t6605\n\t],\n\t\"./fmetro/fs2.json\": [\n\t\t1139,\n\t\t9447\n\t],\n\t\"./fmetro/tgm1.json\": [\n\t\t1558,\n\t\t7149\n\t],\n\t\"./fmetro/tnh1.json\": [\n\t\t7249,\n\t\t7160\n\t],\n\t\"./gzmtr/apm.json\": [\n\t\t5098,\n\t\t6452\n\t],\n\t\"./gzmtr/gf.json\": [\n\t\t571,\n\t\t6354\n\t],\n\t\"./gzmtr/gz1.json\": [\n\t\t8161,\n\t\t2200\n\t],\n\t\"./gzmtr/gz13.json\": [\n\t\t4745,\n\t\t3082\n\t],\n\t\"./gzmtr/gz14.json\": [\n\t\t9447,\n\t\t9950\n\t],\n\t\"./gzmtr/gz18.json\": [\n\t\t9361,\n\t\t7877\n\t],\n\t\"./gzmtr/gz2.json\": [\n\t\t7119,\n\t\t6583\n\t],\n\t\"./gzmtr/gz21.json\": [\n\t\t4695,\n\t\t7724\n\t],\n\t\"./gzmtr/gz22.json\": [\n\t\t2671,\n\t\t4015\n\t],\n\t\"./gzmtr/gz3.json\": [\n\t\t622,\n\t\t9826\n\t],\n\t\"./gzmtr/gz4.json\": [\n\t\t5440,\n\t\t3084\n\t],\n\t\"./gzmtr/gz5.json\": [\n\t\t3880,\n\t\t3109\n\t],\n\t\"./gzmtr/gz6.json\": [\n\t\t7426,\n\t\t2846\n\t],\n\t\"./gzmtr/gz7.json\": [\n\t\t3290,\n\t\t9925\n\t],\n\t\"./gzmtr/gz8.json\": [\n\t\t9045,\n\t\t8924\n\t],\n\t\"./gzmtr/gz9.json\": [\n\t\t8481,\n\t\t7332\n\t],\n\t\"./gzmtr/thp1.json\": [\n\t\t5227,\n\t\t2100\n\t],\n\t\"./gzmtr/thz1.json\": [\n\t\t2887,\n\t\t9416\n\t],\n\t\"./hrbmetro/hrb1.json\": [\n\t\t3002,\n\t\t199\n\t],\n\t\"./hrbmetro/hrb2.json\": [\n\t\t6635,\n\t\t4557\n\t],\n\t\"./hrbmetro/hrb3.json\": [\n\t\t555,\n\t\t8512\n\t],\n\t\"./kmrailtransit/km1.json\": [\n\t\t3285,\n\t\t2658\n\t],\n\t\"./kmrailtransit/km2.json\": [\n\t\t4760,\n\t\t9655\n\t],\n\t\"./kmrailtransit/km3.json\": [\n\t\t603,\n\t\t4250\n\t],\n\t\"./kmrailtransit/km4.json\": [\n\t\t1302,\n\t\t6555\n\t],\n\t\"./kmrailtransit/km5.json\": [\n\t\t1672,\n\t\t9675\n\t],\n\t\"./kmrailtransit/km6.json\": [\n\t\t5903,\n\t\t2663\n\t],\n\t\"./kvtransit/klMonorail.json\": [\n\t\t7749,\n\t\t113\n\t],\n\t\"./kvtransit/lrtAmpang.json\": [\n\t\t1534,\n\t\t6080\n\t],\n\t\"./kvtransit/lrtKelanaJaya.json\": [\n\t\t4219,\n\t\t8766\n\t],\n\t\"./kvtransit/lrtSriPataling.json\": [\n\t\t9311,\n\t\t8724\n\t],\n\t\"./kvtransit/mrtKajang.json\": [\n\t\t9512,\n\t\t6862\n\t],\n\t\"./mlm/taipa.json\": [\n\t\t4435,\n\t\t4694\n\t],\n\t\"./mtr/ael.json\": [\n\t\t6215,\n\t\t5945\n\t],\n\t\"./mtr/drl.json\": [\n\t\t6083,\n\t\t5074\n\t],\n\t\"./mtr/eal.json\": [\n\t\t9800,\n\t\t5958\n\t],\n\t\"./mtr/isl.json\": [\n\t\t7314,\n\t\t4754\n\t],\n\t\"./mtr/ktl.json\": [\n\t\t1400,\n\t\t6533\n\t],\n\t\"./mtr/sile.json\": [\n\t\t7438,\n\t\t2490\n\t],\n\t\"./mtr/tcl.json\": [\n\t\t4512,\n\t\t169\n\t],\n\t\"./mtr/tkl.json\": [\n\t\t1257,\n\t\t5910\n\t],\n\t\"./mtr/tml.json\": [\n\t\t5339,\n\t\t4991\n\t],\n\t\"./mtr/twl.json\": [\n\t\t5030,\n\t\t403\n\t],\n\t\"./njmetro/nj1.json\": [\n\t\t2868,\n\t\t564\n\t],\n\t\"./njmetro/nj10.json\": [\n\t\t8421,\n\t\t1180\n\t],\n\t\"./njmetro/nj2.json\": [\n\t\t4583,\n\t\t7792\n\t],\n\t\"./njmetro/nj3.json\": [\n\t\t3347,\n\t\t1899\n\t],\n\t\"./njmetro/nj4.json\": [\n\t\t7811,\n\t\t3497\n\t],\n\t\"./qdmetro/qd11.json\": [\n\t\t186,\n\t\t6899\n\t],\n\t\"./qdmetro/qd13.json\": [\n\t\t9736,\n\t\t4092\n\t],\n\t\"./qdmetro/qd2.json\": [\n\t\t5582,\n\t\t1471\n\t],\n\t\"./qdmetro/qd3.json\": [\n\t\t3457,\n\t\t4138\n\t],\n\t\"./qdmetro/qd8.json\": [\n\t\t7703,\n\t\t6293\n\t],\n\t\"./saopaulometro/sp1.json\": [\n\t\t2702,\n\t\t4402\n\t],\n\t\"./saopaulometro/sp10.json\": [\n\t\t1443,\n\t\t5680\n\t],\n\t\"./saopaulometro/sp11.json\": [\n\t\t8362,\n\t\t5325\n\t],\n\t\"./saopaulometro/sp12.json\": [\n\t\t7393,\n\t\t852\n\t],\n\t\"./saopaulometro/sp13.json\": [\n\t\t2794,\n\t\t6288\n\t],\n\t\"./saopaulometro/sp15.json\": [\n\t\t6267,\n\t\t758\n\t],\n\t\"./saopaulometro/sp2.json\": [\n\t\t7182,\n\t\t9619\n\t],\n\t\"./saopaulometro/sp3.json\": [\n\t\t1102,\n\t\t7855\n\t],\n\t\"./saopaulometro/sp4.json\": [\n\t\t2489,\n\t\t2750\n\t],\n\t\"./saopaulometro/sp5.json\": [\n\t\t2103,\n\t\t4387\n\t],\n\t\"./saopaulometro/sp7.json\": [\n\t\t9021,\n\t\t153\n\t],\n\t\"./saopaulometro/sp8.json\": [\n\t\t1280,\n\t\t4996\n\t],\n\t\"./saopaulometro/sp9.json\": [\n\t\t4337,\n\t\t911\n\t],\n\t\"./shmetro/sh1.json\": [\n\t\t5562,\n\t\t6569\n\t],\n\t\"./shmetro/sh10.json\": [\n\t\t6438,\n\t\t6890\n\t],\n\t\"./shmetro/sh11.json\": [\n\t\t6485,\n\t\t3692\n\t],\n\t\"./shmetro/sh12.json\": [\n\t\t7048,\n\t\t856\n\t],\n\t\"./shmetro/sh13.json\": [\n\t\t9155,\n\t\t2791\n\t],\n\t\"./shmetro/sh14.json\": [\n\t\t2243,\n\t\t5941\n\t],\n\t\"./shmetro/sh15.json\": [\n\t\t6484,\n\t\t4254\n\t],\n\t\"./shmetro/sh16.json\": [\n\t\t1465,\n\t\t4605\n\t],\n\t\"./shmetro/sh17.json\": [\n\t\t7079,\n\t\t74\n\t],\n\t\"./shmetro/sh18.json\": [\n\t\t4120,\n\t\t2632\n\t],\n\t\"./shmetro/sh2.json\": [\n\t\t4580,\n\t\t3456\n\t],\n\t\"./shmetro/sh3&4.json\": [\n\t\t7225,\n\t\t5294\n\t],\n\t\"./shmetro/sh3.json\": [\n\t\t7439,\n\t\t7211\n\t],\n\t\"./shmetro/sh4.json\": [\n\t\t1088,\n\t\t6745\n\t],\n\t\"./shmetro/sh5.json\": [\n\t\t7346,\n\t\t7769\n\t],\n\t\"./shmetro/sh6.json\": [\n\t\t8358,\n\t\t3263\n\t],\n\t\"./shmetro/sh7.json\": [\n\t\t3095,\n\t\t1475\n\t],\n\t\"./shmetro/sh8.json\": [\n\t\t4409,\n\t\t8781\n\t],\n\t\"./shmetro/sh9.json\": [\n\t\t7345,\n\t\t7321\n\t],\n\t\"./szmetro/sz1.json\": [\n\t\t7109,\n\t\t5993\n\t],\n\t\"./szmetro/sz3.json\": [\n\t\t1862,\n\t\t7910\n\t],\n\t\"./szmetro/sz4.json\": [\n\t\t7789,\n\t\t6632\n\t],\n\t\"./template-configs.json\": [\n\t\t2722\n\t],\n\t\"./torontosubway/ttc1.json\": [\n\t\t2966,\n\t\t5925\n\t],\n\t\"./torontosubway/ttc2.json\": [\n\t\t3298,\n\t\t6568\n\t],\n\t\"./torontosubway/ttc3.json\": [\n\t\t8973,\n\t\t9477\n\t],\n\t\"./torontosubway/ttc4.json\": [\n\t\t6730,\n\t\t8476\n\t],\n\t\"./zzmetro/zz1.json\": [\n\t\t4557,\n\t\t2023\n\t],\n\t\"./zzmetro/zz14.json\": [\n\t\t2049,\n\t\t8330\n\t],\n\t\"./zzmetro/zz2.json\": [\n\t\t6226,\n\t\t7522\n\t],\n\t\"./zzmetro/zz3.json\": [\n\t\t5090,\n\t\t8615\n\t],\n\t\"./zzmetro/zz4.json\": [\n\t\t2332,\n\t\t5515\n\t],\n\t\"./zzmetro/zz5.json\": [\n\t\t3790,\n\t\t5797\n\t],\n\t\"./zzmetro/zz6.json\": [\n\t\t5444,\n\t\t1325\n\t],\n\t\"./zzmetro/zz9.json\": [\n\t\t1393,\n\t\t388\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 1427;\nmodule.exports = webpackAsyncContext;","import { CanvasType, RmgStyle, Theme } from '../constants/constants';\nimport React, { ReactNode, Suspense, useEffect } from 'react';\nimport FallbackLoader from '../components/fallback-loader';\n\ninterface SvgWrapperProps {\n    type: CanvasType;\n    style: RmgStyle;\n    svgWidth: number;\n    svgHeight: number;\n    canvasScale: number;\n    theme: Theme;\n    children: ReactNode;\n}\n\nexport default function SvgWrapper(props: SvgWrapperProps) {\n    const { type, style, svgWidth, svgHeight, canvasScale, theme, children } = props;\n\n    useEffect(() => {\n        (document.getElementById('css_' + type) as HTMLLinkElement).href =\n            process.env.PUBLIC_URL + `/styles/${type}_${style}.css`;\n        return () => {\n            (document.getElementById('css_' + type) as HTMLLinkElement).href = '';\n        };\n    }, [style]);\n\n    return (\n        <svg\n            id={type}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            height={svgHeight * canvasScale}\n            viewBox={`0 0 ${svgWidth} ${svgHeight}`}\n            colorInterpolationFilters=\"sRGB\"\n            style={{\n                ['--rmg-svg-width' as any]: svgWidth + 'px',\n                ['--rmg-svg-height' as any]: svgHeight + 'px',\n                ['--rmg-theme-colour' as any]: theme[2],\n                ['--rmg-theme-fg' as any]: theme[3],\n            }}\n        >\n            <rect\n                id=\"canvas-bg\"\n                fill=\"white\"\n                style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n            />\n            <Suspense fallback={<FallbackLoader />}>{children}</Suspense>\n            <rect\n                id=\"canvas-border\"\n                fill=\"none\"\n                strokeWidth={3}\n                stroke=\"none\"\n                style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n            />\n        </svg>\n    );\n}\n","import React, { lazy, ReactNode, useEffect } from 'react';\nimport { CanvasType, RmgStyle } from '../constants/constants';\nimport { useRootSelector } from '../redux';\nimport SvgWrapper from './svg-wrapper';\nimport { useDispatch } from 'react-redux';\nimport { setStyle } from '../redux/param/action';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Flex } from '@chakra-ui/react';\nimport ErrorBoundary from '../error-boundary';\n\nconst style = {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    '&::before, &::after': {\n        content: '\"\"',\n        margin: 'auto',\n    },\n    '& > svg': {\n        flex: '0 0 auto',\n        border: '1px solid black',\n    },\n};\n\nexport default function SvgRouter() {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const { canvasToShow, canvasScale } = useRootSelector(state => state.app);\n    const {\n        svgWidth: svgWidths,\n        svg_height: svgHeight,\n        style: rmgStyle,\n        theme,\n    } = useRootSelector(state => state.param);\n\n    if (location.pathname !== '/' + rmgStyle && location.pathname !== '/v3/' + rmgStyle) {\n        const nextStyle = location.pathname.split('/').slice(-1)[0] as RmgStyle;\n        if (Object.values(RmgStyle).includes(nextStyle)) {\n            // set style in param\n            dispatch(setStyle(nextStyle));\n        } else {\n            // push route to match param's style\n            navigate(rmgStyle);\n        }\n    }\n\n    useEffect(() => {\n        (document.getElementById('css_share') as HTMLLinkElement).href =\n            process.env.PUBLIC_URL + `/styles/share_${rmgStyle}.css`;\n    }, [rmgStyle]);\n\n    const filteredCanvas = (Object.keys(canvasList[rmgStyle]) as CanvasType[]).filter(canvas =>\n        canvasToShow === 'all' ? true : canvasToShow === canvas\n    );\n\n    return (\n        <Flex sx={style}>\n            {filteredCanvas.map(canvas => (\n                <ErrorBoundary\n                    key={canvas + rmgStyle}\n                    style={{ minWidth: 750, height: svgHeight * canvasScale, overflowY: 'auto' }}\n                >\n                    <SvgWrapper\n                        type={canvas}\n                        style={rmgStyle}\n                        svgWidth={svgWidths[canvas]}\n                        svgHeight={svgHeight}\n                        canvasScale={canvasScale}\n                        theme={theme}\n                    >\n                        {canvasList[rmgStyle][canvas]}\n                    </SvgWrapper>\n                </ErrorBoundary>\n            ))}\n        </Flex>\n    );\n}\n\n// Canvas available\n\nconst RunInGZMTR = lazy(() => import(/* webpackChunkName: \"runinGZMTR\" */ './runin/runin-gzmtr'));\nconst RailMapGZMTR = lazy(() => import(/* webpackChunkName: \"railmapGZMTR\" */ './railmap/railmap-gzmtr'));\n\nconst DestinationMTR = lazy(() => import(/* webpackChunkName: \"destinationMTR\" */ './destination/destination-mtr'));\nconst RailMapMTR = lazy(() => import(/* webpackChunkName: \"railmapMTR\" */ './railmap/railmap-mtr'));\n\nconst DestinationSHMetro = lazy(\n    () => import(/* webpackChunkName: \"destinationSHMetro\" */ './destination/destination-shmetro')\n);\nconst RunInSHMetro = lazy(() => import(/* webpackChunkName: \"runinSHMetro\" */ './runin/runin-shmetro'));\nconst RailMapSHMetro = lazy(() => import(/* webpackChunkName: \"railmapSHMetro\" */ './railmap/railmap-shmetro'));\nconst IndoorSHMetro = lazy(() => import(/* webpackChunkName: \"indoorSHMetro\" */ './indoor/indoor-shmetro'));\n\n/**\n * Each value of this object is an object of ORDERED key-value pairs\n */\nconst canvasList: Record<RmgStyle, { [c in CanvasType]?: ReactNode }> = {\n    [RmgStyle.GZMTR]: {\n        [CanvasType.RunIn]: <RunInGZMTR />,\n        [CanvasType.RailMap]: <RailMapGZMTR />,\n    },\n    [RmgStyle.MTR]: {\n        [CanvasType.Destination]: <DestinationMTR />,\n        [CanvasType.RailMap]: <RailMapMTR />,\n    },\n    [RmgStyle.SHMetro]: {\n        [CanvasType.Destination]: <DestinationSHMetro />,\n        [CanvasType.RunIn]: <RunInSHMetro />,\n        [CanvasType.RailMap]: <RailMapSHMetro />,\n        [CanvasType.Indoor]: <IndoorSHMetro />,\n    },\n};\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { updateStationName, updateStationNum, updateStationSecondaryName } from '../../../redux/param/action';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function InfoSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedStation = useRootSelector(state => state.app.selectedStation);\n    console.log('InfoSection:: Rendering for', selectedStation);\n    const style = useRootSelector(state => state.param.style);\n    const { num, name, secondaryName } = useRootSelector(state => state.param.stn_list[selectedStation]);\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'input',\n            label: t('StationSidePanel.info.num'),\n            value: num,\n            placeholder: '01',\n            onChange: (value: string) => dispatch(updateStationNum(selectedStation, value)),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'input',\n            label: t('Chinese name'),\n            value: name[0],\n            onChange: (value: string) => dispatch(updateStationName(selectedStation, [value, name[1]])),\n        },\n        {\n            type: 'input',\n            label: t('English name'),\n            value: name[1],\n            onChange: (value: string) => dispatch(updateStationName(selectedStation, [name[0], value])),\n        },\n        {\n            type: 'input',\n            label: t('StationSidePanel.info.zhSecondary'),\n            value: secondaryName ? secondaryName[0] : '',\n            placeholder: '1号航站楼',\n            onChange: (value: string) =>\n                dispatch(updateStationSecondaryName(selectedStation, [value, secondaryName ? secondaryName[1] : ''])),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'input',\n            label: t('StationSidePanel.info.enSecondary'),\n            value: secondaryName ? secondaryName[1] : '',\n            placeholder: 'Terminal 1',\n            onChange: (value: string) =>\n                dispatch(updateStationSecondaryName(selectedStation, [secondaryName ? secondaryName[0] : '', value])),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StationSidePanel.info.title')}\n            </Heading>\n\n            <RmgFields fields={fields} minW={130} />\n        </Box>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Image } from '@chakra-ui/react';\n\ninterface FlagSvgEmojiProps {\n    countryCode: string;\n    svgFilename?: string;\n}\n\nexport default function FlagSvgEmoji(props: FlagSvgEmojiProps) {\n    const { countryCode, svgFilename } = props;\n\n    const [src, setSrc] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        if (svgFilename) {\n            import('@railmapgen/rmg-palette-resources/flags/' + svgFilename)\n                .then(module => module.default)\n                .then(setSrc)\n                .catch(err => console.error(`Failed to find SVG file ${svgFilename} as ${err?.message}`));\n        }\n    }, [svgFilename]);\n\n    return src ? <Image src={src} alt={`Flag of ${countryCode}`} h={17} mr={1} /> : <></>;\n}\n","import React from 'react';\nimport { RmgAutoComplete } from '@railmapgen/rmg-components';\nimport { CityCode, CityEntry, cityList, countryList } from '@railmapgen/rmg-palette-resources';\nimport { LanguageCode } from '../../../constants/constants';\nimport { useTranslation } from 'react-i18next';\nimport FlagSvgEmoji from './flag-svg-emoji';\n\ninterface CityPickerProps {\n    defaultValueId?: CityCode;\n    onChange?: (val: CityCode) => void;\n}\n\nexport default function CityPicker(props: CityPickerProps) {\n    const { defaultValueId, onChange } = props;\n\n    const { i18n } = useTranslation();\n\n    const currentItem = defaultValueId ? cityList.find(item => item.id === defaultValueId) : undefined;\n\n    const displayValue = (item: CityEntry): string => {\n        return i18n.languages.map(lng => item.name[lng as LanguageCode]).find(name => name !== undefined)!!;\n    };\n\n    const displayHandler = (item: CityEntry) => {\n        const isCensorTWFlag =\n            item.country === 'TW' &&\n            [LanguageCode.ChineseSimp, LanguageCode.ChineseCN].includes(i18n.languages[0] as LanguageCode);\n        const isWindowsClient = ['Win32', 'Win64'].includes(navigator.platform);\n        // const isWindowsClient = true; // uncomment this line for Windows testing\n\n        const name = i18n.languages.map(lng => item.name[lng as LanguageCode]).find(name => name !== undefined);\n        const flagSvg = countryList.find(country => country.id === item.country)?.flagSvg;\n        const flagEmoji = countryList.find(country => country.id === item.country)?.flagEmoji;\n\n        return (\n            <>\n                {isCensorTWFlag ? (\n                    <span>🏴&nbsp;</span>\n                ) : isWindowsClient ? (\n                    <FlagSvgEmoji countryCode={item.country} svgFilename={flagSvg} />\n                ) : (\n                    <span>{flagEmoji}&nbsp;</span>\n                )}\n                {name}\n            </>\n        );\n    };\n\n    const predicate = (item: CityEntry, input: string): boolean => {\n        return Object.values(item.name).some(name => name.includes(input));\n    };\n\n    const data = cityList.slice().sort((a, b) => {\n        if (a.id === CityCode.Other) {\n            return 1;\n        } else if (b.id === CityCode.Other) {\n            return -1;\n        } else {\n            return displayValue(a).localeCompare(displayValue(b), i18n.languages[0]);\n        }\n    });\n\n    return (\n        <RmgAutoComplete\n            data={data}\n            displayValue={displayValue}\n            displayHandler={displayHandler}\n            predicate={predicate}\n            defaultValue={currentItem}\n            onChange={item => onChange?.(item.id)}\n        />\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { ColourHex, LanguageCode, MonoColour, PaletteEntry } from '../../../constants/constants';\nimport { RmgAutoComplete } from '@railmapgen/rmg-components';\nimport { CityCode } from '@railmapgen/rmg-palette-resources';\nimport { useTranslation } from 'react-i18next';\nimport { RmgLineBadge } from '@railmapgen/rmg-components';\n\nconst usePalette = (cityCode?: CityCode) => {\n    const [paletteList, setPaletteList] = useState<PaletteEntry[]>([]);\n\n    useEffect(() => {\n        import(/* webpackChunkName: \"palettes\" */ `@railmapgen/rmg-palette-resources/palettes/${cityCode}.js`)\n            .then(module => setPaletteList(module.default))\n            .catch(() => setPaletteList([]));\n    }, [cityCode]);\n\n    return paletteList;\n};\n\ninterface ColourPickerProps {\n    city?: CityCode;\n    defaultValueId?: string;\n    onChange?: (lineCode: string, bg: ColourHex, fg: MonoColour) => void;\n}\n\nexport default function ColourPicker(props: ColourPickerProps) {\n    const { city, defaultValueId, onChange } = props;\n\n    const { i18n } = useTranslation();\n\n    const paletteList = usePalette(city);\n\n    const currentItem = defaultValueId ? paletteList.find(palette => palette.id === defaultValueId) : undefined;\n\n    const displayValue = (item: PaletteEntry): string => {\n        return i18n.languages.map(lng => item.name[lng as LanguageCode]).find(name => name !== undefined)!!;\n    };\n\n    const displayHandler = (item: PaletteEntry) => {\n        const displayName = displayValue(item);\n\n        return <RmgLineBadge name={displayName} fg={item.fg || MonoColour.white} bg={item.colour} />;\n    };\n\n    const predicate = (item: PaletteEntry, input: string): boolean => {\n        return Object.values(item.name).some(name => name.includes(input));\n    };\n\n    return (\n        <RmgAutoComplete\n            data={paletteList}\n            displayValue={displayValue}\n            displayHandler={displayHandler}\n            predicate={predicate}\n            defaultValue={currentItem}\n            onChange={item => onChange?.(item.id, item.colour, item.fg || MonoColour.white)}\n        />\n    );\n}\n","import {\n    Button,\n    Icon,\n    Link,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    Tab,\n    TabList,\n    TabPanel,\n    TabPanels,\n    Tabs,\n    Text,\n    VStack,\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { ColourHex, MonoColour, Theme } from '../../../constants/constants';\nimport CityPicker from './city-picker';\nimport ColourPicker from './colour-picker';\nimport { CityCode } from '@railmapgen/rmg-palette-resources';\nimport { useTranslation } from 'react-i18next';\nimport { RmgFields, RmgFieldsField, RmgLineBadge } from '@railmapgen/rmg-components';\nimport { MdOpenInNew } from 'react-icons/md';\n\ninterface ColourModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    defaultTheme?: Theme;\n    onUpdate?: (theme: Theme) => void;\n}\n\nexport default function ColourModal(props: ColourModalProps) {\n    const { isOpen, onClose, defaultTheme, onUpdate } = props;\n\n    const { t } = useTranslation();\n\n    const [cityCode, setCityCode] = useState(defaultTheme?.[0]);\n    const [lineCode, setLineCode] = useState(defaultTheme?.[1]);\n    const [bgColour, setBgColour] = useState(defaultTheme?.[2] || '#AAAAAA');\n    const [fgColour, setFgColour] = useState(defaultTheme?.[3] || MonoColour.white);\n\n    useEffect(() => {\n        if (defaultTheme) {\n            setCityCode(defaultTheme[0]);\n            setLineCode(defaultTheme[1]);\n            setBgColour(defaultTheme[2]);\n            setFgColour(defaultTheme[3]);\n        }\n    }, [isOpen, defaultTheme?.toString()]);\n\n    const paletteFields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('ColourModal.city'),\n            component: (\n                <CityPicker\n                    defaultValueId={cityCode}\n                    onChange={value => {\n                        setCityCode(value);\n                        setLineCode(undefined);\n                        setBgColour('#AAAAAA');\n                        setFgColour(MonoColour.white);\n                    }}\n                />\n            ),\n        },\n        {\n            type: 'custom',\n            label: t('ColourModal.line'),\n            component: (\n                <ColourPicker\n                    city={cityCode}\n                    defaultValueId={lineCode}\n                    onChange={(line, bg, fg) => {\n                        setLineCode(line);\n                        setBgColour(bg);\n                        setFgColour(fg);\n                    }}\n                />\n            ),\n        },\n    ];\n\n    const customFields: RmgFieldsField[] = [\n        {\n            type: 'input',\n            label: t('ColourModal.bg'),\n            variant: 'color',\n            value: bgColour,\n            placeholder: '#F3D03E',\n            onChange: value => {\n                setCityCode(CityCode.Other);\n                setLineCode('other');\n                setBgColour(value as ColourHex);\n            },\n        },\n        {\n            type: 'select',\n            label: t('ColourModal.fg'),\n            value: fgColour,\n            options: {\n                [MonoColour.white]: t('ColourModal.white'),\n                [MonoColour.black]: t('ColourModal.black'),\n            },\n            onChange: value => {\n                setCityCode(CityCode.Other);\n                setLineCode('other');\n                setFgColour(value as MonoColour);\n            },\n        },\n    ];\n\n    const isSubmitEnabled = cityCode && lineCode && bgColour && fgColour;\n\n    const handleSubmit = () => {\n        if (isSubmitEnabled) {\n            onUpdate?.([cityCode, lineCode, bgColour, fgColour]);\n            onClose();\n        }\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('ColourModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <VStack>\n                        <RmgLineBadge name={t('ColourModal.example')} fg={fgColour} bg={bgColour} />\n\n                        <Tabs isFitted colorScheme=\"teal\" w=\"100%\" defaultIndex={cityCode === CityCode.Other ? 1 : 0}>\n                            <TabList>\n                                <Tab>{t('ColourModal.palette')}</Tab>\n                                <Tab>{t('ColourModal.custom')}</Tab>\n                            </TabList>\n\n                            <TabPanels>\n                                <TabPanel>\n                                    <RmgFields fields={paletteFields} />\n                                </TabPanel>\n                                <TabPanel>\n                                    <RmgFields fields={customFields} />\n                                </TabPanel>\n                            </TabPanels>\n                        </Tabs>\n                    </VStack>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Text fontSize=\"sm\" marginRight={2}>\n                        {t('ColourModal.seeAll')}\n                        <Link color=\"teal.500\" href=\"/rmg-palette\" isExternal={true}>\n                            RMG Palette <Icon as={MdOpenInNew} />\n                        </Link>\n                    </Text>\n\n                    <Button colorScheme=\"teal\" onClick={handleSubmit} disabled={!isSubmitEnabled}>\n                        {t('ColourModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import { ColourHex } from '../constants/constants';\nimport { rmgChakraTheme } from '@railmapgen/rmg-components';\n\nexport default class ColourUtil {\n    private static hexToRgb(hex: ColourHex): [number, number, number] {\n        return [parseInt(hex.slice(1, 3), 16), parseInt(hex.slice(3, 5), 16), parseInt(hex.slice(5, 7), 16)];\n    }\n\n    public static fade(hex: ColourHex, alpha: number): `rgba(${string})` {\n        return `rgba(${[...this.hexToRgb(hex), alpha].join(',')})`;\n    }\n\n    public static euclideanDistance(hex1: ColourHex, hex2: ColourHex): number {\n        return this.hexToRgb(hex1).reduce((acc, cur, idx) => {\n            return acc + Math.pow(cur - this.hexToRgb(hex2)[idx], 2);\n        }, 0);\n    }\n}\n\nexport const findNearestColour = (hex: ColourHex): string => {\n    const colourDb: Record<string, Record<string, ColourHex> | ColourHex> = rmgChakraTheme.colors;\n\n    const [nearestColour] = Object.entries(colourDb).reduce(\n        (acc, cur) => {\n            if (cur[0].includes('Alpha') || cur[0] === 'current') {\n                return acc;\n            } else if (typeof cur[1] === 'string') {\n                const dist = ColourUtil.euclideanDistance(hex, cur[1]);\n                return dist < acc[1] ? [cur[0], dist] : acc;\n            } else {\n                const dist = ColourUtil.euclideanDistance(hex, cur[1]['600']);\n                return dist < acc[1] ? [cur[0], dist] : acc;\n            }\n        },\n        ['brand', Infinity]\n    );\n    return nearestColour;\n};\n","import React from 'react';\nimport ColourUtil from '../../theme/colour-util';\nimport { MdCircle } from 'react-icons/md';\nimport { IconButton } from '@chakra-ui/react';\nimport { Theme } from '../../constants/constants';\nimport { useTranslation } from 'react-i18next';\n\ninterface ThemeButtonProps {\n    theme: Theme;\n    onClick?: () => void;\n}\n\nexport default function ThemeButton(props: ThemeButtonProps) {\n    const { theme, onClick } = props;\n\n    const { t } = useTranslation();\n\n    return (\n        <IconButton\n            size=\"xs\"\n            aria-label={t('Colour')}\n            mt=\"0.45px\"\n            color={theme[3]}\n            bg={theme[2]}\n            _hover={{ bg: ColourUtil.fade(theme[2], 0.7) }}\n            icon={<MdCircle />}\n            onClick={onClick}\n        />\n    );\n}\n","import React, { useState } from 'react';\nimport { Box, HStack, IconButton, Text } from '@chakra-ui/react';\nimport { InterchangeInfo, MonoColour, Theme } from '../../../constants/constants';\nimport { MdAdd, MdContentCopy, MdDelete } from 'react-icons/md';\nimport ColourModal from '../../modal/colour-modal/colour-modal';\nimport { useTranslation } from 'react-i18next';\nimport { useRootSelector } from '../../../redux';\nimport ThemeButton from '../theme-button';\nimport { RmgCard, RmgFields, RmgFieldsField, RmgLabel } from '@railmapgen/rmg-components';\n\ninterface InterchangeCardProps {\n    interchangeList: InterchangeInfo[];\n    onAdd?: (info: InterchangeInfo) => void;\n    onDelete?: (index: number) => void;\n    onUpdate?: (index: number, info: InterchangeInfo) => void;\n}\n\nexport default function InterchangeCard(props: InterchangeCardProps) {\n    const { interchangeList, onAdd, onDelete, onUpdate } = props;\n\n    const { t } = useTranslation();\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n\n    const { theme, stn_list: stationList } = useRootSelector(state => state.param);\n\n    const usedNameList = Object.values(stationList).reduce<[string[], string[]]>(\n        (acc, cur) => {\n            const [zhAcc, enAcc] = acc;\n            return [\n                [...new Set(zhAcc.concat(cur.transfer.info.flat().map(it => it[4])))],\n                [...new Set(enAcc.concat(cur.transfer.info.flat().map(it => it[5])))],\n            ];\n        },\n        [[], []]\n    );\n\n    const interchangeFields: RmgFieldsField[][] = interchangeList.map((it, i) => [\n        {\n            type: 'input',\n            label: t('Chinese name'),\n            value: it[4],\n            minW: '80px',\n            onChange: val => onUpdate?.(i, [it[0], it[1], it[2], it[3], val, it[5]]),\n            optionList: usedNameList[0],\n        },\n        {\n            type: 'input',\n            label: t('English name'),\n            value: it[5],\n            minW: '80px',\n            onChange: val => onUpdate?.(i, [it[0], it[1], it[2], it[3], it[4], val]),\n            optionList: usedNameList[1],\n        },\n    ]);\n\n    return (\n        <RmgCard direction=\"column\">\n            {interchangeList.length === 0 && (\n                <HStack spacing={0.5} data-testid={`interchange-card-stack`}>\n                    <Text as=\"i\" flex={1} align=\"center\" fontSize=\"md\" colorScheme=\"gray\">\n                        {t('StationSidePanel.interchange.noInterchanges')}\n                    </Text>\n\n                    <IconButton\n                        size=\"sm\"\n                        variant=\"ghost\"\n                        aria-label={t('StationSidePanel.interchange.add')}\n                        onClick={() => onAdd?.([theme[0], '', '#aaaaaa', MonoColour.white, '', ''])}\n                        icon={<MdAdd />}\n                    />\n                </HStack>\n            )}\n\n            {interchangeList.map((it, i) => (\n                <HStack key={i} spacing={0.5} data-testid={`interchange-card-stack-${i}`}>\n                    <RmgLabel label={t('Colour')} minW=\"40px\" noLabel={i !== 0}>\n                        <ThemeButton\n                            theme={[it[0], it[1], it[2], it[3]]}\n                            onClick={() => {\n                                setIsModalOpen(true);\n                                setSelectedIndex(i);\n                            }}\n                        />\n                    </RmgLabel>\n\n                    <RmgFields fields={interchangeFields[i]} noLabel={i !== 0} />\n\n                    {onAdd && i === interchangeFields.length - 1 ? (\n                        <IconButton\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            aria-label={t('StationSidePanel.interchange.copy')}\n                            onClick={() => onAdd?.(interchangeList.slice(-1)[0])} // duplicate last leg\n                            icon={<MdContentCopy />}\n                        />\n                    ) : (\n                        <Box minW={8} />\n                    )}\n\n                    {onDelete && (\n                        <IconButton\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            aria-label={t('StationSidePanel.interchange.remove')}\n                            onClick={() => onDelete?.(i)}\n                            icon={<MdDelete />}\n                        />\n                    )}\n                </HStack>\n            ))}\n\n            <ColourModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                defaultTheme={interchangeList[selectedIndex]?.slice(0, 4) as Theme}\n                onUpdate={theme =>\n                    onUpdate?.(selectedIndex, [\n                        ...theme,\n                        interchangeList[selectedIndex][4],\n                        interchangeList[selectedIndex][5],\n                    ])\n                }\n            />\n        </RmgCard>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup } from '@chakra-ui/react';\n\ntype ButtonGroupSelection<T> = {\n    label: string;\n    value: T;\n    disabled?: boolean;\n};\n\ntype RmgButtonGroupSingleSelectProps<T> = {\n    selections: ButtonGroupSelection<T>[];\n    defaultValue: T;\n    onChange?: (value: T) => void;\n    multiSelect?: false;\n};\n\ntype RmgButtonGroupMultiSelectProps<T> = {\n    selections: ButtonGroupSelection<T>[];\n    defaultValue: T[];\n    onChange?: (value: T[]) => void;\n    multiSelect: true;\n};\n\ntype RmgButtonGroupProps<T> = RmgButtonGroupSingleSelectProps<T> | RmgButtonGroupMultiSelectProps<T>;\n\nexport default function RmgButtonGroup<T extends string | boolean>(props: RmgButtonGroupProps<T>) {\n    const { selections, defaultValue, onChange, multiSelect } = props;\n\n    const [value, setValue] = useState(defaultValue);\n\n    useEffect(() => {\n        defaultValue.toString() && setValue(defaultValue);\n    }, [defaultValue.toString()]);\n\n    const handleToggle = (val: T) => {\n        if (multiSelect) {\n            const prevValue = value as T[];\n            const nextValue = prevValue.includes(val) ? prevValue.filter(v => v !== val) : [...prevValue, val];\n\n            setValue(nextValue);\n            (onChange as RmgButtonGroupMultiSelectProps<T>['onChange'])?.(nextValue);\n        } else {\n            setValue(val);\n            (onChange as RmgButtonGroupSingleSelectProps<T>['onChange'])?.(val);\n        }\n    };\n\n    return (\n        <ButtonGroup size=\"xs\" isAttached colorScheme=\"teal\" variant=\"outline\">\n            {selections.map((selection, i) => {\n                const isSelected =\n                    (typeof value === 'object' && value.includes(selection.value)) || value === selection.value;\n\n                // TODO: fix overlapped/missing border\n                const mr = i !== selections.length - 1 && !isSelected ? '-px' : undefined;\n\n                return (\n                    <Button\n                        key={selection.value.toString()}\n                        role=\"checkbox\"\n                        aria-checked={isSelected}\n                        variant={isSelected ? 'solid' : 'outline'}\n                        mr={mr}\n                        isDisabled={selection.disabled}\n                        onClick={() => handleToggle(selection.value)}\n                    >\n                        {selection.label}\n                    </Button>\n                );\n            })}\n        </ButtonGroup>\n    );\n}\n\ninterface RmgBooleanButtonGroupProps {\n    defaultValue: boolean;\n    onChange?: (value: boolean) => void;\n}\n\nexport const RmgBooleanButtonGroup = (props: RmgBooleanButtonGroupProps) => {\n    const selections = [\n        {\n            label: 'Yes',\n            value: true,\n        },\n        {\n            label: 'No',\n            value: false,\n        },\n    ];\n\n    return <RmgButtonGroup selections={selections} {...props} />;\n};\n","import React, { Fragment } from 'react';\nimport { Button, Flex, Heading, VStack } from '@chakra-ui/react';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport InterchangeCard from './interchange-card';\nimport {\n    addInterchange,\n    removeInterchange,\n    updateInterchange,\n    updateStationOsiName,\n    updateStationPaidArea,\n    updateStationTickDirection,\n} from '../../../redux/param/action';\nimport { InterchangeInfo, MonoColour, RmgStyle, ShortDirection } from '../../../constants/constants';\nimport { MdAdd } from 'react-icons/md';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\nimport RmgButtonGroup from '../../common/rmg-button-group';\n\nexport default function InterchangeSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedStation = useRootSelector(state => state.app.selectedStation);\n    const { theme, style } = useRootSelector(state => state.param);\n    const { transfer } = useRootSelector(state => state.param.stn_list[selectedStation]);\n\n    const getOSINameFields = (setIndex: number): RmgFieldsField[] => [\n        {\n            type: 'input',\n            label: t('Station Chinese name'),\n            value: transfer.osi_names[setIndex]?.[0],\n            hidden: ![RmgStyle.MTR].includes(style),\n            onChange: value =>\n                dispatch(updateStationOsiName(selectedStation, setIndex, [value, transfer.osi_names[setIndex]?.[1]])),\n        },\n        {\n            type: 'input',\n            label: t('Station English name'),\n            value: transfer.osi_names[setIndex]?.[1],\n            hidden: ![RmgStyle.MTR].includes(style),\n            onChange: value =>\n                dispatch(updateStationOsiName(selectedStation, setIndex, [transfer.osi_names[setIndex]?.[0], value])),\n        },\n        {\n            type: 'switch',\n            label: t('Paid area'),\n            isChecked: transfer.paid_area,\n            onChange: checked => dispatch(updateStationPaidArea(selectedStation, checked)),\n            hidden: ![RmgStyle.MTR].includes(style) || setIndex !== 0,\n            oneLine: true,\n        },\n    ];\n\n    const handleAdd = (i: number) => (info: InterchangeInfo) => {\n        dispatch(addInterchange(selectedStation, i, info));\n    };\n\n    const handleDelete = (i: number) => (j: number) => {\n        dispatch(removeInterchange(selectedStation, i, j));\n    };\n\n    const handleUpdate = (i: number) => (j: number, info: InterchangeInfo) => {\n        dispatch(updateInterchange(selectedStation, i, j, info));\n    };\n\n    const handleAddInterchangeGroup = () => {\n        dispatch(\n            addInterchange(selectedStation, transfer.info.length, [theme[0], '', '#AAAAAA', MonoColour.white, '', ''])\n        );\n    };\n\n    return (\n        <VStack align=\"flex-start\" p={1}>\n            <Flex w=\"100%\">\n                <Heading as=\"h5\" size=\"sm\" mr=\"auto\">\n                    {t('StationSidePanel.interchange.title')}\n                </Heading>\n\n                {style === RmgStyle.MTR && (\n                    <RmgButtonGroup\n                        selections={[\n                            { label: t('Text on the left'), value: ShortDirection.left },\n                            { label: t('Text on the right'), value: ShortDirection.right },\n                        ]}\n                        defaultValue={transfer.tick_direc}\n                        onChange={value => dispatch(updateStationTickDirection(selectedStation, value))}\n                    />\n                )}\n            </Flex>\n\n            {transfer.info.map((infoList, i) => (\n                <Fragment key={i}>\n                    <Heading as=\"h6\" size=\"xs\">\n                        {i === 0\n                            ? t('StationSidePanel.interchange.within')\n                            : i === 1\n                            ? t('StationSidePanel.interchange.outStation')\n                            : t('StationSidePanel.interchange.outSystem')}\n                    </Heading>\n\n                    {i !== 0 && <RmgFields fields={getOSINameFields(i - 1)} />}\n\n                    <InterchangeCard\n                        interchangeList={infoList}\n                        onAdd={handleAdd(i)}\n                        onDelete={handleDelete(i)}\n                        onUpdate={handleUpdate(i)}\n                    />\n                </Fragment>\n            ))}\n\n            {transfer.info.length < 3 && (\n                <Button\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    alignSelf=\"flex-end\"\n                    leftIcon={<MdAdd />}\n                    onClick={handleAddInterchangeGroup}\n                >\n                    {t('StationSidePanel.interchange.addGroup')}\n                </Button>\n            )}\n        </VStack>\n    );\n}\n","import { Box, Heading } from '@chakra-ui/react';\nimport React from 'react';\nimport RmgButtonGroup from '../../common/rmg-button-group';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { Facilities, RmgStyle, Services } from '../../../constants/constants';\nimport { updateStationFacility, updateStationLoopPivot, updateStationServices } from '../../../redux/param/action';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function MoreSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedStation = useRootSelector(state => state.app.selectedStation);\n    const style = useRootSelector(state => state.param.style);\n    const { services, facility, loop_pivot } = useRootSelector(state => state.param.stn_list[selectedStation]);\n\n    const serviceSelections = Object.values(Services).map(service => {\n        return {\n            label: t('StationSidePanel.more.' + service),\n            value: service,\n            disabled: service === Services.local && style !== RmgStyle.SHMetro,\n        };\n    });\n\n    const mtrFacilityOptions = {\n        [Facilities.none]: t('StationSidePanel.more.none'),\n        [Facilities.airport]: t('StationSidePanel.more.airport'),\n        [Facilities.hsr]: t('StationSidePanel.more.hsr'),\n        [Facilities.disney]: t('StationSidePanel.more.disney'),\n    };\n\n    const shmetroFacilityOptions = {\n        [Facilities.none]: t('StationSidePanel.more.none'),\n        [Facilities.airport]: t('StationSidePanel.more.airport'),\n        [Facilities.railway]: t('StationSidePanel.more.railway'),\n        [Facilities.disney]: t('StationSidePanel.more.disney'),\n    };\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('StationSidePanel.more.service'),\n            component: (\n                <RmgButtonGroup\n                    selections={serviceSelections}\n                    defaultValue={services}\n                    onChange={services => dispatch(updateStationServices(selectedStation, services))}\n                    multiSelect\n                />\n            ),\n            hidden: ![RmgStyle.GZMTR, RmgStyle.SHMetro].includes(style),\n        },\n        {\n            type: 'select',\n            label: t('StationSidePanel.more.facility'),\n            value: facility,\n            options: style === RmgStyle.MTR ? mtrFacilityOptions : shmetroFacilityOptions,\n            onChange: value => dispatch(updateStationFacility(selectedStation, value as Facilities)),\n            hidden: ![RmgStyle.MTR, RmgStyle.SHMetro].includes(style),\n        },\n        {\n            type: 'switch',\n            label: t('StationSidePanel.more.pivot'),\n            isChecked: loop_pivot,\n            onChange: checked => dispatch(updateStationLoopPivot(selectedStation, checked)),\n            hidden: ![RmgStyle.SHMetro].includes(style),\n            minW: 'full',\n            oneLine: true,\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StationSidePanel.more.title')}\n            </Heading>\n\n            <RmgFields fields={fields} />\n        </Box>\n    );\n}\n","import { Box, Heading, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { BranchStyle, Direction } from '../../../constants/constants';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport {\n    flipStationBranchPosition,\n    updateStationBranchFirstStation,\n    updateStationBranchType,\n} from '../../../redux/param/action';\nimport { RmgCard, RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function BranchSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedStation = useRootSelector(state => state.app.selectedStation);\n    const stationList = useRootSelector(state => state.param.stn_list);\n    const { parents, children, branch } = stationList[selectedStation];\n\n    const branchOptions = {\n        [BranchStyle.through]: t('StationSidePanel.branch.through'),\n        [BranchStyle.nonThrough]: t('StationSidePanel.branch.nonThrough'),\n    };\n\n    const getFirstStationOptions = (direction: Direction) => {\n        return (direction === Direction.left ? parents : children).reduce<Record<string, string>>(\n            (acc, cur) => ({ ...acc, [cur]: stationList[cur].name.join(' ') }),\n            {}\n        );\n    };\n\n    const positionOptions = {\n        upper: t('StationSidePanel.branch.upper'),\n        lower: t('StationSidePanel.branch.lower'),\n    };\n\n    const getFields = (direction: Direction): RmgFieldsField[] => {\n        if (branch[direction].length) {\n            return [\n                {\n                    type: 'select',\n                    label: t('StationSidePanel.branch.type'),\n                    options: branchOptions,\n                    value: branch[direction][0],\n                    onChange: value =>\n                        dispatch(updateStationBranchType(selectedStation, direction, value as BranchStyle)),\n                },\n                {\n                    type: 'select',\n                    label: t('StationSidePanel.branch.firstStation'),\n                    options: getFirstStationOptions(direction),\n                    value: branch[direction][1],\n                    onChange: value =>\n                        dispatch(updateStationBranchFirstStation(selectedStation, direction, value as string)),\n                },\n                {\n                    type: 'select',\n                    label: t('StationSidePanel.branch.position'),\n                    options: positionOptions,\n                    value:\n                        (direction === Direction.left ? parents : children).indexOf(branch[direction][1]!) === 0\n                            ? 'upper'\n                            : 'lower',\n                    onChange: () => dispatch(flipStationBranchPosition(selectedStation, direction)),\n                },\n            ];\n        } else {\n            return [];\n        }\n    };\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('Branches')}\n            </Heading>\n\n            <Heading as=\"h6\" size=\"xs\">\n                {t('Branch on the left')}\n            </Heading>\n\n            <RmgCard direction=\"column\">\n                {parents.length === 2 ? (\n                    <RmgFields fields={getFields(Direction.left)} />\n                ) : (\n                    <Text as=\"i\" flex={1} align=\"center\" fontSize=\"md\" colorScheme=\"gray\">\n                        {t('No branches found')}\n                    </Text>\n                )}\n            </RmgCard>\n\n            <Heading as=\"h6\" size=\"xs\">\n                {t('Branch on the right')}\n            </Heading>\n\n            <RmgCard direction=\"column\">\n                {children.length === 2 ? (\n                    <RmgFields fields={getFields(Direction.right)} />\n                ) : (\n                    <Text as=\"i\" flex={1} align=\"center\" fontSize=\"md\" colorScheme=\"gray\">\n                        {t('No branches found')}\n                    </Text>\n                )}\n            </RmgCard>\n        </Box>\n    );\n}\n","import { Divider } from '@chakra-ui/react';\nimport React from 'react';\nimport InfoSection from './info-section';\nimport InterchangeSection from './interchange-section';\nimport MoreSection from './more-section';\nimport BranchSection from './branch-section';\nimport { RmgSidePanelBody } from '@railmapgen/rmg-components';\n\nexport default function StationSidePanel() {\n    return (\n        <RmgSidePanelBody>\n            <InfoSection />\n\n            <Divider />\n\n            <InterchangeSection />\n\n            <Divider />\n\n            <BranchSection />\n\n            <Divider />\n\n            <MoreSection />\n        </RmgSidePanelBody>\n    );\n}\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { useRootSelector } from '../../../redux';\nimport { canvasConfig, RmgStyle } from '../../../constants/constants';\nimport {\n    setBranchSpacing,\n    setDirectionIndicatorX,\n    setDirectionIndicatorY,\n    setPaddingPercentage,\n    setSvgHeight,\n    setSvgWidth,\n    setYPercentage,\n} from '../../../redux/param/action';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\n\nexport default function LayoutSection() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const {\n        style: rmgStyle,\n        svgWidth,\n        svg_height,\n        y_pc,\n        branch_spacing,\n        padding,\n        direction_gz_x,\n        direction_gz_y,\n        loop,\n    } = useRootSelector(state => state.param);\n\n    const fields: RmgFieldsField[] = [\n        ...canvasConfig[rmgStyle].map<RmgFieldsField>(canvas => ({\n            type: 'input',\n            label: t(`StyleSidePanel.layout.${canvas}Width`),\n            value: svgWidth[canvas].toString(),\n            onChange: val => dispatch(setSvgWidth(Number(val), canvas)),\n        })),\n        {\n            type: 'input',\n            label: t('StyleSidePanel.layout.canvasHeight'),\n            value: svg_height.toString(),\n            onChange: val => dispatch(setSvgHeight(Number(val))),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.verticalPosition'),\n            value: y_pc,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setYPercentage(val)),\n            hidden: ![RmgStyle.MTR, RmgStyle.GZMTR].includes(rmgStyle),\n        },\n        {\n            type: 'slider',\n            label: !loop ? t('StyleSidePanel.layout.branchSpacing') : t('StyleSidePanel.layout.branchSpacingLoop'),\n            value: branch_spacing,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setBranchSpacing(val)),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.padding'),\n            value: padding,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setPaddingPercentage(val)),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.directionGzX'),\n            value: direction_gz_x,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setDirectionIndicatorX(val)),\n            hidden: ![RmgStyle.GZMTR].includes(rmgStyle),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.directionGzY'),\n            value: direction_gz_y,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setDirectionIndicatorY(val)),\n            hidden: ![RmgStyle.GZMTR].includes(rmgStyle),\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.layout.title')}\n            </Heading>\n\n            <RmgFields fields={fields} minW={130} />\n        </Box>\n    );\n}\n","import React, { useState } from 'react';\nimport { Box, Button, Heading, HStack } from '@chakra-ui/react';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport ThemeButton from '../theme-button';\nimport ColourModal from '../../modal/colour-modal/colour-modal';\nimport {\n    customiseDestinationName,\n    flipStationNames,\n    setDirection,\n    setLineName,\n    setLineNum,\n    setPanelType,\n    setPlatform,\n    setPsdNum,\n    setTheme,\n    staggerStationNames,\n    toggleLineNameBeforeDestination,\n} from '../../../redux/param/action';\nimport RmgButtonGroup from '../../common/rmg-button-group';\nimport { PanelTypeGZMTR, PanelTypeShmetro, RmgStyle, ShortDirection } from '../../../constants/constants';\nimport { MdSwapVert } from 'react-icons/md';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function DesignSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const {\n        style,\n        theme,\n        line_name: lineName,\n        line_num: lineNum,\n        direction,\n        platform_num: platformNum,\n        psd_num: psdNum,\n        namePosMTR,\n        customiseMTRDest,\n        info_panel_type,\n    } = useRootSelector(state => state.param);\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const directionSelections = [\n        {\n            label: t('StyleSidePanel.design.left'),\n            value: ShortDirection.left,\n        },\n        {\n            label: t('StyleSidePanel.design.right'),\n            value: ShortDirection.right,\n        },\n    ];\n\n    const panelTypeGZMTROptions = Object.values(PanelTypeGZMTR).reduce<Record<string, string>>(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: t('StyleSidePanel.design.' + cur),\n        }),\n        {}\n    );\n\n    const panelTypeSHMetroOptions = Object.values(PanelTypeShmetro).reduce<Record<string, string>>(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: t('StyleSidePanel.design.' + cur),\n        }),\n        {}\n    );\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('Colour'),\n            component: <ThemeButton theme={theme} onClick={() => setIsModalOpen(true)} />,\n            minW: '40px',\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.zhLineName'),\n            value: lineName[0],\n            onChange: value => dispatch(setLineName([value, lineName[1]])),\n            minW: 130,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.enLineName'),\n            value: lineName[1],\n            onChange: value => dispatch(setLineName([lineName[0], value])),\n            minW: 130,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.lineNum'),\n            value: lineNum,\n            onChange: value => dispatch(setLineNum(value)),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.platformNum'),\n            value: platformNum || '',\n            onChange: value => dispatch(setPlatform(value)),\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.psdNum'),\n            value: psdNum,\n            onChange: value => dispatch(setPsdNum(value)),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'select',\n            label: t('StyleSidePanel.design.panelType'),\n            value: info_panel_type,\n            options: style === RmgStyle.GZMTR ? panelTypeGZMTROptions : panelTypeSHMetroOptions,\n            onChange: value => dispatch(setPanelType(value as PanelTypeGZMTR | PanelTypeShmetro)),\n            hidden: ![RmgStyle.GZMTR, RmgStyle.SHMetro].includes(style),\n        },\n        {\n            type: 'custom',\n            label: t('StyleSidePanel.design.direction'),\n            component: (\n                <RmgButtonGroup\n                    selections={directionSelections}\n                    defaultValue={direction}\n                    onChange={nextDirection => dispatch(setDirection(nextDirection))}\n                />\n            ),\n            minW: 'full',\n            oneLine: true,\n        },\n    ];\n\n    const staggerNameSelections = [\n        {\n            label: t('StyleSidePanel.design.alternatively'),\n            value: true,\n        },\n        {\n            label: t('StyleSidePanel.design.onOneSide'),\n            value: false,\n        },\n    ];\n\n    const mtrSpecifiedFields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('StyleSidePanel.design.nameDisplay'),\n            component: (\n                <HStack>\n                    <RmgButtonGroup\n                        selections={staggerNameSelections}\n                        defaultValue={namePosMTR.isStagger}\n                        onChange={value => dispatch(staggerStationNames(value))}\n                    />\n                    <Button\n                        size=\"xs\"\n                        variant=\"ghost\"\n                        leftIcon={<MdSwapVert />}\n                        onClick={() => dispatch(flipStationNames())}\n                    >\n                        {t('StyleSidePanel.design.flip')}\n                    </Button>\n                </HStack>\n            ),\n            minW: 'full',\n            oneLine: true,\n            hidden: ![RmgStyle.MTR].includes(style),\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.design.legacyDestination'),\n            isChecked: customiseMTRDest.isLegacy,\n            onChange: checked => dispatch(toggleLineNameBeforeDestination(checked)),\n            hidden: ![RmgStyle.MTR].includes(style),\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.design.overrideTerminal'),\n            isChecked: customiseMTRDest.terminal !== false,\n            onChange: checked => dispatch(customiseDestinationName(checked ? ['', ''] : false)),\n            hidden: ![RmgStyle.MTR].includes(style),\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.terminalZhName'),\n            value: customiseMTRDest.terminal ? customiseMTRDest.terminal[0] : '',\n            placeholder: '機場及博覽館',\n            onChange: value =>\n                dispatch(\n                    customiseDestinationName([value, customiseMTRDest.terminal ? customiseMTRDest.terminal[1] : ''])\n                ),\n            hidden: ![RmgStyle.MTR].includes(style) || customiseMTRDest.terminal === false,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.terminalEnName'),\n            value: customiseMTRDest.terminal ? customiseMTRDest.terminal[1] : '',\n            placeholder: 'Airport and AsiaWorld-Expo',\n            onChange: value =>\n                dispatch(\n                    customiseDestinationName([customiseMTRDest.terminal ? customiseMTRDest.terminal[0] : '', value])\n                ),\n            hidden: ![RmgStyle.MTR].includes(style) || customiseMTRDest.terminal === false,\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.design.title')}\n            </Heading>\n\n            <RmgFields fields={[...fields, ...mtrSpecifiedFields]} minW={130} />\n\n            <ColourModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                defaultTheme={theme}\n                onUpdate={nextTheme => dispatch(setTheme(nextTheme))}\n            />\n        </Box>\n    );\n}\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { setLoop, setLoopBank, setLoopBottomFactor, setLoopLeftAndRightFactor } from '../../../redux/param/action';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function LoopSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const { branches } = useRootSelector(state => state.helper);\n    const { loop, loop_info } = useRootSelector(state => state.param);\n    const { bank, left_and_right_factor, bottom_factor } = loop_info;\n\n    // loop line with 2 branches has no bottom_factor and a specialized left_and_right_factor_max\n    const arc: 'major' | 'minor' = 'minor';\n    const branch_stn_ids = branches\n        .flat()\n        .filter(\n            (\n                o => v =>\n                    (o[v] = (o[v] || 0) + 1) === 2\n            )({} as { [stn_id: string]: number })\n        ) // count each occurrence\n        .filter(stn_id => !['linestart', 'lineend'].includes(stn_id)); // find branch stations\n    const _ = Math.abs(branches[0].indexOf(branch_stn_ids[0]) - branches[0].indexOf(branch_stn_ids[1]));\n    const left_and_right_factor_max =\n        branches.length >= 2\n            ? // top length is fixed, change left_and_right_factor only\n              (arc === 'minor' ? Math.min : Math.max)(branches[0].length - 2 - _, _)\n            : Math.floor((branches[0].length - 2 - bottom_factor * 2) / 2);\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.loop.isLoop'),\n            isChecked: loop,\n            onChange: checked => dispatch(setLoop(checked)),\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.loop.isBank'),\n            isChecked: bank,\n            onChange: checked => dispatch(setLoopBank(checked)),\n            minW: 'full',\n            oneLine: true,\n            hidden: !loop,\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.loop.leftRightFactor'),\n            value: left_and_right_factor,\n            min: 0,\n            max: left_and_right_factor_max,\n            onChange: val => dispatch(setLoopLeftAndRightFactor(Math.floor(val))),\n            hidden: !loop,\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.loop.bottomFactor'),\n            value: bottom_factor,\n            min: 0,\n            max: Math.floor((branches[0].length - 2 - left_and_right_factor * 2) / 2),\n            onChange: val => dispatch(setLoopBottomFactor(Math.floor(val))),\n            hidden: !loop || (loop && branches.length > 2),\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.loop.title')}\n            </Heading>\n\n            <RmgFields fields={fields} />\n        </Box>\n    );\n}\n","import React from 'react';\nimport { HStack, IconButton } from '@chakra-ui/react';\nimport { Note } from '../../../constants/constants';\nimport { MdDelete } from 'react-icons/md';\nimport { RmgCard, RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\ninterface GZMTRNoteCardProps {\n    note: Note;\n    onUpdate?: (value: Note) => void;\n    onDelete?: () => void;\n}\n\nexport default function GZMTRNoteCard(props: GZMTRNoteCardProps) {\n    const { note, onUpdate, onDelete } = props;\n    const { t } = useTranslation();\n\n    const fields1: RmgFieldsField[] = [\n        {\n            type: 'textarea',\n            label: t('StyleSidePanel.note.zhNote'),\n            value: note[0],\n            onChange: value => onUpdate?.([value, note[1], note[2], note[3], note[4]]),\n        },\n        {\n            type: 'textarea',\n            label: t('StyleSidePanel.note.enNote'),\n            value: note[1],\n            onChange: value => onUpdate?.([note[0], value, note[2], note[3], note[4]]),\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.note.border'),\n            isChecked: note[4],\n            onChange: value => onUpdate?.([note[0], note[1], note[2], note[3], value]),\n            oneLine: true,\n        },\n    ];\n\n    const fields2: RmgFieldsField[] = [\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.note.positionX'),\n            value: note[2],\n            min: 0,\n            max: 100,\n            onChange: value => onUpdate?.([note[0], note[1], value, note[3], note[4]]),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.note.positionY'),\n            value: note[3],\n            min: 0,\n            max: 100,\n            onChange: value => onUpdate?.([note[0], note[1], note[2], value, note[4]]),\n        },\n    ];\n\n    return (\n        <RmgCard direction=\"column\">\n            <RmgFields fields={fields1} minW=\"full\" />\n            <HStack spacing={0.5}>\n                <RmgFields fields={fields2} />\n\n                <IconButton\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    aria-label={t('StyleSidePanel.note.remove')}\n                    onClick={() => onDelete?.()}\n                    icon={<MdDelete />}\n                />\n            </HStack>\n        </RmgCard>\n    );\n}\n","import React from 'react';\nimport { Box, Button, Heading, VStack } from '@chakra-ui/react';\nimport GZMTRNoteCard from './gzmtr-note-card';\nimport { addNote, removeNote, updateNote } from '../../../redux/param/action';\nimport { MdAdd } from 'react-icons/md';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { useTranslation } from 'react-i18next';\n\nexport default function GZMTRNoteSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const notesGZMTR = useRootSelector(state => state.param.notesGZMTR);\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.note.title')}\n            </Heading>\n\n            <VStack spacing={0.5}>\n                {notesGZMTR.map((note, i) => (\n                    <GZMTRNoteCard\n                        key={i}\n                        note={note}\n                        onUpdate={value => dispatch(updateNote(i, value))}\n                        onDelete={() => dispatch(removeNote(i))}\n                    />\n                ))}\n\n                <Button\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    leftIcon={<MdAdd />}\n                    alignSelf=\"flex-end\"\n                    onClick={() => dispatch(addNote())}\n                >\n                    {t('StyleSidePanel.note.add')}\n                </Button>\n            </VStack>\n        </Box>\n    );\n}\n","import { Divider } from '@chakra-ui/react';\nimport React from 'react';\nimport { useRootSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport LayoutSection from './layout-section';\nimport DesignSection from './design-section';\nimport LoopSection from './loop-section';\nimport { RmgSidePanelBody } from '@railmapgen/rmg-components';\nimport GZMTRNoteSection from './gzmtr-note-section';\n\nexport default function StyleSidePanel() {\n    const { style } = useRootSelector(state => state.param);\n\n    return (\n        <RmgSidePanelBody>\n            <LayoutSection />\n\n            <Divider />\n\n            <DesignSection />\n\n            {style === RmgStyle.GZMTR && (\n                <>\n                    <Divider />\n\n                    <GZMTRNoteSection />\n                </>\n            )}\n\n            {style === RmgStyle.SHMetro && (\n                <>\n                    <Divider />\n\n                    <LoopSection />\n                </>\n            )}\n        </RmgSidePanelBody>\n    );\n}\n","import { StationDict } from './constants/constants';\n\n/**\n * Vertical position (in shares) of station icon if using MTR style (for consistency of method `RMGLine.newStnPossibleLoc()`).\n */\nexport const getYShareMTR = (stnId: string, stnList: StationDict): -1 | 0 | 1 => {\n    if (\n        ['linestart', 'lineend'].includes(stnId) ||\n        stnList[stnId].parents.length > 1 ||\n        stnList[stnId].children.length > 1\n    ) {\n        return 0;\n    }\n    var stnPred = stnList[stnId].parents[0];\n    if (stnPred) {\n        // parent exist\n        if (stnList[stnPred].children.length === 1) {\n            // no sibling, then y same as parent\n            return getYShareMTR(stnPred, stnList);\n        } else {\n            // sibling exists, then y depends on its idx of being children\n            return stnList[stnPred].children.indexOf(stnId) === 0 ? 1 : -1;\n        }\n    } else {\n        // no parent, must be linestart\n        return 0;\n    }\n};\n","import React, { RefObject } from 'react';\nimport {\n    AlertDialog,\n    AlertDialogBody,\n    AlertDialogContent,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogOverlay,\n    Button,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\n\ninterface RemoveConfirmModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    cancelRef: RefObject<HTMLButtonElement>;\n    onConfirm: () => void;\n}\n\nexport default function RemoveConfirmModal(props: RemoveConfirmModalProps) {\n    const { isOpen, onClose, cancelRef, onConfirm } = props;\n    const { t } = useTranslation();\n\n    return (\n        <AlertDialog isOpen={isOpen} leastDestructiveRef={cancelRef} onClose={onClose}>\n            <AlertDialogOverlay>\n                <AlertDialogContent>\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                        {t('RemoveConfirmModal.title')}\n                    </AlertDialogHeader>\n\n                    <AlertDialogBody>Are you sure to remove station? You cannot undo this action.</AlertDialogBody>\n\n                    <AlertDialogFooter>\n                        <Button ref={cancelRef} onClick={onClose}>\n                            {t('RemoveConfirmModal.cancel')}\n                        </Button>\n                        <Button colorScheme=\"teal\" onClick={onConfirm} ml={3}>\n                            {t('RemoveConfirmModal.confirm')}\n                        </Button>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialogOverlay>\n        </AlertDialog>\n    );\n}\n","import { Button, HStack } from '@chakra-ui/react';\nimport { RmgSidePanelFooter } from '@railmapgen/rmg-components';\nimport React, { useRef, useState } from 'react';\nimport { removeInvalidColineOnRemoveStation } from '../../../redux/param/coline-action';\nimport { checkStationCouldBeRemoved, removeStation } from '../../../redux/param/remove-station-action';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { setGlobalAlert, setSelectedStation, setSidePanelMode } from '../../../redux/app/app-slice';\nimport RemoveConfirmModal from '../../modal/remove-confirm-modal';\nimport { setCurrentStation } from '../../../redux/param/action';\nimport { SidePanelMode } from '../../../constants/constants';\nimport { useTranslation } from 'react-i18next';\n\nexport default function StationSidePanelFooter() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedStation = useRootSelector(state => state.app.selectedStation);\n\n    const [isRemoveModalOpen, setIsRemoveModalOpen] = useState(false);\n\n    const cancelRef = useRef<HTMLButtonElement>(null);\n\n    const handleDelete = () => {\n        if (dispatch(checkStationCouldBeRemoved(selectedStation))) {\n            // close side panel\n            dispatch(setSidePanelMode(SidePanelMode.CLOSE));\n\n            // reset selected station\n            dispatch(setSelectedStation('linestart'));\n\n            dispatch(removeInvalidColineOnRemoveStation(selectedStation));\n            dispatch(removeStation(selectedStation));\n            setIsRemoveModalOpen(false);\n        } else {\n            dispatch(setGlobalAlert({ status: 'error', message: t('StationSidePanel.footer.errorOnRemove') }));\n        }\n    };\n\n    return (\n        <RmgSidePanelFooter>\n            <HStack>\n                <Button size=\"sm\" variant=\"outline\" onClick={() => dispatch(setCurrentStation(selectedStation))}>\n                    {t('StationSidePanel.footer.current')}\n                </Button>\n                <Button size=\"sm\" variant=\"outline\" onClick={() => setIsRemoveModalOpen(true)}>\n                    {t('StationSidePanel.footer.remove')}\n                </Button>\n            </HStack>\n\n            <RemoveConfirmModal\n                isOpen={isRemoveModalOpen}\n                cancelRef={cancelRef}\n                onClose={() => setIsRemoveModalOpen(false)}\n                onConfirm={handleDelete}\n            />\n        </RmgSidePanelFooter>\n    );\n}\n","import { RootDispatch, RootState } from '../index';\nimport { getYShareMTR } from '../../methods';\nimport { StationDict } from '../../constants/constants';\nimport { setStationsBulk } from './action';\n\n/**\n * Return false when current algo can not handle this kind of station removal.\n * MUST BE CALLED AND CHECKED BEFORE removeStation!!!\n */\nexport const checkStationCouldBeRemoved = (stationId: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState): boolean => {\n        const stationList = getState().param.stn_list;\n\n        const { parents, children } = stationList[stationId];\n\n        if (Object.keys(stationList).length === 4) {\n            console.log('removeStation():: failed as only 2 stations remaining');\n            return false;\n        } else if (parents.length === 2 && children.length === 2) {\n            // Todo: rewrite, join two branches rather than reject?\n            console.log('removeStation():: failed as branches on both sides cannot be combined');\n            return false;\n        }\n\n        // reject if station is the last one on main branch\n        const isNotLastMainBranchStn = Object.keys(stationList).some(\n            id => ![stationId, 'linestart', 'lineend'].includes(id) && getYShareMTR(id, stationList) === 0\n        );\n        if (!isNotLastMainBranchStn) {\n            console.log('removeStation():: failed as selected station is the only station without siblings');\n            return false;\n        }\n\n        return true;\n    };\n};\n\nexport const removeStation = (stationId: string) => {\n    // checkStationCouldBeRemoved BEFORE removeStation!!!\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const stationList = getState().param.stn_list;\n        const { parents, children } = stationList[stationId];\n\n        let newStnList = JSON.parse(JSON.stringify(stationList)) as StationDict;\n\n        if (parents.length === 2 || children.length === 2) {\n            /**\n             * stn1 - stn2 - stn3\n             *         ^   \\\n             *               stn4\n             */\n            parents.forEach(parId => {\n                newStnList[parId].children = children;\n            });\n            children.forEach(childId => {\n                newStnList[childId].parents = parents;\n            });\n            if (parents.length === 1) {\n                newStnList[parents[0]].branch.right = newStnList[stationId].branch.right;\n            }\n            if (children.length === 1) {\n                newStnList[children[0]].branch.left = newStnList[stationId].branch.left;\n            }\n        } else if (stationList[parents[0]].children.length === 2 && stationList[children[0]].parents.length === 2) {\n            /**\n             * stn1 -     stn2    - stn3\n             *      \\      ^      /\n             *        stn4 - stn5\n             */\n            newStnList = {\n                ...stationList,\n                [parents[0]]: {\n                    ...stationList[parents[0]],\n                    children: stationList[parents[0]].children.filter(id => id !== stationId),\n                    branch: {\n                        ...stationList[parents[0]].branch,\n                        right: [],\n                    },\n                },\n                [children[0]]: {\n                    ...stationList[children[0]],\n                    parents: stationList[children[0]].parents.filter(id => id !== stationId),\n                    branch: {\n                        ...stationList[children[0]].branch,\n                        left: [],\n                    },\n                },\n            };\n        } else {\n            /**\n             * stn1 - stn2\n             *      \\\n             *        stn3 - stn4\n             *         ^\n             */\n\n            // parents have length 1\n            parents.forEach(parId => {\n                var idx = newStnList[parId].children.indexOf(stationId);\n                if (children.length) {\n                    newStnList[parId].children[idx] = children[0];\n                } else {\n                    // Right dest\n                    newStnList[parId].children.splice(idx, 1);\n                }\n\n                if (newStnList[parId].branch.right[1] === stationId) {\n                    newStnList[parId].branch.right[1] = children[0];\n                }\n            });\n\n            // children have length 1\n            children.forEach(childId => {\n                var idx = newStnList[childId].parents.indexOf(stationId);\n                if (parents.length) {\n                    newStnList[childId].parents[idx] = parents[0];\n                } else {\n                    // Left dest\n                    newStnList[childId].parents.splice(idx, 1);\n                }\n\n                if (newStnList[childId].branch.left[1] === stationId) {\n                    newStnList[childId].branch.left[1] = parents[0];\n                }\n            });\n        }\n\n        delete newStnList[stationId];\n        dispatch(setStationsBulk(newStnList));\n    };\n};\n","import { RmgCard, RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport React, { useState } from 'react';\nimport { ColineInfo, InterchangeInfo, Theme } from '../../../constants/constants';\nimport ThemeButton from '../theme-button';\nimport ColourModal from '../../modal/colour-modal/colour-modal';\nimport { HStack, IconButton } from '@chakra-ui/react';\nimport { MdDelete } from 'react-icons/md';\nimport { useTranslation } from 'react-i18next';\n\ninterface ColineCardProps {\n    colineInfo: ColineInfo;\n    routeOptions: Record<string, string>;\n    onUpdateRoute?: (route: string) => void;\n    onUpdateColourInfo?: (colourInfo: InterchangeInfo) => void;\n    onDelete?: (colourIndex: number) => void;\n}\n\nexport default function ColineCard(props: ColineCardProps) {\n    const { colineInfo, routeOptions, onUpdateRoute, onUpdateColourInfo, onDelete } = props;\n    const { t } = useTranslation();\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const fields1: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: 'Route',\n            value: [colineInfo.from, colineInfo.to].join(','),\n            options: routeOptions,\n            onChange: value => onUpdateRoute?.(value as string),\n        },\n    ];\n\n    const fields2: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('Colour'),\n            component: (\n                <ThemeButton\n                    theme={[\n                        colineInfo.colors[0][0],\n                        colineInfo.colors[0][1],\n                        colineInfo.colors[0][2],\n                        colineInfo.colors[0][3],\n                    ]}\n                    onClick={() => setIsModalOpen(true)}\n                />\n            ),\n        },\n        {\n            type: 'input',\n            label: t('Chinese name'),\n            value: colineInfo.colors[0][4],\n            minW: 120,\n            onChange: value =>\n                onUpdateColourInfo?.([\n                    colineInfo.colors[0][0],\n                    colineInfo.colors[0][1],\n                    colineInfo.colors[0][2],\n                    colineInfo.colors[0][3],\n                    value,\n                    colineInfo.colors[0][5],\n                ]),\n        },\n        {\n            type: 'input',\n            label: t('English name'),\n            value: colineInfo.colors[0][5],\n            minW: 120,\n            onChange: value =>\n                onUpdateColourInfo?.([\n                    colineInfo.colors[0][0],\n                    colineInfo.colors[0][1],\n                    colineInfo.colors[0][2],\n                    colineInfo.colors[0][3],\n                    colineInfo.colors[0][4],\n                    value,\n                ]),\n        },\n    ];\n\n    return (\n        <RmgCard direction=\"column\">\n            <RmgFields fields={fields1} minW=\"full\" />\n            <HStack spacing={0.5}>\n                <RmgFields fields={fields2} />\n\n                <IconButton\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    aria-label=\"Delete colour for route\"\n                    onClick={() => onDelete?.(0)}\n                    icon={<MdDelete />}\n                />\n            </HStack>\n\n            <ColourModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                defaultTheme={colineInfo.colors[0].slice(0, 4) as Theme}\n                onUpdate={theme => onUpdateColourInfo?.([...theme, colineInfo.colors[0][4], colineInfo.colors[0][5]])}\n            />\n        </RmgCard>\n    );\n}\n","import React from 'react';\nimport { Button, Heading, VStack } from '@chakra-ui/react';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport {\n    addColine,\n    findAllColinesInBranch,\n    getPossibleCombinations,\n    removeColineColor,\n    updateColine,\n    updateColineColor,\n} from '../../../redux/param/coline-action';\nimport ColineCard from './coline-card';\nimport { MdAdd } from 'react-icons/md';\nimport { MonoColour } from '../../../constants/constants';\nimport { setGlobalAlert } from '../../../redux/app/app-slice';\nimport { useTranslation } from 'react-i18next';\n\nexport default function ColineSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedBranch = useRootSelector(state => state.app.selectedBranch);\n    const { theme, stn_list: stationList } = useRootSelector(state => state.param);\n\n    const colineInfoList = dispatch(findAllColinesInBranch(selectedBranch));\n    const possibleCombinations = dispatch(getPossibleCombinations(selectedBranch));\n\n    const getStationPairDisplayName = (pair: [string, string]) => {\n        return pair.map(id => stationList[id].name.join(' - ')).join(' ~ ');\n    };\n\n    const routeOptions = possibleCombinations.reduce<Record<string, string>>(\n        (acc, cur) => ({\n            ...acc,\n            [cur.join(',')]: getStationPairDisplayName(cur),\n        }),\n        {}\n    );\n\n    const handleAddTrackSharing = () => {\n        console.log(\n            `ColineSection.handleAddTrackSharing():: Adding track sharing to branch ${selectedBranch} with default combination`,\n            possibleCombinations[0]\n        );\n        dispatch(\n            addColine(possibleCombinations[0][0], possibleCombinations[0][1], [\n                [theme[0], '', '#AAAAAA', MonoColour.white, '', ''],\n            ])\n        );\n    };\n\n    const handleUpdateRoute = (colineId: string) => (route: string) => {\n        const [from, to] = route.split(',');\n        console.log(`ColineSection.handleUpdateRoute():: Updating route, colineId=${colineId}, from=${from}, to=${to}`);\n\n        try {\n            dispatch(updateColine(colineId, from, to));\n        } catch {\n            dispatch(setGlobalAlert({ status: 'error', message: 'Unable to draw this share track.' }));\n        }\n    };\n\n    const handleDeleteColour = (colineId: string, colourIndex: number) => {\n        dispatch(removeColineColor(colineId, colourIndex));\n    };\n\n    return (\n        <VStack align=\"flex-start\" p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('BranchSidePanel.coline.title')}\n            </Heading>\n\n            {Object.entries(colineInfoList).map(([id, colineInfo]) => (\n                <ColineCard\n                    key={id}\n                    colineInfo={colineInfo}\n                    routeOptions={routeOptions}\n                    onUpdateRoute={handleUpdateRoute(id)}\n                    onUpdateColourInfo={colourInfo => dispatch(updateColineColor(id, 0, colourInfo))}\n                    onDelete={colourIndex => handleDeleteColour(id, colourIndex)}\n                />\n            ))}\n\n            {(selectedBranch === 0 || Object.keys(colineInfoList).length === 0) && (\n                <Button\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    alignSelf=\"flex-end\"\n                    leftIcon={<MdAdd />}\n                    onClick={handleAddTrackSharing}\n                >\n                    {t('BranchSidePanel.coline.add')}\n                </Button>\n            )}\n        </VStack>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { RmgStyle } from '../../constants/constants';\nimport { isColineBranch } from '../../redux/param/coline-action';\nimport { autoNumbering } from '../../redux/param/action';\n\ninterface AutoNumModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function AutoNumModal(props: AutoNumModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedBranch = useRootSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useRootSelector(state => state.param);\n    const branches = useRootSelector(state => state.helper.branches);\n\n    const [where, setWhere] = useState(selectedBranch);\n    const [from, setFrom] = useState('1');\n    const [maxLength, setMaxLength] = useState('2');\n    const [sort, setSort] = useState<'asc' | 'desc'>('asc');\n\n    useEffect(() => {\n        setWhere(selectedBranch);\n    }, [selectedBranch]);\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('AutoNumModal.where'),\n            value: where,\n            options: {\n                ...branches.reduce(\n                    (acc, cur, idx) => ({\n                        ...acc,\n                        [idx]:\n                            idx === 0\n                                ? t('AutoNumModal.main')\n                                : style !== RmgStyle.SHMetro || !isColineBranch(cur, stationList)\n                                ? t('AutoNumModal.branch') + ' ' + idx\n                                : t('AutoNumModal.external') + ' ' + idx,\n                    }),\n                    {}\n                ),\n            },\n            onChange: value => setWhere(value as number),\n        },\n        {\n            type: 'input',\n            label: t('AutoNumModal.from'),\n            value: from,\n            validator: value => !isNaN(Number(value)),\n            onChange: setFrom,\n            debouncedDelay: 0,\n        },\n        {\n            type: 'input',\n            label: t('AutoNumModal.maxLength'),\n            validator: value => !isNaN(Number(value)),\n            value: maxLength,\n            onChange: setMaxLength,\n            debouncedDelay: 0,\n        },\n        {\n            type: 'select',\n            label: t('AutoNumModal.sort'),\n            value: sort,\n            options: {\n                asc: t('AutoNumModal.asc'),\n                desc: t('AutoNumModal.desc'),\n            },\n            onChange: value => setSort(value as 'asc' | 'desc'),\n        },\n    ];\n\n    const handleSubmit = () => {\n        dispatch(autoNumbering(where, Number(from), Number(maxLength), sort));\n        onClose();\n    };\n\n    const isSubmitDisabled = !from || !maxLength || isNaN(Number(from)) || isNaN(Number(maxLength));\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('AutoNumModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button colorScheme=\"teal\" isDisabled={isSubmitDisabled} onClick={handleSubmit}>\n                        {t('AutoNumModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Box, Button, Flex, Heading } from '@chakra-ui/react';\nimport { MdCached, MdFilter1 } from 'react-icons/md';\nimport AutoNumModal from '../../modal/auto-num-modal';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport { reverseStations } from '../../../redux/param/action';\n\nexport default function ActionSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const style = useRootSelector(state => state.param.style);\n\n    const [isAutoNumModalOpen, setIsAutoNumModalOpen] = useState(false);\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('BranchSidePanel.action.title')}\n            </Heading>\n\n            <Flex\n                wrap=\"wrap\"\n                sx={{\n                    p: 1,\n\n                    '&> *': {\n                        flexShrink: 0,\n                        flexBasis: '100%',\n\n                        '&:not(:first-child)': {\n                            marginTop: 2,\n                        },\n                    },\n                }}\n            >\n                {style === RmgStyle.GZMTR && (\n                    <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        leftIcon={<MdFilter1 />}\n                        alignSelf=\"flex-end\"\n                        onClick={() => setIsAutoNumModalOpen(true)}\n                    >\n                        {t('BranchSidePanel.action.autoNum')}\n                    </Button>\n                )}\n\n                <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    leftIcon={<MdCached />}\n                    alignSelf=\"flex-end\"\n                    onClick={() => dispatch(reverseStations(style === RmgStyle.SHMetro))}\n                >\n                    {style === RmgStyle.SHMetro\n                        ? t('BranchSidePanel.action.flip')\n                        : t('BranchSidePanel.action.reverse')}\n                </Button>\n            </Flex>\n\n            <AutoNumModal isOpen={isAutoNumModalOpen} onClose={() => setIsAutoNumModalOpen(false)} />\n        </Box>\n    );\n}\n","import { RmgSidePanelBody } from '@railmapgen/rmg-components';\nimport React from 'react';\nimport ColineSection from './coline-section';\nimport { Divider } from '@chakra-ui/react';\nimport ActionSection from './action-section';\nimport { useRootSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport { isColineBranch } from '../../../redux/param/coline-action';\n\nexport default function BranchSidePanel() {\n    const selectedBranch = useRootSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useRootSelector(state => state.param);\n    const branches = useRootSelector(state => state.helper.branches);\n\n    return (\n        <RmgSidePanelBody>\n            {style === RmgStyle.SHMetro &&\n                (selectedBranch === 0 || isColineBranch(branches[selectedBranch], stationList)) && (\n                    <>\n                        <ColineSection />\n                        <Divider />\n                    </>\n                )}\n\n            <ActionSection />\n        </RmgSidePanelBody>\n    );\n}\n","import React, { ReactNode } from 'react';\nimport { useRootSelector } from '../../redux';\nimport { setSidePanelMode } from '../../redux/app/app-slice';\nimport { useDispatch } from 'react-redux';\nimport { SidePanelMode } from '../../constants/constants';\nimport StationSidePanel from './station-side-panel/station-side-panel';\nimport StyleSidePanel from './style-side-panel/style-side-panel';\nimport { RmgMultiLineString, RmgSidePanel, RmgSidePanelHeader } from '@railmapgen/rmg-components';\nimport StationSidePanelFooter from './station-side-panel/station-side-panel-footer';\nimport BranchSidePanel from './branch-side-panel/branch-side-panel';\nimport { useTranslation } from 'react-i18next';\n\nconst SIDE_PANEL_WIDTH = 375;\n\nexport default function SidePanel() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const { sidePanelMode, selectedStation } = useRootSelector(state => state.app);\n    const name = useRootSelector(state => state.param.stn_list[selectedStation]?.name);\n\n    const mode: Record<SidePanelMode, { header: ReactNode; body?: ReactNode; footer?: ReactNode }> = {\n        STATION: {\n            header: <RmgMultiLineString text={name?.join(' - ') || ''} />,\n            body: <StationSidePanel />,\n            footer: <StationSidePanelFooter />,\n        },\n        STYLE: { header: t('StyleSidePanel.header'), body: <StyleSidePanel /> },\n        BRANCH: { header: t('BranchSidePanel.header'), body: <BranchSidePanel /> },\n        CLOSE: { header: 'Close' },\n    };\n\n    const handleClose = () => {\n        dispatch(setSidePanelMode(SidePanelMode.CLOSE));\n    };\n\n    return (\n        <RmgSidePanel isOpen={sidePanelMode !== SidePanelMode.CLOSE} width={SIDE_PANEL_WIDTH} header=\"Dummy header\">\n            <RmgSidePanelHeader onClose={handleClose}>{mode[sidePanelMode].header}</RmgSidePanelHeader>\n            {mode[sidePanelMode]?.body}\n            {mode[sidePanelMode]?.footer}\n        </RmgSidePanel>\n    );\n}\n","export const downloadAs = (filename: string, type: string, data: any) => {\n    const blob = new Blob([data], { type });\n    downloadBlobAs(filename, blob);\n};\n\nexport const downloadBlobAs = (filename: string, blob: Blob) => {\n    const url = window.URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n};\n\nexport const readFileAsText = (file: File) => {\n    return new Promise((resolve: (text: string) => void) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve(reader.result as string);\n        reader.readAsText(file);\n    });\n};\n\nexport const isSafari = () => {\n    return navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');\n};\n","import { CanvasType, RmgStyle } from '../constants/constants';\nimport { isSafari } from './utils';\n\nexport const cloneSvgCanvas = async (\n    canvas: CanvasType,\n    rmgStyle: RmgStyle,\n    isTransparent?: boolean,\n    isShowBorder?: boolean,\n    scale?: number\n): Promise<SVGSVGElement> => {\n    let [, thisSVGHeight] = ['--rmg-svg-width', '--rmg-svg-height']\n        .map(\n            key =>\n                (document.querySelector(`svg#${canvas}`) as SVGSVGElement).style.getPropertyValue(key).match(/\\d+/g)![0]\n        )\n        .map(Number);\n\n    const elem = document.querySelector(`svg#${canvas}`)!.cloneNode(true) as SVGSVGElement;\n    // elem.setAttribute('width', (thisSVGWidth * scaleFactor).toString());\n    elem.setAttribute('height', ((thisSVGHeight * (scale || 100)) / 100).toString());\n    elem.style.setProperty('all', 'initial');\n\n    ['share', canvas]\n        .map(tag =>\n            [\n                ...(\n                    [...document.querySelectorAll('link')].filter(l => l.id === 'css_' + tag)[0]?.sheet as CSSStyleSheet\n                ).cssRules,\n            ]\n                .map(rule => rule.cssText)\n                .join(' ')\n        )\n        .forEach(txt => {\n            let s = document.createElement('style');\n            s.textContent = txt;\n            elem.prepend(s);\n        });\n\n    elem.querySelector('rect#canvas-border')?.setAttribute('stroke', isShowBorder ? 'black' : 'none');\n    elem.querySelector('rect#canvas-bg')?.setAttribute('fill', isTransparent ? 'none' : 'white');\n\n    if (rmgStyle === RmgStyle.MTR) {\n        try {\n            const uris = await getBase64FontFace(elem);\n            const s = document.createElement('style');\n            s.textContent = uris.join('\\n');\n            elem.prepend(s);\n        } catch (err) {\n            alert('Failed to fonts. Fonts in the exported PNG will be missing.');\n            console.error(err);\n        }\n    }\n\n    return elem;\n};\n\n/**\n * Convert a `Blob` into Base64 data URL.\n * @param blob\n */\nconst readBlobAsDataURL = (blob: Blob): Promise<string> => {\n    return new Promise((resolve: (value: string) => void) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve(reader.result as string);\n        reader.readAsDataURL(blob);\n    });\n};\n\nconst matchCssRuleByFontFace = (rules: CSSFontFaceRule[], font: FontFace): CSSFontFaceRule | undefined => {\n    return rules.find(rule => {\n        const cssStyle = rule.style as any;\n        return (\n            cssStyle.fontFamily.replace(/^\"(.+)\"$/, '$1') === font.family && cssStyle.unicodeRange === font.unicodeRange\n        );\n    });\n};\n\nexport const getBase64FontFace = async (svgEl: SVGSVGElement): Promise<string[]> => {\n    const uniqueCharacters = Array.from(\n        new Set(\n            [\n                ...svgEl.querySelectorAll<SVGElement>('.rmg-name__zh'),\n                ...svgEl.querySelectorAll<SVGElement>('.rmg-name__en'),\n            ]\n                .map(el => el.innerHTML)\n                .join('')\n                .replace(/[\\s]/g, '')\n        )\n    ).join('');\n\n    const fontFaceList = await document.fonts.load('80px GenYoMin TW, Vegur', uniqueCharacters);\n    const cssRules = Array.from(\n        (document.querySelector<HTMLLinkElement>('link#css_share')!.sheet!.cssRules[0] as CSSImportRule).styleSheet\n            .cssRules\n    ) as CSSFontFaceRule[];\n    const distinctCssRules = fontFaceList.reduce<CSSFontFaceRule[]>((acc, cur) => {\n        const matchedRule = matchCssRuleByFontFace(cssRules, cur);\n        if (matchedRule) {\n            const existence = acc.find(rule => {\n                const ruleStyle = rule.style as any;\n                const matchedStyle = matchedRule.style as any;\n                return (\n                    ruleStyle.fontFamily === matchedStyle.fontFamily &&\n                    ruleStyle.unicodeRange === matchedStyle.unicodeRange\n                );\n            });\n            return existence ? acc : acc.concat(matchedRule);\n        } else {\n            return acc;\n        }\n    }, []);\n\n    return await Promise.all(\n        distinctCssRules.map(async cssRule => {\n            try {\n                const fontResp = await fetch(getAbsoluteUrl(cssRule));\n                const fontDataUri = await readBlobAsDataURL(await fontResp.blob());\n                return cssRule.cssText.replace(/src:[ \\w('\",\\-:/.)]+;/g, `src: url('${fontDataUri}'); `);\n            } catch (err) {\n                console.error(err);\n                return '';\n            }\n        })\n    );\n};\n\nexport const getAbsoluteUrl = (cssRule: CSSFontFaceRule) => {\n    const ruleStyleSrc = (cssRule.style as any).src;\n    return isSafari()\n        ? ruleStyleSrc.replace(/^url\\(\"([\\S]+)\"\\).*$/, '$1')\n        : process.env.PUBLIC_URL + '/styles/' + ruleStyleSrc.match(/^url\\(\"([\\S*]+)\"\\)/)?.[1];\n};\n\nexport const test = async (svgEl: SVGSVGElement, scale: number): Promise<Blob> => {\n    let svgW = svgEl.viewBox.baseVal.width;\n    let svgH = svgEl.viewBox.baseVal.height;\n\n    // svgEl.removeAttribute('height');\n\n    let canvas = document.querySelectorAll('canvas')[0];\n    canvas.width = Number(svgW) * window.devicePixelRatio * scale;\n    canvas.height = Number(svgH) * window.devicePixelRatio * scale;\n\n    svgEl.setAttribute('width', canvas.width.toString());\n    svgEl.setAttribute('height', canvas.height.toString());\n\n    let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // bypass Chrome min font size (to be improved)\n\n    svgEl.querySelectorAll('.rmg-name__en.rmg-name__mtr--station').forEach(el => el.setAttribute('font-size', '11px'));\n\n    svgEl\n        .querySelectorAll('.rmg-name__en.rmg-name__gzmtr--next2-dest')\n        .forEach(el => el.setAttribute('font-size', '8.5px'));\n\n    // svgEl\n    //     .querySelectorAll('text:not([font-size]), tspan:not([font-size])')\n    //     .forEach((el) => el.setAttribute('font-size', window.getComputedStyle(el).fontSize));\n\n    svgEl.querySelectorAll('text, tspan').forEach(el => {\n        let elStyle = window.getComputedStyle(el);\n        el.setAttribute('font-family', elStyle.fontFamily);\n        el.setAttribute('fill', elStyle.fill);\n        el.setAttribute('dominant-baseline', elStyle.dominantBaseline);\n        el.setAttribute('text-anchor', elStyle.textAnchor || '');\n        // el.removeAttribute('class');\n    });\n\n    // https://stackoverflow.com/questions/46399223/async-await-in-image-loading/52851789\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            canvas.toBlob(blob => resolve(blob!), 'image/png');\n            // return resolve(canvas.toDataURL('image/png'));\n        };\n        img.onerror = reject;\n        img.src = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgEl.outerHTML)));\n    });\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    HStack,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { canvasConfig, CanvasType, RmgStyle } from '../../constants/constants';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport JSZip from 'jszip';\nimport { setCurrentStation } from '../../redux/param/action';\nimport { cloneSvgCanvas, test } from '../../util/export-utils';\nimport { downloadAs, downloadBlobAs } from '../../util/utils';\nimport { useTranslation } from 'react-i18next';\nimport { waitForMs } from '../../utils';\nimport { setLoadingProgress, stopLoading } from '../../redux/app/app-slice';\n\ninterface DownloadModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function DownloadModal(props: DownloadModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n\n    const dispatch = useRootDispatch();\n\n    const [canvasToDownload, setCanvasToDownload] = useState('');\n    const [isTransparent, setIsTransparent] = useState(false);\n    const [isShowBorder, setIsShowBorder] = useState(false);\n    const [scale, setScale] = useState(100);\n    const [format, setFormat] = useState('png');\n\n    const canvasToShow = useRootSelector(state => state.app.canvasToShow);\n    const {\n        style,\n        stn_list: stationList,\n        current_stn_idx: currentStationId,\n        line_name: lineName,\n    } = useRootSelector(state => state.param);\n\n    useEffect(() => {\n        // reset canvas to download if on-screen canvas changed\n        if (canvasToShow !== 'all' && canvasToDownload !== '' && canvasToShow !== canvasToDownload) {\n            setCanvasToDownload('');\n        }\n    }, [canvasToShow]);\n\n    const canvasOptions = canvasConfig[style].reduce<Record<string, string>>(\n        (acc, cur) => {\n            if (canvasToShow === 'all' || cur === canvasToShow) {\n                return { ...acc, [cur]: t('CanvasType.' + cur) };\n            } else {\n                return { ...acc };\n            }\n        },\n        { '': t('DownloadModal.pleaseSelect') }\n    );\n\n    const scaleOptions = [25, 33, 50, 67, 75, 80, 90, 100, 110, 125, 150, 175, 200, 250, 300, 400, 500].reduce<\n        Record<number, string>\n    >(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: `${cur}%`,\n        }),\n        {}\n    );\n\n    const formatOptions = {\n        png: t('DownloadModal.png'),\n        svg: t('DownloadModal.svg'),\n    };\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('DownloadModal.canvas'),\n            value: canvasToDownload,\n            options: canvasOptions,\n            disabledOptions: [''],\n            onChange: value => setCanvasToDownload(value as CanvasType),\n            minW: 'full',\n        },\n        {\n            type: 'switch',\n            label: t('DownloadModal.transparent'),\n            isChecked: isTransparent,\n            onChange: setIsTransparent,\n            oneLine: true,\n            minW: 'full',\n        },\n        {\n            type: 'switch',\n            label: t('DownloadModal.showBorder'),\n            isChecked: isShowBorder,\n            onChange: setIsShowBorder,\n            oneLine: true,\n            minW: 'full',\n        },\n        {\n            type: 'select',\n            label: t('DownloadModal.scale'),\n            value: scale,\n            options: scaleOptions,\n            onChange: value => setScale(value as number),\n        },\n        {\n            type: 'select',\n            label: t('DownloadModal.format'),\n            value: format,\n            options: formatOptions,\n            onChange: value => setFormat(value as string),\n        },\n    ];\n\n    const handleDownload = async (option: 'current' | 'all') => {\n        dispatch(setLoadingProgress(0));\n        const stationIdListToDownload =\n            option === 'current'\n                ? [currentStationId]\n                : Object.keys(stationList).filter(id => !['linestart', 'lineend'].includes(id));\n\n        const zip = new JSZip();\n\n        for (let index in stationIdListToDownload) {\n            dispatch(setLoadingProgress(((Number(index) + 1) / stationIdListToDownload.length) * 100));\n\n            const stnId = stationIdListToDownload[index];\n            // wait for svg elements updated for station A before we dispatch the current station to B.\n            dispatch(setCurrentStation(stnId));\n            await waitForMs(1000);\n\n            const elem = await cloneSvgCanvas(\n                canvasToDownload as CanvasType,\n                style,\n                isTransparent,\n                isShowBorder,\n                scale\n            );\n\n            // append svg to the document so the bbox will be loaded correctly\n            // (but not for gzmtr and have no idea why)\n            document.body.appendChild(elem);\n\n            const filename = `rmg.${stnId}.${stationList[stnId].name[0]}.${stationList[stnId].name[1]}`.replaceAll(\n                ' ',\n                '_'\n            );\n            if (format === 'png') {\n                const blob = await test(elem, scale / 100);\n                if (navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome')) {\n                    await new Promise<void>(resolve => {\n                        setTimeout(() => {\n                            console.log('Sleep 1 second for Safari');\n                            resolve();\n                        }, 1000);\n                    });\n                }\n\n                if (stationIdListToDownload.length > 1) {\n                    // batch download and split base64 for this\n                    // https://stackoverflow.com/questions/31305485/export-resized-image-in-canvas-to-new-jszip-package\n                    zip.file(`${filename}.png`, blob);\n                } else {\n                    downloadBlobAs(`${filename}.png`, blob);\n                }\n            } else if (format === 'svg') {\n                elem.removeAttribute('height');\n                const data = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(elem.outerHTML)));\n\n                if (stationIdListToDownload.length > 1) {\n                    zip.file(`${filename}.svg`, data.split('base64,')[1], { base64: true });\n                } else {\n                    downloadAs(filename + '.svg', 'image/svg+xml', elem.outerHTML);\n                }\n            }\n\n            // don't forget to release it after use\n            document.body.removeChild(elem);\n        }\n\n        // generate the zip for batch download\n        if (stationIdListToDownload.length > 1) {\n            const zipData = await zip.generateAsync({ type: 'blob' });\n            const filename = `rmg.${lineName[0]}.${lineName[1]}.zip`.replaceAll(' ', '_');\n            downloadBlobAs(filename, zipData);\n        }\n\n        // revert to original station\n        dispatch(setCurrentStation(currentStationId));\n        dispatch(stopLoading());\n        onClose();\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('DownloadModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <HStack>\n                        <Button\n                            colorScheme=\"teal\"\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handleDownload('current')}\n                            disabled={!canvasToDownload}\n                        >\n                            {t('DownloadModal.downloadOne')}\n                        </Button>\n                        {style !== RmgStyle.GZMTR && (\n                            <Button\n                                colorScheme=\"teal\"\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handleDownload('all')}\n                                disabled={!canvasToDownload}\n                            >\n                                {t('DownloadModal.downloadAll')}\n                            </Button>\n                        )}\n                    </HStack>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useState } from 'react';\nimport { Button, Menu, MenuButton, MenuList, MenuItem } from '@chakra-ui/react';\nimport { MdExpandMore } from 'react-icons/md';\nimport { downloadAs } from '../../util/utils';\nimport { useRootSelector } from '../../redux';\nimport { useTranslation } from 'react-i18next';\nimport DownloadModal from '../modal/download-modal';\n\nexport default function DownloadActions() {\n    const { t } = useTranslation();\n\n    const [isDownloadModalOpen, setIsDownloadModalOpen] = useState(false);\n\n    const param = useRootSelector(state => state.param);\n\n    const handleDownloadJson = () => {\n        downloadAs(`RMG_${new Date().valueOf()}.json`, 'application/json', JSON.stringify(param));\n    };\n\n    return (\n        <Menu>\n            <MenuButton as={Button} variant=\"ghost\" size=\"sm\" rightIcon={<MdExpandMore />}>\n                {t('DownloadActions.downloads')}\n            </MenuButton>\n            <MenuList>\n                <MenuItem onClick={handleDownloadJson}>{t('DownloadActions.configFile')}</MenuItem>\n                <MenuItem onClick={() => setIsDownloadModalOpen(true)}>{t('DownloadActions.images')}</MenuItem>\n            </MenuList>\n\n            <DownloadModal isOpen={isDownloadModalOpen} onClose={() => setIsDownloadModalOpen(false)} />\n        </Menu>\n    );\n}\n","import React, { RefObject } from 'react';\nimport {\n    AlertDialog,\n    AlertDialogBody,\n    AlertDialogContent,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogOverlay,\n    Button,\n} from '@chakra-ui/react';\nimport { MonoColour, RMGParam } from '../../constants/constants';\nimport { RmgLineBadge } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\ninterface UploadConfirmModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    cancelRef: RefObject<HTMLButtonElement>;\n    uploadedParam?: RMGParam;\n    onOpenParam: (param: Record<string, any>) => void;\n}\n\nexport default function UploadConfirmModal(props: UploadConfirmModalProps) {\n    const { isOpen, onClose, cancelRef, uploadedParam, onOpenParam } = props;\n    const { t } = useTranslation();\n\n    const handleConfirm = () => {\n        if (uploadedParam) {\n            onOpenParam(uploadedParam);\n        }\n        onClose();\n    };\n\n    return (\n        <AlertDialog isOpen={isOpen} leastDestructiveRef={cancelRef} onClose={onClose}>\n            <AlertDialogOverlay>\n                <AlertDialogContent>\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                        {t('UploadConfirmModal.title')}\n                    </AlertDialogHeader>\n\n                    <AlertDialogBody>\n                        {t('UploadConfirmModal.message1')}\n                        <RmgLineBadge\n                            name={uploadedParam?.line_name?.join(' ') || ''}\n                            fg={uploadedParam?.theme?.[3] || MonoColour.white}\n                            bg={uploadedParam?.theme?.[2] || '#AAAAAA'}\n                        />\n                        {t('UploadConfirmModal.message2') +\n                            (uploadedParam ? Object.keys(uploadedParam.stn_list).length - 2 : 0) +\n                            t('UploadConfirmModal.message3')}\n                    </AlertDialogBody>\n\n                    <AlertDialogFooter>\n                        <Button ref={cancelRef} onClick={onClose}>\n                            {t('UploadConfirmModal.cancel')}\n                        </Button>\n                        <Button colorScheme=\"teal\" onClick={handleConfirm} ml={3}>\n                            {t('UploadConfirmModal.confirm')}\n                        </Button>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialogOverlay>\n        </AlertDialog>\n    );\n}\n","import React from 'react';\nimport {\n    Button,\n    Flex,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalHeader,\n    ModalOverlay,\n    Tab,\n    TabList,\n    TabPanel,\n    TabPanels,\n    Tabs,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { translateText } from '../../i18n/config';\nimport { useRootDispatch } from '../../redux';\nimport { companyConfig, templateList } from '@railmapgen/rmg-templates-resources';\nimport { startLoading } from '../../redux/app/app-slice';\n\ninterface TemplateModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onOpenParam: (param: Record<string, any>) => void;\n}\n\nexport default function TemplateModal(props: TemplateModalProps) {\n    const { isOpen, onClose, onOpenParam } = props;\n\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const handleSelect = async (company: string, filename: string) => {\n        dispatch(startLoading());\n        const module = await import(\n            /* webpackChunkName: \"templates\" */ `@railmapgen/rmg-templates-resources/templates/${company}/${filename}.json`\n        );\n        onOpenParam(module.default);\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('TemplateModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <Tabs isLazy size=\"sm\" orientation=\"vertical\">\n                        <TabList maxW={150}>\n                            {companyConfig.map(company => (\n                                <Tab key={company.id}>{translateText(company.name)}</Tab>\n                            ))}\n                        </TabList>\n\n                        <TabPanels maxW={250}>\n                            {Object.entries(templateList)\n                                .sort(\n                                    (a, b) =>\n                                        companyConfig.findIndex(c => c.id === a[0]) -\n                                        companyConfig.findIndex(c => c.id === b[0])\n                                )\n                                .map(([company, templates]) => (\n                                    <TabPanel key={company} as={Flex} flexDirection=\"column\" py={0} px={1}>\n                                        {templates.map(template => (\n                                            <Button\n                                                key={template.filename}\n                                                variant=\"ghost\"\n                                                size=\"sm\"\n                                                justifyContent=\"flex-start\"\n                                                overflow=\"hidden\"\n                                                onClick={() => handleSelect(company, template.filename)}\n                                            >\n                                                {translateText(template.name)}\n                                            </Button>\n                                        ))}\n                                    </TabPanel>\n                                ))}\n                        </TabPanels>\n                    </Tabs>\n                </ModalBody>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { ChangeEvent, useRef, useState } from 'react';\nimport { Button, Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/react';\nimport { MdExpandMore, MdInsertDriveFile, MdNoteAdd, MdUpload } from 'react-icons/md';\nimport { useTranslation } from 'react-i18next';\nimport { updateParam } from '../../utils';\nimport { readFileAsText } from '../../util/utils';\nimport UploadConfirmModal from '../modal/upload-confirm-modal';\nimport { setGlobalAlert } from '../../redux/app/app-slice';\nimport { LanguageCode, RMGParam } from '../../constants/constants';\nimport TemplateModal from '../modal/template-modal';\nimport { openFromNewParam } from '../../redux/param/open-new-action';\nimport { initParam } from '../../redux/param/util';\nimport { useRootDispatch, useRootSelector } from '../../redux';\n\nexport default function OpenActions() {\n    const { t, i18n } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const style = useRootSelector(state => state.param.style);\n\n    const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n    const [isTemplateModalOpen, setIsTemplateModalOpen] = useState(false);\n    const [uploadedParam, setUploadedParam] = useState<RMGParam | undefined>(undefined);\n\n    const uploadModalCloseRef = useRef<HTMLButtonElement | null>(null);\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n\n    const handleUpload = async (event: ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        console.log('OpenActions.handleUpload():: received file', file);\n\n        if (file?.type !== 'application/json') {\n            dispatch(setGlobalAlert({ status: 'error', message: t('OpenActions.invalidType') }));\n        } else {\n            try {\n                const paramStr = await readFileAsText(file);\n                const updatedParam = updateParam(JSON.parse(paramStr));\n                setUploadedParam(updatedParam as RMGParam);\n                setIsUploadModalOpen(true);\n            } catch (err) {\n                dispatch(setGlobalAlert({ status: 'error', message: t('OpenActions.unknownError') }));\n                console.error(\n                    'OpenActions.handleUpload():: Unknown error occurred while parsing the uploaded file',\n                    err\n                );\n            }\n        }\n\n        // clear field for next upload\n        event.target.value = '';\n    };\n\n    const handleOpenParam = (param: Record<string, any>) => {\n        dispatch(openFromNewParam(param));\n    };\n\n    return (\n        <Menu>\n            <MenuButton as={Button} variant=\"ghost\" size=\"sm\" rightIcon={<MdExpandMore />}>\n                {t('OpenActions.openFrom')}\n            </MenuButton>\n            <MenuList>\n                <MenuItem\n                    icon={<MdNoteAdd />}\n                    onClick={() => handleOpenParam(initParam(style, i18n.language as LanguageCode))}\n                >\n                    {t('Empty template')}\n                </MenuItem>\n\n                <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    accept=\".json\"\n                    hidden={true}\n                    onChange={handleUpload}\n                    data-testid=\"file-upload\"\n                />\n                <MenuItem icon={<MdUpload />} onClick={() => fileInputRef?.current?.click()}>\n                    {t('OpenActions.upload')}\n                </MenuItem>\n\n                <MenuItem icon={<MdInsertDriveFile />} onClick={() => setIsTemplateModalOpen(true)}>\n                    {t('OpenActions.templates')}\n                </MenuItem>\n            </MenuList>\n\n            <UploadConfirmModal\n                isOpen={isUploadModalOpen}\n                onClose={() => setIsUploadModalOpen(false)}\n                cancelRef={uploadModalCloseRef}\n                uploadedParam={uploadedParam}\n                onOpenParam={handleOpenParam}\n            />\n\n            <TemplateModal\n                isOpen={isTemplateModalOpen}\n                onClose={() => setIsTemplateModalOpen(false)}\n                onOpenParam={handleOpenParam}\n            />\n        </Menu>\n    );\n}\n","import { RootDispatch, RootState } from '../index';\nimport { updateParam } from '../../utils';\nimport { AllCanvas, canvasConfig, RMGParam, SidePanelMode } from '../../constants/constants';\nimport { selectCanvas, setSelectedStation, setSidePanelMode, stopLoading } from '../app/app-slice';\nimport { reRenderApp } from '../../index';\n\nexport const openFromNewParam = (param: Record<string, any>) => {\n    return async (dispatch: RootDispatch, getState: () => RootState) => {\n        const updatedParam = updateParam(param) as RMGParam;\n        await window.rmgStorage.writeFile('rmgParam', JSON.stringify(updatedParam));\n\n        // close side panel, reset selection\n        dispatch(setSidePanelMode(SidePanelMode.CLOSE));\n        dispatch(setSelectedStation('linestart'));\n\n        // reset to AllCanvas if the current canvas is not supported in the new style\n        const canvasToShow = getState().app.canvasToShow;\n        const canvas = canvasConfig[updatedParam.style].some(c => c === canvasToShow) ? canvasToShow : AllCanvas;\n        await dispatch(selectCanvas(canvas));\n        reRenderApp(updatedParam);\n        dispatch(stopLoading());\n    };\n};\n","import React from 'react';\nimport { HStack, Button } from '@chakra-ui/react';\nimport DownloadActions from './download-actions';\nimport { MdPalette } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { SidePanelMode } from '../../constants/constants';\nimport { setSidePanelMode } from '../../redux/app/app-slice';\nimport { useTranslation } from 'react-i18next';\nimport OpenActions from './open-actions';\n\nexport default function HeaderActions() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    return (\n        <HStack ml=\"auto\">\n            <DownloadActions />\n\n            <OpenActions />\n\n            <Button\n                variant=\"solid\"\n                size=\"sm\"\n                colorScheme=\"teal\"\n                leftIcon={<MdPalette />}\n                onClick={() => dispatch(setSidePanelMode(SidePanelMode.STYLE))}\n            >\n                {t('HeaderActions.editStyle')}\n            </Button>\n        </HStack>\n    );\n}\n","import React from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport HeaderActions from './header-actions';\nimport RmgButtonGroup from '../common/rmg-button-group';\nimport { selectCanvas, zoomToScale } from '../../redux/app/app-slice';\nimport { AllCanvas, canvasConfig, CanvasType } from '../../constants/constants';\nimport { useTranslation } from 'react-i18next';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { MdZoomIn, MdZoomOut } from 'react-icons/md';\n\nexport default function PageHeader() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const { canvasToShow, canvasScale } = useRootSelector(state => state.app);\n    const style = useRootSelector(state => state.param.style);\n\n    const canvasSelections = [AllCanvas, ...canvasConfig[style]].map(canvas => ({\n        label: t('CanvasType.' + canvas),\n        value: canvas,\n    }));\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('Canvas to show'),\n            component: (\n                <RmgButtonGroup\n                    selections={canvasSelections}\n                    defaultValue={canvasToShow}\n                    onChange={canvas => dispatch(selectCanvas(canvas as CanvasType | typeof AllCanvas))}\n                />\n            ),\n        },\n        {\n            type: 'slider',\n            label: t('Canvas scale'),\n            value: canvasScale,\n            min: 0.1,\n            max: 2,\n            step: 0.1,\n            onChange: value => dispatch(zoomToScale(value)),\n            leftIcon: <MdZoomOut />,\n            rightIcon: <MdZoomIn />,\n            minW: 160,\n        },\n    ];\n\n    return (\n        <Flex align=\"center\" wrap=\"wrap\" pl={2} pr={3} py={1}>\n            <RmgFields fields={fields} />\n\n            <HeaderActions />\n        </Flex>\n    );\n}\n","import packageJson from '../../package.json';\n\nexport enum Environments {\n    DEV = 'DEV',\n    UAT = 'UAT',\n    PRD = 'PRD',\n}\n\nexport const getEnvironment = () => {\n    if (window.location.hostname === 'localhost') {\n        return Environments.DEV;\n    } else if (window.location.hostname.includes('uat')) {\n        return Environments.UAT;\n    } else {\n        return Environments.PRD;\n    }\n};\n\nexport const getVersion = () => {\n    return packageJson.version;\n};\n","import React from 'react';\nimport {\n    Avatar,\n    Button,\n    Flex,\n    Heading,\n    Icon,\n    Link,\n    ListItem,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    OrderedList,\n    Tag,\n    TagLabel,\n    Text,\n    VStack,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { MdOpenInNew } from 'react-icons/md';\n\nconst CONTRIBUTORS_LIST = [\n    '52PD',\n    'jealousyge',\n    'Jay20081229',\n    'clearng-kly',\n    'Dingdong2334',\n    'linchen1965',\n    'C1P918R',\n    'AnDanJuneUnderline',\n    'GrassRabbit1410',\n    'xiany114514',\n    'Andy1782010',\n    'Thomastzc',\n    'Tianxiu11111',\n];\n\ninterface HelpModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function HelpModal(props: HelpModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose} size=\"xl\" scrollBehavior=\"inside\">\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('Help and support')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <Heading as=\"h5\" size=\"sm\" mb={2}>\n                        {t('Terms and conditions')}\n                    </Heading>\n\n                    <OrderedList>\n                        <ListItem>\n                            The layout of the elements on the signage or rail map, is designed by{' '}\n                            <Link color=\"teal.500\" href=\"https://www.gzmtr.com/\" isExternal={true}>\n                                Guangzhou Metro Group <Icon as={MdOpenInNew} />\n                            </Link>\n                            {', '}\n                            <Link color=\"teal.500\" href=\"https://www.mtr.com.hk/\" isExternal={true}>\n                                MTR Corporation <Icon as={MdOpenInNew} />\n                            </Link>\n                            {' or '}\n                            <Link color=\"teal.500\" href=\"https://www.shmetro.com/\" isExternal={true}>\n                                Shanghai Shentong Metro Group <Icon as={MdOpenInNew} />\n                            </Link>\n                            , depending on your selection. You shall grant appropriate permit or license from the\n                            relevant company above before using the generated images for commercial purposes, if it is\n                            required to do so.\n                            <br />\n                            標誌版或路線圖之元素之佈局，基於你所選擇之風格，為\n                            <Link color=\"teal.500\" href=\"https://www.gzmtr.com/\" isExternal={true}>\n                                廣州地鐵集團公司 <Icon as={MdOpenInNew} />\n                            </Link>\n                            ，\n                            <Link color=\"teal.500\" href=\"https://www.mtr.com.hk/\" isExternal={true}>\n                                港鐵公司 <Icon as={MdOpenInNew} />\n                            </Link>\n                            或\n                            <Link color=\"teal.500\" href=\"https://www.shmetro.com/\" isExternal={true}>\n                                上海申通地鐵集團 <Icon as={MdOpenInNew} />\n                            </Link>\n                            所設計。在產生之圖像用作商業用途前，你應向相關公司取得適當之許可證或授權。\n                        </ListItem>\n                        <ListItem>\n                            The elements including shapes and lines on the image are drawn by{' '}\n                            <Link color=\"teal.500\" href=\"https://www.github.com/wongchito\" isExternal={true}>\n                                Chito Wong <Icon as={MdOpenInNew} />\n                            </Link>\n                            {' and '}\n                            <Link color=\"teal.500\" href=\"https://www.github.com/thekingofcity\" isExternal={true}>\n                                thekingofcity <Icon as={MdOpenInNew} />\n                            </Link>\n                            , based on the design standards or rules of the companies listed above. You may use them for\n                            any purposes, but it is recommended to state the name and the link of software alongside.\n                            <br />\n                            圖像之元素，包括圖形及線條，均由\n                            <Link color=\"teal.500\" href=\"https://www.github.com/wongchito\" isExternal={true}>\n                                Chito Wong <Icon as={MdOpenInNew} />\n                            </Link>\n                            及\n                            <Link color=\"teal.500\" href=\"https://www.github.com/thekingofcity\" isExternal={true}>\n                                thekingofcity <Icon as={MdOpenInNew} />\n                            </Link>\n                            基於上述公司之設計標準或準則繪製。你可將其用於任何目的，但我們建議你於使用同時附以我們之名字以及該軟件之連結。\n                        </ListItem>\n                        <ListItem>\n                            Due to copyright, licensing and other legal restrictions, Rail Map Generator uses{' '}\n                            <Link color=\"teal.500\" href=\"https://github.com/ButTaiwan/genyo-font\" isExternal={true}>\n                                GenYoMin provided by ButTaiwan <Icon as={MdOpenInNew} />\n                            </Link>\n                            , and Vegur instead of MTRSung and Myriad Pro respectively to display and generate MTR-style\n                            signage. You shall grant appropriate permit or license from the manufacturers before using\n                            those generated images for commercial purposes.\n                            <br />\n                            由於著作權及其他法律限制，鐵路路線圖產生器使用\n                            <Link color=\"teal.500\" href=\"https://github.com/ButTaiwan/genyo-font\" isExternal={true}>\n                                由ButTaiwan提供之源樣明體 <Icon as={MdOpenInNew} />\n                            </Link>\n                            ，以及Vegur，以代替港鐵樣式標誌牌所使用之地鐵宋及Myriad\n                            Pro。在產生之圖像用作商業用途前，你應向字型生產廠商取得適當之許可證或授權。\n                        </ListItem>\n                        <ListItem>\n                            The exported images in PNG or SVG format may be modified, published, or used for other\n                            purposes, under the conditions above.\n                            <br />\n                            輸出之PNG或SVG種類之圖像可基於上述條款，用於修改、發行或其他用途。\n                        </ListItem>\n                        <ListItem>\n                            All flag emojis shown on Windows platforms are designed by{' '}\n                            <Link color=\"teal.500\" href=\"https://openmoji.org/\" isExternal={true}>\n                                OpenMoji <Icon as={MdOpenInNew} />\n                            </Link>{' '}\n                            – the open-source emoji and icon project. License:\n                            <Link\n                                color=\"teal.500\"\n                                href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n                                isExternal={true}\n                            >\n                                CC BY-SA 4.0 <Icon as={MdOpenInNew} />\n                            </Link>\n                            <br />\n                            於Windows作業系統上顯示之旗幟Emoji為\n                            <Link color=\"teal.500\" href=\"https://openmoji.org/\" isExternal={true}>\n                                OpenMoji <Icon as={MdOpenInNew} />\n                            </Link>\n                            所設計。許可證：\n                            <Link\n                                color=\"teal.500\"\n                                href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n                                isExternal={true}\n                            >\n                                CC BY-SA 4.0 <Icon as={MdOpenInNew} />\n                            </Link>\n                        </ListItem>\n                        <ListItem>\n                            We reserve the rights, without prior notice, to modify, add, or remove these terms. The\n                            Chinese translation is for reference only. In case of any discrepancy between the English\n                            version and the Chinese version, the English version shall prevail.\n                            <br />\n                            我們保留修改、新增或移除上述條款之權利，而無需另行通知。中文譯本僅供參考，文義如與英文有歧異，概以英文本為準。\n                        </ListItem>\n                    </OrderedList>\n\n                    <Heading as=\"h5\" size=\"sm\" mt={3} mb={2}>\n                        {t('Contributors')}\n                    </Heading>\n\n                    <Heading as=\"h6\" size=\"xs\" my={1}>\n                        {t('Core contributors')}\n                    </Heading>\n\n                    <VStack>\n                        <Tag\n                            size=\"lg\"\n                            minW=\"80%\"\n                            onClick={() => window.open('https://github.com/wongchito', '_blank')}\n                            cursor=\"pointer\"\n                        >\n                            <Avatar src=\"https://github.com/wongchito.png\" size=\"lg\" my={2} ml={-1} mr={2} />\n                            <TagLabel>\n                                <Text fontSize=\"lg\" fontWeight=\"bold\" mb={1}>\n                                    Chito Wong\n                                </Text>\n                                <Text fontSize=\"sm\">Project initiator</Text>\n                                <Text fontSize=\"sm\">Author of MTR and Guangzhou Metro styles</Text>\n                            </TagLabel>\n                        </Tag>\n                        <Tag\n                            size=\"lg\"\n                            minW=\"80%\"\n                            onClick={() => window.open('https://github.com/thekingofcity', '_blank')}\n                            cursor=\"pointer\"\n                        >\n                            <Avatar src=\"https://github.com/thekingofcity.png\" size=\"lg\" my={2} ml={-1} mr={2} />\n                            <TagLabel>\n                                <Text fontSize=\"lg\" fontWeight=\"bold\" mb={1}>\n                                    thekingofcity\n                                </Text>\n                                <Text fontSize=\"sm\">Author of Shanghai Metro style</Text>\n                                <Text fontSize=\"sm\">Desktop version (Electron) maintainer</Text>\n                            </TagLabel>\n                        </Tag>\n                    </VStack>\n\n                    <Heading as=\"h6\" size=\"xs\" my={1}>\n                        {t('Other contributors')}\n                    </Heading>\n\n                    <Flex wrap=\"wrap\">\n                        {CONTRIBUTORS_LIST.map(contributor => (\n                            <Tag\n                                key={contributor}\n                                size=\"lg\"\n                                mb={1}\n                                mr={1}\n                                onClick={() =>\n                                    window.open(\n                                        `https://github.com/railmapgen/rmg/issues?q=is:issue+author:${contributor}`,\n                                        '_blank'\n                                    )\n                                }\n                                cursor=\"pointer\"\n                            >\n                                <Avatar src={`https://github.com/${contributor}.png`} size=\"xs\" ml={-1} mr={2} />\n                                <TagLabel>{contributor}</TagLabel>\n                            </Tag>\n                        ))}\n                    </Flex>\n\n                    <Text>\n                        {t('Visit')}{' '}\n                        <Link\n                            color=\"teal.500\"\n                            href=\"https://github.com/railmapgen/rmg/wiki/How-to-add-color-palette-and-line-templates\"\n                            isExternal={true}\n                        >\n                            {t('Contribution Wiki')} <Icon as={MdOpenInNew} />\n                        </Link>\n                        {t(', open an issue and join us today!')}\n                    </Text>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        colorScheme=\"teal\"\n                        onClick={() => window.open('https://github.com/railmapgen/rmg', '_blank')}\n                    >\n                        {t('Visit GitHub')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useState } from 'react';\nimport { Flex, Heading, HStack, Icon, IconButton, Link, Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/react';\nimport { getEnvironment, getVersion } from '../../util/config';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { MdHelp, MdLocationCity, MdOpenInNew, MdTranslate } from 'react-icons/md';\nimport { LanguageCode, RmgStyle } from '../../constants/constants';\nimport { useDispatch } from 'react-redux';\nimport { setStyle } from '../../redux/param/action';\nimport * as ReactRouterDom from 'react-router-dom';\nimport HelpModal from '../modal/help-modal';\nimport { RmgEnvBadge } from '@railmapgen/rmg-components';\n\nexport default function WindowHeader() {\n    const { t, i18n } = useTranslation();\n    const dispatch = useDispatch();\n\n    const [isHelpModalOpen, setIsHelpModalOpen] = useState(false);\n\n    const environment = getEnvironment();\n\n    const handleChangeLanguage = async (language: LanguageCode) => {\n        const t = await i18n.changeLanguage(language);\n        document.documentElement.lang = language;\n        document.title = t('WindowHeader.heading');\n    };\n\n    return (\n        <Flex pl={2} pr={2} align=\"center\">\n            <Heading as=\"h4\" size=\"md\">\n                {t('WindowHeader.heading')}\n            </Heading>\n            <RmgEnvBadge\n                environment={environment}\n                version={getVersion()}\n                popoverHeader={\n                    <Trans i18nKey=\"WindowHeader.popoverHeader\" environment={environment}>\n                        You're on {{ environment }} environment!\n                    </Trans>\n                }\n                popoverBody={\n                    <Trans i18nKey=\"WindowHeader.popoverBody\">\n                        This is a testing environment where we don't guarantee the stability and compatibility. Please\n                        switch back to{' '}\n                        <Link\n                            color=\"teal.500\"\n                            href={'https://railmapgen.github.io' + window.location.pathname}\n                            isExternal={true}\n                        >\n                            Production environment <Icon as={MdOpenInNew} />\n                        </Link>\n                        .\n                    </Trans>\n                }\n            />\n\n            <HStack ml=\"auto\">\n                <Menu>\n                    <MenuButton as={IconButton} icon={<MdLocationCity />} variant=\"ghost\" size=\"sm\" />\n                    <MenuList>\n                        {Object.values(RmgStyle).map(style => (\n                            <ReactRouterDom.Link key={style} to={style}>\n                                <MenuItem onClick={() => dispatch(setStyle(style))}>\n                                    {t('WindowHeader.' + style)}\n                                </MenuItem>\n                            </ReactRouterDom.Link>\n                        ))}\n                    </MenuList>\n                </Menu>\n\n                <Menu>\n                    <MenuButton as={IconButton} icon={<MdTranslate />} variant=\"ghost\" size=\"sm\" />\n                    <MenuList>\n                        <MenuItem onClick={() => handleChangeLanguage(LanguageCode.English)}>English</MenuItem>\n                        <MenuItem onClick={() => handleChangeLanguage(LanguageCode.ChineseSimp)}>简体中文</MenuItem>\n                        <MenuItem onClick={() => handleChangeLanguage(LanguageCode.ChineseTrad)}>繁體中文</MenuItem>\n                    </MenuList>\n                </Menu>\n\n                <IconButton\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    aria-label=\"Help\"\n                    icon={<MdHelp />}\n                    onClick={() => setIsHelpModalOpen(true)}\n                />\n            </HStack>\n\n            <HelpModal isOpen={isHelpModalOpen} onClose={() => setIsHelpModalOpen(false)} />\n        </Flex>\n    );\n}\n","import { RootDispatch, RootState } from '../index';\nimport { BranchStyle, Facilities, Services, ShortDirection, StationInfo } from '../../constants/constants';\nimport { getYShareMTR } from '../../methods';\nimport { setStationsBulk } from './action';\nimport { nanoid } from 'nanoid';\n\nconst getStationTemplate = (id: string): StationInfo => ({\n    name: ['未命名 ' + id, 'Unnamed ' + id],\n    secondaryName: false,\n    num: '00',\n    services: [Services.local],\n    parents: [],\n    children: [],\n    branch: { left: [], right: [] },\n    transfer: {\n        info: [[]],\n        // type: 'none',\n        tick_direc: ShortDirection.right,\n        paid_area: true,\n        osi_names: [],\n    },\n    facility: Facilities.none,\n    loop_pivot: false,\n});\n\nexport const addStation = (where: `${number}` | 'new', from: string, to: string, position?: 'upper' | 'lower') => {\n    return (dispatch: RootDispatch, getState: () => RootState): string | false => {\n        const stationList = getState().param.stn_list;\n\n        // get new id\n        let newId = nanoid(6);\n        while (newId in stationList) {\n            newId = nanoid(6);\n        }\n        const newStationInfo = getStationTemplate(newId);\n\n        if (where !== 'new') {\n            const nextStationList = {\n                ...stationList,\n                [from]: {\n                    ...stationList[from],\n                    children: stationList[from].children.map(id => (id === to ? newId : id)),\n                    branch: {\n                        left: stationList[from].branch.left,\n                        right:\n                            stationList[from].branch.right.length && stationList[from].branch.right[1] === to\n                                ? ([stationList[from].branch.right[0], newId] as [BranchStyle, string])\n                                : stationList[from].branch.right,\n                    },\n                },\n                [to]: {\n                    ...stationList[to],\n                    parents: stationList[to].parents.map(id => (id === from ? newId : id)),\n                    branch: {\n                        left:\n                            stationList[to].branch.left.length && stationList[to].branch.left[1] === from\n                                ? ([stationList[to].branch.left[0], newId] as [BranchStyle, string])\n                                : stationList[to].branch.left,\n                        right: stationList[to].branch.right,\n                    },\n                },\n                [newId]: {\n                    ...newStationInfo,\n                    parents: [from],\n                    children: [to],\n                },\n            };\n            dispatch(setStationsBulk(nextStationList));\n            return newId;\n        } else {\n            if (!position) {\n                return false;\n            }\n\n            const nextStationList = {\n                ...stationList,\n                [from]: {\n                    ...stationList[from],\n                    children:\n                        position === 'upper'\n                            ? [newId, stationList[from].children[0]]\n                            : [stationList[from].children[0], newId],\n                    branch: {\n                        left: stationList[from].branch.left,\n                        right: [BranchStyle.through, newId] as [BranchStyle, string],\n                    },\n                },\n                [to]: {\n                    ...stationList[to],\n                    parents:\n                        position === 'upper'\n                            ? [newId, stationList[to].parents[0]]\n                            : [stationList[to].parents[0], newId],\n                    branch: {\n                        left: [BranchStyle.through, newId] as [BranchStyle, string],\n                        right: stationList[to].branch.right,\n                    },\n                },\n                [newId]: {\n                    ...newStationInfo,\n                    parents: [from],\n                    children: [to],\n                },\n            };\n            dispatch(setStationsBulk(nextStationList));\n            return newId;\n        }\n    };\n};\n\nexport const addStationToExistingBranch = (where: number, preposition: 'before' | 'after', pivot: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState): false | string => {\n        const branches = getState().helper.branches;\n        const branch = branches[where];\n\n        if (branch?.length) {\n            if (preposition === 'before') {\n                const from = branch[branch.indexOf(pivot) - 1];\n                return dispatch(addStation(where.toString() as `${number}`, from, pivot));\n            } else {\n                const to = branch[branch.indexOf(pivot) + 1];\n                return dispatch(addStation(where.toString() as `${number}`, pivot, to));\n            }\n        } else {\n            return false;\n        }\n    };\n};\n\nexport const getNewBranchAllowedEnds = () => {\n    return (dispatch: RootDispatch, getState: () => RootState): string[] => {\n        const stationList = getState().param.stn_list;\n        const branches = getState().helper.branches;\n\n        return branches[0].filter(id => {\n            const isTwoSidedBranchOut = stationList[id].parents.length + stationList[id].children.length === 4;\n            const isYShare0 = getYShareMTR(id, stationList) === 0;\n\n            return !isTwoSidedBranchOut && isYShare0;\n        });\n    };\n};\n\nexport const verifyNewBranchEnds = (from: string, to: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState): string => {\n        const stationList = getState().param.stn_list;\n        const branches = getState().helper.branches;\n\n        // should be included in main line\n        if (!branches[0].includes(from) || !branches[0].includes(to)) {\n            return 'Branch should end at main line';\n        }\n\n        // from should come before to\n        if (branches[0].indexOf(from) >= branches[0].indexOf(to)) {\n            return 'Not in correct ordering';\n        }\n\n        // should not from linestart to lineend\n        if (from === 'linestart' && to === 'lineend') {\n            return 'Should not be parallel to main line';\n        }\n\n        // should not be open jaw from the first station\n        if (from === 'linestart' && branches[0].indexOf(to) === 1) {\n            return 'Branch should not be open jaw from the first station';\n        }\n\n        // should not be open jaw from the last station\n        if (to === 'lineend' && branches[0].indexOf(from) === branches[0].length - 2) {\n            return 'Branch should not be open jaw from the last station';\n        }\n\n        // from has one child, to has one parent\n        if (stationList[from].children.length > 1 || stationList[to].parents.length > 1) {\n            return 'Branch already exist';\n        }\n\n        // end station won't be a middle station of any branch except main line\n        const isExistBranchIncludesEndStation = branches\n            .slice(1)\n            .some(branch => branch.slice(1, -1).includes(from) || branch.slice(1, -1).includes(to));\n        if (isExistBranchIncludesEndStation) {\n            return 'Cannot branch out from existing branch';\n        }\n\n        // stations between both ends should be stations which isn't branching out\n        const isStationsBetweenNotBranchOut = branches[0]\n            .slice(branches[0].indexOf(from) + 1, branches[0].indexOf(to))\n            .every(id => stationList[id].parents.length === 1 && stationList[id].children.length === 1);\n        if (!isStationsBetweenNotBranchOut) {\n            return 'One or more stations between both ends are branching out';\n        }\n\n        return '';\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n    Alert,\n    AlertIcon,\n    Box,\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { RmgStyle, SidePanelMode } from '../../constants/constants';\nimport { isColineBranch } from '../../redux/param/coline-action';\nimport { useTranslation } from 'react-i18next';\nimport { addStationToExistingBranch } from '../../redux/param/add-station-action';\nimport { setSelectedStation, setSidePanelMode } from '../../redux/app/app-slice';\n\ninterface AddStationModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function AddStationModal(props: AddStationModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedBranch = useRootSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useRootSelector(state => state.param);\n    const branches = useRootSelector(state => state.helper.branches);\n\n    const [where, setWhere] = useState(selectedBranch);\n    const [preposition, setPreposition] = useState<'before' | 'after'>('before');\n    const [pivot, setPivot] = useState('');\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        setWhere(selectedBranch);\n    }, [selectedBranch]);\n\n    useEffect(() => {\n        if (!isOpen) {\n            setError(false);\n        }\n    }, [isOpen]);\n\n    const selectableStations = branches[Number(where)]?.slice(1, -1) ?? [];\n\n    const getStationOptions = (stationIdList: string[]): Record<string, string> => {\n        return stationIdList.reduce(\n            (acc, cur) => ({\n                ...acc,\n                [cur]: stationList[cur]?.name.join(' - '),\n            }),\n            { '': t('AddStationModal.pleaseSelect') }\n        );\n    };\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('AddStationModal.where'),\n            value: where,\n            options: {\n                ...branches.reduce(\n                    (acc, cur, idx) => ({\n                        ...acc,\n                        [idx]:\n                            idx === 0\n                                ? t('AddStationModal.main')\n                                : style !== RmgStyle.SHMetro || !isColineBranch(cur, stationList)\n                                ? t('AddStationModal.branch') + ' ' + idx\n                                : t('AddStationModal.external') + ' ' + idx,\n                    }),\n                    {}\n                ),\n            },\n            onChange: value => handleSelectWhere(value as number),\n            minW: 'full',\n        },\n        {\n            type: 'select',\n            label: t('AddStationModal.preposition'),\n            value: preposition,\n            options: {\n                before: t('AddStationModal.before'),\n                after: t('AddStationModal.after'),\n            },\n            onChange: value => setPreposition(value as 'before' | 'after'),\n        },\n        {\n            type: 'select',\n            label: t('AddStationModal.pivot'),\n            value: pivot,\n            options: getStationOptions(selectableStations),\n            disabledOptions: [''],\n            onChange: value => setPivot(value as string),\n        },\n    ];\n\n    const handleSelectWhere = (value: number) => {\n        setWhere(value);\n        setPivot('');\n    };\n\n    const handleSubmit = () => {\n        const result = dispatch(addStationToExistingBranch(where, preposition, pivot));\n        if (result) {\n            onClose();\n\n            dispatch(setSelectedStation(result));\n            dispatch(setSidePanelMode(SidePanelMode.STATION));\n        } else {\n            console.log('false here');\n            setError(true);\n        }\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                {error && (\n                    <Alert status=\"error\" variant=\"solid\" size=\"xs\">\n                        <AlertIcon />\n                        {t('AddStationModal.error')}\n                    </Alert>\n                )}\n                <Box position=\"relative\">\n                    <ModalHeader>{t('AddStationModal.title')}</ModalHeader>\n                    <ModalCloseButton />\n                </Box>\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button colorScheme=\"teal\" onClick={handleSubmit} disabled={!pivot}>\n                        {t('AddStationModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { addStation, getNewBranchAllowedEnds, verifyNewBranchEnds } from '../../redux/param/add-station-action';\nimport { RmgStyle } from '../../constants/constants';\nimport { useTranslation } from 'react-i18next';\n\ninterface NewBranchModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function NewBranchModal(props: NewBranchModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const [where, setWhere] = useState<'new' | 'ext'>('new');\n    const [from, setFrom] = useState('');\n    const [to, setTo] = useState('');\n    const [position, setPosition] = useState<'upper' | 'lower'>('upper');\n\n    const [fromError, setFromError] = useState('');\n    const [toError, setToError] = useState('');\n\n    const { style, stn_list: stationList } = useRootSelector(state => state.param);\n\n    useEffect(() => {\n        // reset whenever modal is closed\n        if (!isOpen) {\n            setWhere('new');\n            setFrom('');\n            setTo('');\n        }\n    }, [isOpen]);\n\n    const getStationOptions = (stationIdList: string[]): Record<string, string> => {\n        return stationIdList.reduce(\n            (acc, cur) => ({\n                ...acc,\n                [cur]: stationList[cur]?.name.join(' - '),\n            }),\n            { '': t('NewBranchModal.pleaseSelect') }\n        );\n    };\n\n    const newBranchEndStationOptions = getStationOptions(dispatch(getNewBranchAllowedEnds()));\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('NewBranchModal.where'),\n            value: where,\n            options: {\n                new: t('NewBranchModal.new'),\n                ext: t('NewBranchModal.ext'),\n            },\n            disabledOptions: style === RmgStyle.SHMetro ? [] : ['ext'],\n            onChange: value => handleSelectWhere(value as 'new' | 'ext'),\n            minW: 'full',\n        },\n        {\n            type: 'select',\n            label: t('NewBranchModal.from'),\n            value: from,\n            options: newBranchEndStationOptions,\n            disabledOptions: [''],\n            onChange: value => handleSelectFrom(value as string),\n            isInvalid: Boolean(fromError),\n        },\n        {\n            type: 'select',\n            label: t('NewBranchModal.to'),\n            value: to,\n            options: newBranchEndStationOptions,\n            disabledOptions: [''],\n            onChange: value => handleSelectTo(value as string),\n            isInvalid: Boolean(toError),\n        },\n        {\n            type: 'select',\n            label: t('NewBranchModal.position'),\n            value: position,\n            options: {\n                upper: t('NewBranchModal.upper'),\n                lower: t('NewBranchModal.lower'),\n            },\n            onChange: value => setPosition(value as 'upper' | 'lower'),\n            minW: 'full',\n            hidden: where !== 'new' || style === RmgStyle.SHMetro,\n        },\n    ];\n\n    const handleSelectWhere = (value: 'new' | 'ext') => {\n        setWhere(value);\n        setFrom('');\n        setTo('');\n        setFromError('');\n        setToError('');\n    };\n\n    const handleSelectFrom = (value: string) => {\n        setFrom(value);\n        setFromError('');\n\n        if (value && to) {\n            setToError(dispatch(verifyNewBranchEnds(value, to)));\n        }\n    };\n\n    const handleSelectTo = (value: string) => {\n        setTo(value);\n        setToError('');\n\n        if (from && value) {\n            setFromError(dispatch(verifyNewBranchEnds(from, value)));\n        }\n    };\n\n    const handleSubmit = () => {\n        let result: false | string;\n        if (where === 'ext') {\n            // SHMetro specific - treat lower branch as external line\n            result = dispatch(addStation('new', from, to, 'lower'));\n        } else {\n            if (style === RmgStyle.SHMetro) {\n                result = dispatch(addStation('new', from, to, 'upper'));\n            } else {\n                result = dispatch(addStation('new', from, to, position));\n            }\n        }\n\n        if (result) {\n            onClose();\n        }\n    };\n\n    const isSubmitDisabled = Boolean(!from || !to || fromError || toError);\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('NewBranchModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        colorScheme=\"teal\"\n                        title={isSubmitDisabled ? fromError || toError : t('NewBranchModal.submit')}\n                        onClick={handleSubmit}\n                        disabled={isSubmitDisabled}\n                    >\n                        {t('NewBranchModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { lazy, Suspense, useState } from 'react';\nimport { Box, Button, HStack, IconButton, Progress, Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/react';\nimport { MdAdd } from 'react-icons/md';\nimport AddStationModal from '../modal/add-station-modal';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { RmgStyle, SidePanelMode } from '../../constants/constants';\nimport { isColineBranch } from '../../redux/param/coline-action';\nimport { setSelectedBranch, setSidePanelMode } from '../../redux/app/app-slice';\nimport { useTranslation } from 'react-i18next';\nimport NewBranchModal from '../modal/new-branch-modal';\nimport ErrorBoundary from '../../error-boundary';\n\nconst StationAgGrid = lazy(() => import(/* webpackChunkName: \"StationAgGrid\" */ './station-ag-grid'));\n\nexport default function GridTabs() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const [isAddStationModalOpen, setIsAddStationModalOpen] = useState(false);\n    const [isNewBranchModalOpen, setIsNewBranchModalOpen] = useState(false);\n\n    const selectedBranch = useRootSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useRootSelector(state => state.param);\n    const branches = useRootSelector(state => state.helper.branches);\n\n    const handleEditLineSection = () => {\n        dispatch(setSidePanelMode(SidePanelMode.BRANCH));\n    };\n\n    return (\n        <Box flex={1} overflow=\"hidden\">\n            <Tabs\n                height=\"100%\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                overflow=\"hidden\"\n                index={selectedBranch}\n                onChange={index => dispatch(setSelectedBranch(index))}\n            >\n                <TabList>\n                    {branches.map((branch, i) => {\n                        if (i === 0) {\n                            return <Tab key={i}>{t('GridTabs.main')}</Tab>;\n                        } else {\n                            if (style !== RmgStyle.SHMetro || !isColineBranch(branch, stationList)) {\n                                return <Tab key={i}>{t('GridTabs.branch') + ' ' + i}</Tab>;\n                            } else {\n                                return <Tab key={i}>{t('GridTabs.external') + ' ' + i}</Tab>;\n                            }\n                        }\n                    })}\n                    <IconButton\n                        size=\"sm\"\n                        variant=\"ghost\"\n                        alignSelf=\"center\"\n                        aria-label=\"New branch\"\n                        onClick={() => setIsNewBranchModalOpen(true)}\n                        icon={<MdAdd />}\n                    />\n\n                    <HStack marginLeft=\"auto\" marginRight={1}>\n                        <Button\n                            variant=\"outline\"\n                            size=\"xs\"\n                            leftIcon={<MdAdd />}\n                            onClick={() => setIsAddStationModalOpen(true)}\n                        >\n                            {t('GridTabs.addStation')}\n                        </Button>\n                        <Button size=\"xs\" colorScheme=\"teal\" onClick={handleEditLineSection}>\n                            {t('GridTabs.editLine')}\n                        </Button>\n                    </HStack>\n                </TabList>\n\n                <TabPanels flex={1} overflowY=\"auto\">\n                    {branches.map((_, i) => (\n                        <TabPanel key={i} padding={0} h=\"100%\">\n                            <Suspense fallback={<Progress isIndeterminate />}>\n                                <ErrorBoundary>\n                                    <StationAgGrid branchIndex={i} />\n                                </ErrorBoundary>\n                            </Suspense>\n                        </TabPanel>\n                    ))}\n                </TabPanels>\n            </Tabs>\n\n            <AddStationModal isOpen={isAddStationModalOpen} onClose={() => setIsAddStationModalOpen(false)} />\n            <NewBranchModal isOpen={isNewBranchModalOpen} onClose={() => setIsNewBranchModalOpen(false)} />\n        </Box>\n    );\n}\n","import React from 'react';\nimport { CircularProgress, Flex, Modal, ModalOverlay } from '@chakra-ui/react';\nimport { useRootSelector } from '../../redux';\n\nexport default function LoadingModal() {\n    const isLoading = useRootSelector(state => state.app.isLoading);\n\n    return (\n        <Modal isOpen={isLoading !== undefined} onClose={() => {}}>\n            <ModalOverlay />\n            <Flex\n                position=\"absolute\"\n                top={0}\n                left={0}\n                h=\"100%\"\n                w=\"100%\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                zIndex={9999}\n            >\n                <CircularProgress\n                    isIndeterminate={isLoading === -1}\n                    value={isLoading && isLoading >= 0 ? isLoading : undefined}\n                    color=\"teal\"\n                />\n            </Flex>\n        </Modal>\n    );\n}\n","import React from 'react';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { Alert, AlertIcon, AlertStatus, CloseButton, Link } from '@chakra-ui/react';\nimport { closeGlobalAlert } from '../../redux/app/app-slice';\n\nexport default function GlobalAlerts() {\n    const dispatch = useRootDispatch();\n\n    const globalAlerts = useRootSelector(state => state.app.globalAlerts);\n\n    return (\n        <>\n            {Object.entries(globalAlerts).map(([status, { message, url }]) => (\n                <Alert key={status} status={status as AlertStatus} variant=\"solid\" size=\"xs\" pl={3} pr={1} py={0}>\n                    <AlertIcon />\n                    {url ? (\n                        <Link href={url} target=\"_blank\">\n                            {message}\n                        </Link>\n                    ) : (\n                        message\n                    )}\n                    <CloseButton ml=\"auto\" onClick={() => dispatch(closeGlobalAlert(status as AlertStatus))} />\n                </Alert>\n            ))}\n        </>\n    );\n}\n","import React, { useEffect } from 'react';\nimport SvgRouter from '../svgs/svg-router';\nimport SidePanel from './side-panel/side-panel';\nimport PageHeader from './page-header/page-header';\nimport WindowHeader from './root/window-header';\nimport { Box, Flex } from '@chakra-ui/react';\nimport { useRootSelector } from '../redux';\nimport GridTabs from './ag-grid/grid-tabs';\nimport LoadingModal from './modal/loading-modal';\nimport GlobalAlerts from './root/global-alerts';\n\nexport default function AppRoot() {\n    const param = useRootSelector(state => state.param);\n    const paramString = JSON.stringify(param);\n\n    useEffect(() => {\n        window.rmgStorage.writeFile('rmgParam', paramString).then();\n    }, [paramString]);\n\n    return (\n        <Flex direction=\"column\" height=\"100%\" overflow=\"hidden\">\n            <LoadingModal />\n            <WindowHeader />\n            <Flex direction=\"column\" flex={1} overflow=\"hidden\">\n                <PageHeader />\n                <GlobalAlerts />\n                <Flex flex={1} overflow=\"hidden\" position=\"relative\">\n                    <Flex as=\"section\" direction=\"column\" flex={1} ml={1} mr={1} overflow=\"hidden\">\n                        <Box>\n                            <SvgRouter />\n                        </Box>\n                        <GridTabs />\n                    </Flex>\n\n                    <SidePanel />\n                </Flex>\n            </Flex>\n\n            <canvas style={{ display: 'none' }} />\n        </Flex>\n    );\n}\n","import { RootDispatch, RootState } from '../index';\nimport { ColineInfo, InterchangeInfo, StationDict } from '../../constants/constants';\nimport { setColineBulk } from './action';\nimport { nanoid } from 'nanoid';\n\n// Cartesian product of multiple arrays in JavaScript\n// https://stackoverflow.com/questions/12303989/cartesian-product-of-multiple-arrays-in-javascript\n// Equivalent typescript version\n// https://gist.github.com/ssippe/1f92625532eef28be6974f898efb23ef?permalink_comment_id=3364149#gistcomment-3364149\nfunction cartesian<T>(...allEntries: T[][]): T[][] {\n    return allEntries.reduce<T[][]>(\n        (results, entries) =>\n            results\n                .map(result => entries.map(entry => result.concat([entry])))\n                .reduce((subResults, result) => subResults.concat(result), []),\n        [[]]\n    );\n}\n\n/**\n * Coline branch is also known as the lower branch.\n */\nexport const isColineBranch = (branch: string[], stnList: StationDict) =>\n    stnList[branch[0]].children.indexOf(branch[1]) ? true : false;\n\nexport const getPossibleStnIdsFromMainLine = (branches: string[][], stnList: StationDict) => [\n    branches[0][1], // skip linestart\n    branches[0][branches[0].length - 2], // skip lineend\n    ...branches[0].filter(stnId =>\n        // for every station in the main line, find if it branches out at this station\n        branches\n            .slice(1)\n            .filter(branch => isColineBranch(branch, stnList))\n            // branches after the first/main line may not have linestart or lineend\n            .map(branch => branch.filter(stnId => !['linestart', 'lineend'].includes(stnId)))\n            // only stations at both ends need to be taken into consideration\n            .map(branch => [branch[0], branch[branch.length - 1]])\n            .flat()\n            .includes(stnId)\n    ),\n];\n\nexport const getPossibleStnIdsFromBranchLine = (branches: string[][], stnList: StationDict) =>\n    branches\n        .slice(1)\n        .filter(branch => isColineBranch(branch, stnList))\n        .map(branch => branch.filter(stnId => !['linestart', 'lineend'].includes(stnId)))\n        .map(branch => [branch[0], branch[branch.length - 1]]);\n\nexport const getPossibleCombinations = (branchIndex: number) => {\n    return (dispatch: RootDispatch, getState: () => RootState): [string, string][] => {\n        const branches = getState().helper.branches;\n\n        if (branchIndex === 0) {\n            const stnList = getState().param.stn_list;\n            const possibleStnIdsFromMainLine = getPossibleStnIdsFromMainLine(branches, stnList);\n            return cartesian(possibleStnIdsFromMainLine, possibleStnIdsFromMainLine).filter(\n                val => val[0] !== val[1]\n            ) as [string, string][];\n        } else {\n            const branch = branches[branchIndex];\n            if (branch) {\n                const b = branch.filter(id => !['linestart', 'lineend'].includes(id));\n                return [[b[0], b.slice(-1)[0]]];\n            } else {\n                return [];\n            }\n        }\n    };\n};\n\n/**\n * Calculate row span for displaying track sharing column in StationAgGrid\n * @param stationId id of station that begins to span rows\n * @param branchIndex index of branch that the grid is displaying\n */\nexport const getRowSpanForColine = (stationId: string, branchIndex: number) => {\n    return (dispatch: RootDispatch, getState: () => RootState): [number, string | undefined] => {\n        const coline = getState().param.coline;\n        const branch = getState().helper.branches[branchIndex];\n\n        for (let [clId, cl] of Object.entries(coline)) {\n            if (cl.from === stationId && branch.includes(cl.to)) {\n                const thisIndex = branch.indexOf(stationId);\n                const thatIndex = branch.indexOf(cl.to);\n                if (thatIndex > thisIndex) {\n                    return [thatIndex - thisIndex + 1, clId];\n                }\n            } else if (cl.to === stationId && branch.includes(cl.to)) {\n                const thisIndex = branch.indexOf(stationId);\n                const thatIndex = branch.indexOf(cl.from);\n                if (thatIndex > thisIndex) {\n                    return [thatIndex - thisIndex + 1, clId];\n                }\n            }\n        }\n        return [0, undefined];\n    };\n};\n\n/**\n * Verify station selections from table are consecutive, which is the prerequisite for track sharing.\n * @param selectedIds IDs of the selected stations (get by gridApi)\n * @param branchIndex\n */\nexport const verifyAreSelectionsConsecutive = (selectedIds: string[], branchIndex: number) => {\n    return (dispatch: RootDispatch, getState: () => RootState): boolean => {\n        const branch = getState().helper.branches[branchIndex];\n\n        const from = selectedIds[0];\n        const to = selectedIds.slice(-1)[0];\n\n        const areConsecutiveSelections =\n            branch.slice(branch.indexOf(from), branch.indexOf(to) + 1).toString() === selectedIds.toString();\n        if (!areConsecutiveSelections) {\n            console.log('verifyAreSelectionsConsecutive():: Selections are NOT consecutive');\n            return false;\n        } else {\n            return true;\n        }\n    };\n};\n\n/**\n *  Checks the validity of from and to. Currently we accept coline if it:\n 1. Start from either ends of the mainline or branch stations and\n terminate at either ends of the mainline or branch stations.\n 2. Start from the one end of the branch line and\n terminate at the other end of the same branch line.\n\n * @param from station id from\n * @param to station id to\n */\nexport const checkColineValidity = (from: string, to: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const stnList = getState().param.stn_list;\n        const branches = getState().helper.branches;\n\n        if (from === to) {\n            throw new Error('addColine():: failed for same stnId');\n        }\n        // calculate if coline is in the main line\n        const colineInMainLine = getPossibleStnIdsFromMainLine(branches, stnList).filter(stnId =>\n            [from, to].includes(stnId)\n        );\n        // calculate if coline is in one branch line\n        const colineInBranches = getPossibleStnIdsFromBranchLine(branches, stnList).filter(terminals =>\n            [from, to].every(stnId => terminals.includes(stnId))\n        );\n        // see if coline is in the main line\n        if (colineInMainLine.length === 2 && colineInBranches.length > 0) {\n            throw new Error(`addColine():: main check failed for ${from}, ${to}`);\n        }\n        // see if coline is in one branch line\n        if (colineInMainLine.length !== 2 && colineInBranches.length !== 1) {\n            throw new Error(`addColine():: branch check failed for ${from}, ${to}`);\n        }\n    };\n};\n\nexport const findAllColinesInBranch = (branchIndex: number) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const coline = getState().param.coline;\n        const branches = getState().helper.branches;\n        const branch = branches[branchIndex];\n\n        if (branch) {\n            return Object.entries(coline).reduce<Record<string, ColineInfo>>((acc, cur) => {\n                if (branch.includes(cur[1].from) && branch.includes(cur[1].to)) {\n                    return { ...acc, [cur[0]]: cur[1] };\n                } else {\n                    return { ...acc };\n                }\n            }, {});\n        } else {\n            return {};\n        }\n    };\n};\n\n/**\n * Remove related coline when the deleteStn is the coline `from` or `to` station.\n */\nexport const removeInvalidColineOnRemoveStation = (deleteStnId: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (Object.keys(colineInfo).length === 0) return;\n\n        const nextColine = Object.entries(colineInfo).reduce<Record<string, ColineInfo>>((acc, cur) => {\n            if (cur[1].from !== deleteStnId && cur[1].to !== deleteStnId) {\n                return { ...acc, [cur[0]]: cur[1] };\n            } else {\n                return { ...acc };\n            }\n        }, {});\n\n        dispatch(setColineBulk(nextColine));\n    };\n};\n\nexport const addColine = (from: string, to: string, colors: InterchangeInfo[], display: boolean = true) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        dispatch(checkColineValidity(from, to));\n        dispatch(\n            setColineBulk({\n                ...colineInfo,\n                [nanoid(4)]: { from: from, to: to, colors: colors, display: display },\n            })\n        );\n    };\n};\n\nexport const updateColine = (colineId: string, from: string, to: string, display = true) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo) {\n            dispatch(checkColineValidity(from, to));\n\n            const newColineInfo = {\n                ...colineInfo,\n                [colineId]: { ...colineInfo[colineId], from, to, display },\n            };\n\n            dispatch(setColineBulk(newColineInfo));\n        }\n    };\n};\n\nexport const removeColine = (colineId: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo) {\n            const { [colineId]: _, ...nextColine } = colineInfo;\n            dispatch(setColineBulk(nextColine));\n        }\n    };\n};\n\n/**\n *\n * @param colineId\n * @param interchangeInfo\n */\nexport const addColineColor = (colineId: string, interchangeInfo: InterchangeInfo) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        colineInfo[colineId].colors = [...colineInfo[colineId].colors, interchangeInfo];\n\n        dispatch(setColineBulk(colineInfo));\n    };\n};\n\nexport const removeColineColor = (colineId: string, interchangeIndex: number) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo && colineInfo[colineId].colors.length > interchangeIndex) {\n            const nextColours = colineInfo[colineId].colors.filter((_, colineIdx) => colineIdx !== interchangeIndex);\n            if (nextColours.length === 0) {\n                // remove entire coline\n                const { [colineId]: _, ...nextColine } = colineInfo;\n                dispatch(setColineBulk(nextColine));\n            } else {\n                // update coline colour list\n                const nextColine = {\n                    ...colineInfo,\n                    [colineId]: { ...colineInfo[colineId], colors: nextColours },\n                };\n                dispatch(setColineBulk(nextColine));\n            }\n        }\n    };\n};\n\nexport const updateColineColor = (colineId: string, interchangeIndex: number, interchangeInfo: InterchangeInfo) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo && colineInfo[colineId].colors.length > interchangeIndex) {\n            colineInfo[colineId].colors = colineInfo[colineId].colors.map((int, colineIdx) =>\n                colineIdx === interchangeIndex\n                    ? ([0, 1, 2, 3, 4, 5].map(i =>\n                          interchangeInfo[i] === undefined ? int[i] : interchangeInfo[i]\n                      ) as InterchangeInfo)\n                    : int\n            );\n\n            dispatch(setColineBulk(colineInfo));\n        }\n    };\n};\n\n// DEBUG PROXY\n// declare const window: any;\n// window.addColine = addColine;\n// window.updateColine = updateColine;\n// window.removeColine = removeColine;\n// window.rmgStore.dispatch(window.removeColine(2))\n// let t = ['shanghai', 'sh4', '#5F259F', '#fff', '4号线', 'Line 4']\n// window.rmgStore.dispatch(window.addColine('s9tt', 'l1mz', [t]))\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","all","slice","SvgWrapper","props","type","style","svgWidth","svgHeight","canvasScale","theme","children","useEffect","document","getElementById","href","process","xmlns","xmlnsXlink","height","viewBox","colorInterpolationFilters","fill","width","Suspense","fallback","strokeWidth","stroke","flexDirection","overflowX","content","margin","flex","border","SvgRouter","location","useLocation","navigate","useNavigate","dispatch","useDispatch","useRootSelector","state","app","canvasToShow","param","svgWidths","svg_height","rmgStyle","pathname","nextStyle","split","values","RmgStyle","includes","setStyle","filteredCanvas","canvasList","filter","canvas","sx","minWidth","overflowY","RunInGZMTR","lazy","RailMapGZMTR","DestinationMTR","RailMapMTR","DestinationSHMetro","RunInSHMetro","RailMapSHMetro","IndoorSHMetro","CanvasType","InfoSection","useTranslation","useRootDispatch","selectedStation","console","log","stn_list","num","name","secondaryName","fields","label","value","placeholder","onChange","updateStationNum","hidden","updateStationName","updateStationSecondaryName","p","as","size","minW","FlagSvgEmoji","countryCode","svgFilename","useState","undefined","src","setSrc","default","catch","err","error","message","alt","h","mr","CityPicker","defaultValueId","i18n","currentItem","cityList","item","displayValue","languages","lng","find","data","sort","a","b","CityCode","localeCompare","displayHandler","isCensorTWFlag","country","LanguageCode","isWindowsClient","navigator","platform","flagSvg","countryList","flagEmoji","predicate","input","some","defaultValue","ColourPicker","city","paletteList","cityCode","setPaletteList","usePalette","palette","displayName","fg","MonoColour","bg","colour","ColourModal","isOpen","onClose","defaultTheme","onUpdate","setCityCode","lineCode","setLineCode","bgColour","setBgColour","fgColour","setFgColour","toString","paletteFields","component","line","customFields","variant","options","isSubmitEnabled","isFitted","colorScheme","w","defaultIndex","fontSize","marginRight","color","isExternal","MdOpenInNew","onClick","disabled","ColourUtil","hex","parseInt","alpha","this","hexToRgb","join","hex1","hex2","reduce","acc","cur","idx","Math","pow","ThemeButton","mt","_hover","fade","icon","InterchangeCard","interchangeList","onAdd","onDelete","isModalOpen","setIsModalOpen","selectedIndex","setSelectedIndex","stationList","usedNameList","zhAcc","enAcc","Set","concat","transfer","info","flat","it","interchangeFields","i","val","optionList","direction","length","spacing","align","noLabel","RmgButtonGroup","selections","multiSelect","setValue","isAttached","selection","isSelected","role","isDisabled","prevValue","nextValue","v","handleToggle","InterchangeSection","getOSINameFields","setIndex","osi_names","updateStationOsiName","isChecked","paid_area","checked","updateStationPaidArea","oneLine","handleAdd","addInterchange","handleDelete","j","removeInterchange","handleUpdate","updateInterchange","ShortDirection","tick_direc","updateStationTickDirection","infoList","Fragment","alignSelf","leftIcon","MoreSection","services","facility","loop_pivot","serviceSelections","Services","service","mtrFacilityOptions","Facilities","shmetroFacilityOptions","updateStationServices","updateStationFacility","updateStationLoopPivot","BranchSection","parents","branch","branchOptions","BranchStyle","getFirstStationOptions","Direction","positionOptions","upper","lower","getFields","updateStationBranchType","updateStationBranchFirstStation","indexOf","flipStationBranchPosition","StationSidePanel","LayoutSection","y_pc","branch_spacing","padding","direction_gz_x","direction_gz_y","loop","canvasConfig","setSvgWidth","Number","setSvgHeight","min","max","setYPercentage","setBranchSpacing","setPaddingPercentage","setDirectionIndicatorX","setDirectionIndicatorY","DesignSection","lineName","line_name","lineNum","line_num","platformNum","platform_num","psdNum","psd_num","namePosMTR","customiseMTRDest","info_panel_type","directionSelections","panelTypeGZMTROptions","PanelTypeGZMTR","panelTypeSHMetroOptions","PanelTypeShmetro","setLineName","setLineNum","setPlatform","setPsdNum","setPanelType","nextDirection","setDirection","staggerNameSelections","mtrSpecifiedFields","isStagger","staggerStationNames","flipStationNames","isLegacy","toggleLineNameBeforeDestination","terminal","customiseDestinationName","nextTheme","setTheme","LoopSection","branches","helper","loop_info","bank","left_and_right_factor","bottom_factor","branch_stn_ids","stn_id","_","abs","left_and_right_factor_max","floor","setLoop","setLoopBank","setLoopLeftAndRightFactor","setLoopBottomFactor","GZMTRNoteCard","note","fields1","fields2","GZMTRNoteSection","notesGZMTR","updateNote","removeNote","addNote","StyleSidePanel","getYShareMTR","stnId","stnList","stnPred","RemoveConfirmModal","cancelRef","onConfirm","leastDestructiveRef","fontWeight","ref","ml","StationSidePanelFooter","isRemoveModalOpen","setIsRemoveModalOpen","useRef","setCurrentStation","stationId","getState","setSidePanelMode","SidePanelMode","setSelectedStation","removeInvalidColineOnRemoveStation","newStnList","JSON","parse","stringify","forEach","parId","childId","right","left","splice","setStationsBulk","removeStation","setGlobalAlert","status","ColineCard","colineInfo","routeOptions","onUpdateRoute","onUpdateColourInfo","from","to","colors","ColineSection","selectedBranch","colineInfoList","findAllColinesInBranch","possibleCombinations","getPossibleCombinations","entries","colineId","route","updateColine","colourInfo","updateColineColor","colourIndex","removeColineColor","handleDeleteColour","addColine","AutoNumModal","where","setWhere","setFrom","maxLength","setMaxLength","setSort","isColineBranch","validator","isNaN","debouncedDelay","asc","desc","isSubmitDisabled","autoNumbering","ActionSection","isAutoNumModalOpen","setIsAutoNumModalOpen","wrap","flexShrink","flexBasis","marginTop","reverseStations","BranchSidePanel","SidePanel","sidePanelMode","mode","STATION","header","text","body","footer","STYLE","BRANCH","CLOSE","downloadAs","filename","blob","Blob","downloadBlobAs","url","window","URL","createObjectURL","createElement","download","appendChild","click","removeChild","revokeObjectURL","readFileAsText","file","reader","FileReader","onloadend","result","readAsText","cloneSvgCanvas","isTransparent","isShowBorder","scale","key","querySelector","getPropertyValue","match","thisSVGHeight","elem","cloneNode","setAttribute","setProperty","tag","querySelectorAll","l","sheet","cssRules","rule","cssText","txt","s","textContent","prepend","getBase64FontFace","uris","alert","readBlobAsDataURL","readAsDataURL","svgEl","uniqueCharacters","Array","el","innerHTML","replace","fonts","load","fontFaceList","styleSheet","distinctCssRules","font","matchedRule","cssStyle","fontFamily","family","unicodeRange","ruleStyle","matchedStyle","cssRule","fetch","getAbsoluteUrl","fontResp","fontDataUri","ruleStyleSrc","userAgent","test","svgW","baseVal","svgH","devicePixelRatio","ctx","getContext","clearRect","elStyle","getComputedStyle","dominantBaseline","textAnchor","reject","img","Image","onload","drawImage","toBlob","onerror","btoa","unescape","encodeURIComponent","outerHTML","DownloadModal","canvasToDownload","setCanvasToDownload","setIsTransparent","setIsShowBorder","setScale","format","setFormat","currentStationId","current_stn_idx","canvasOptions","scaleOptions","formatOptions","png","svg","disabledOptions","handleDownload","option","setLoadingProgress","stationIdListToDownload","zip","JSZip","index","waitForMs","replaceAll","setTimeout","removeAttribute","base64","generateAsync","zipData","stopLoading","DownloadActions","isDownloadModalOpen","setIsDownloadModalOpen","Button","rightIcon","Date","valueOf","UploadConfirmModal","uploadedParam","onOpenParam","TemplateModal","handleSelect","company","startLoading","isLazy","orientation","maxW","companyConfig","translateText","templateList","c","templates","Flex","py","px","template","justifyContent","overflow","OpenActions","isUploadModalOpen","setIsUploadModalOpen","isTemplateModalOpen","setIsTemplateModalOpen","setUploadedParam","uploadModalCloseRef","fileInputRef","handleUpload","event","target","files","paramStr","updatedParam","updateParam","handleOpenParam","rmgStorage","writeFile","AllCanvas","selectCanvas","reRenderApp","openFromNewParam","initParam","language","accept","current","HeaderActions","PageHeader","canvasSelections","step","zoomToScale","pl","pr","Environments","CONTRIBUTORS_LIST","HelpModal","scrollBehavior","mb","my","open","cursor","contributor","WindowHeader","isHelpModalOpen","setIsHelpModalOpen","environment","hostname","DEV","UAT","PRD","handleChangeLanguage","changeLanguage","documentElement","lang","title","version","packageJson","popoverHeader","Trans","i18nKey","popoverBody","IconButton","addStation","position","newId","nanoid","newStationInfo","nextStationList","verifyNewBranchEnds","every","AddStationModal","preposition","setPreposition","pivot","setPivot","setError","stationIdList","selectableStations","handleSelectWhere","before","after","addStationToExistingBranch","NewBranchModal","setTo","setPosition","fromError","setFromError","toError","setToError","newBranchEndStationOptions","isTwoSidedBranchOut","isYShare0","new","ext","handleSelectFrom","isInvalid","Boolean","handleSelectTo","StationAgGrid","GridTabs","isAddStationModalOpen","setIsAddStationModalOpen","isNewBranchModalOpen","setIsNewBranchModalOpen","display","setSelectedBranch","marginLeft","isIndeterminate","branchIndex","LoadingModal","isLoading","top","alignItems","zIndex","GlobalAlerts","globalAlerts","closeGlobalAlert","AppRoot","paramString","getPossibleStnIdsFromMainLine","possibleStnIdsFromMainLine","allEntries","results","entry","subResults","cartesian","getRowSpanForColine","coline","clId","cl","thisIndex","thatIndex","checkColineValidity","colineInMainLine","colineInBranches","getPossibleStnIdsFromBranchLine","terminals","deleteStnId","nextColine","setColineBulk","newColineInfo","interchangeIndex","nextColours","colineIdx","interchangeInfo","int"],"sourceRoot":""}