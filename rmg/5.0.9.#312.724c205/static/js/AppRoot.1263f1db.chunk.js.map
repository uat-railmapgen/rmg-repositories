{"version":3,"file":"static/js/AppRoot.1263f1db.chunk.js","mappings":"mFAAA,IAAIA,EAAM,CACT,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,GACA,IAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,IACA,KAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,kDAAmD,CAClD,KACA,MAED,kDAAmD,CAClD,IACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,OAGnCX,EAAoBa,KAAO,WAAa,OAAOC,OAAOD,KAAKd,IAC3DC,EAAoBW,GAAK,KACzBI,EAAOC,QAAUhB,G,qBC9JjB,IAAID,EAAM,CACT,cAAe,CACd,KACA,MAED,YAAa,CACZ,KACA,MAED,iBAAkB,CACjB,KACA,MAED,eAAgB,CACf,KACA,MAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,IACA,MAED,eAAgB,CACf,KACA,MAED,iBAAkB,CACjB,IACA,MAED,aAAc,CACb,KACA,MAED,cAAe,CACd,KACA,MAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,KAED,iBAAkB,CACjB,IACA,MAED,iBAAkB,CACjB,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,eAAgB,CACf,KACA,MAED,kBAAmB,CAClB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,gBAAiB,CAChB,KACA,IAED,aAAc,CACb,IACA,MAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,aAAc,CACb,KACA,MAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,KACA,MAED,mBAAoB,CACnB,IACA,MAED,eAAgB,CACf,KACA,MAED,YAAa,CACZ,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,aAAc,CACb,KACA,KAED,cAAe,CACd,KACA,MAED,aAAc,CACb,KACA,MAED,cAAe,CACd,KACA,MAED,eAAgB,CACf,KACA,MAED,iBAAkB,CACjB,KACA,MAED,aAAc,CACb,KACA,MAED,YAAa,CACZ,KACA,MAED,aAAc,CACb,KACA,MAED,aAAc,CACb,KACA,MAED,eAAgB,CACf,KACA,MAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,CAChB,KACA,KAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,KACA,MAED,gBAAiB,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BAAsB,CACrB,IACA,MAED,kBAAmB,CAClB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,IACA,MAED,oBAAqB,CACpB,IACA,MAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,SAAU,CACT,MAED,YAAa,CACZ,MAED,eAAgB,CACf,KACA,MAED,kBAAmB,CAClB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,eAAgB,CACf,KACA,MAED,kBAAmB,CAClB,KACA,MAED,eAAgB,CACf,KACA,MAED,kBAAmB,CAClB,KACA,MAED,eAAgB,CACf,KACA,MAED,kBAAmB,CAClB,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,eAAgB,CACf,KACA,MAED,kBAAmB,CAClB,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,eAAgB,CACf,KACA,MAED,kBAAmB,CAClB,KACA,MAED,eAAgB,CACf,KACA,MAED,kBAAmB,CAClB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,sBAAuB,CACtB,KACA,IAED,yBAA0B,CACzB,KACA,IAED,yBAA0B,CACzB,KACA,MAED,4BAA6B,CAC5B,KACA,MAED,wBAAyB,CACxB,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,4BAA6B,CAC5B,KACA,MAED,+BAAgC,CAC/B,KACA,MAED,6BAA8B,CAC7B,IACA,MAED,gCAAiC,CAChC,IACA,MAED,wBAAyB,CACxB,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,cAAe,CACd,KACA,MAED,iBAAkB,CACjB,KACA,MAED,YAAa,CACZ,KACA,MAED,eAAgB,CACf,KACA,MAED,YAAa,CACZ,GACA,MAED,eAAgB,CACf,GACA,MAED,YAAa,CACZ,KACA,MAED,eAAgB,CACf,KACA,MAED,YAAa,CACZ,KACA,MAED,eAAgB,CACf,KACA,MAED,YAAa,CACZ,KACA,MAED,eAAgB,CACf,KACA,MAED,aAAc,CACb,KACA,MAED,gBAAiB,CAChB,KACA,MAED,YAAa,CACZ,KACA,KAED,eAAgB,CACf,KACA,KAED,YAAa,CACZ,KACA,MAED,eAAgB,CACf,KACA,MAED,YAAa,CACZ,IACA,MAED,eAAgB,CACf,IACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,0BAA2B,CAC1B,KACA,MAED,uBAAwB,CACvB,KACA,MAED,0BAA2B,CAC1B,KACA,MAED,uBAAwB,CACvB,KACA,MAED,0BAA2B,CAC1B,KACA,MAED,uBAAwB,CACvB,IACA,MAED,0BAA2B,CAC1B,IACA,MAED,uBAAwB,CACvB,KACA,MAED,0BAA2B,CAC1B,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,IACA,MAED,oBAAqB,CACpB,IACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,IACA,MAED,mBAAoB,CACnB,IACA,MAED,gBAAiB,CAChB,IACA,MAED,mBAAoB,CACnB,IACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,MAED,gBAAiB,CAChB,KACA,MAED,mBAAoB,CACnB,KACA,OAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAON,QAAQshB,IAAIhhB,EAAIwD,MAAM,GAAGnE,IAAIG,EAAoBK,IAAID,MAAK,WAChE,OAAOJ,EAAoBS,MAG7BX,EAAoBa,KAAO,WAAa,OAAOC,OAAOD,KAAKd,IAC3DC,EAAoBW,GAAK,KACzBI,EAAOC,QAAUhB","sources":["../node_modules/@railmapgen/rmg-palette-resources/flags|lazy|/^/.//.*$/|groupOptions: {}|namespace object","../node_modules/@railmapgen/rmg-palette-resources/palettes|lazy|/^/.//.*/.js$/|chunkName: palettes|groupOptions: {}|namespace object","svgs/svg-wrapper.tsx","svgs/svg-router.tsx","components/side-panel/station-side-panel/info-section.tsx","components/modal/colour-modal/flag-svg-emoji.tsx","components/modal/colour-modal/city-picker.tsx","components/modal/colour-modal/colour-picker.tsx","components/modal/colour-modal/colour-modal.tsx","theme/colour-util.ts","components/side-panel/theme-button.tsx","components/side-panel/station-side-panel/interchange-card.tsx","components/side-panel/station-side-panel/interchange-section.tsx","components/common/rmg-button-group.tsx","components/side-panel/station-side-panel/more-section.tsx","components/side-panel/station-side-panel/branch-section.tsx","components/side-panel/station-side-panel/station-side-panel.tsx","components/side-panel/style-side-panel/layout-section.tsx","components/side-panel/style-side-panel/design-section.tsx","components/side-panel/style-side-panel/loop-section.tsx","components/side-panel/style-side-panel/gzmtr-note-card.tsx","components/side-panel/style-side-panel/gzmtr-note-section.tsx","components/side-panel/style-side-panel/style-side-panel.tsx","methods.ts","components/modal/remove-confirm-modal.tsx","components/side-panel/station-side-panel/station-side-panel-footer.tsx","redux/param/remove-station-action.ts","components/side-panel/branch-side-panel/coline-card.tsx","components/side-panel/branch-side-panel/coline-section.tsx","components/modal/auto-num-modal.tsx","components/side-panel/branch-side-panel/action-section.tsx","components/side-panel/branch-side-panel/branch-side-panel.tsx","components/side-panel/side-panel.tsx","util/utils.ts","util/export-utils.ts","components/modal/download-modal.tsx","components/page-header/download-actions.tsx","constants/company-config.ts","components/modal/upload-confirm-modal.tsx","components/modal/template-modal.tsx","components/page-header/open-actions.tsx","redux/param/open-new-action.ts","components/page-header/header-actions.tsx","components/page-header/page-header.tsx","util/config.ts","components/modal/help-modal.tsx","components/window-header.tsx","redux/param/add-station-action.ts","components/modal/add-station-modal.tsx","components/modal/new-branch-modal.tsx","components/ag-grid/grid-tabs.tsx","components/modal/loading-modal.tsx","components/app-root.tsx","constants/templates/data.ts","redux/param/coline-action.ts","constants/templates|lazy|/^/.//.*$/|chunkName: templates|groupOptions: {}|namespace object"],"sourcesContent":["var map = {\n\t\"./1F1E6-1F1F9.svg\": [\n\t\t9121,\n\t\t9121\n\t],\n\t\"./1F1E6-1F1FF.svg\": [\n\t\t9427,\n\t\t9427\n\t],\n\t\"./1F1E7-1F1F7.svg\": [\n\t\t7304,\n\t\t7304\n\t],\n\t\"./1F1E8-1F1E6.svg\": [\n\t\t56,\n\t\t56\n\t],\n\t\"./1F1E8-1F1F1.svg\": [\n\t\t3450,\n\t\t3450\n\t],\n\t\"./1F1E8-1F1F3.svg\": [\n\t\t2537,\n\t\t2537\n\t],\n\t\"./1F1E9-1F1EA.svg\": [\n\t\t6311,\n\t\t6311\n\t],\n\t\"./1F1EA-1F1EC.svg\": [\n\t\t7365,\n\t\t7365\n\t],\n\t\"./1F1EA-1F1F8.svg\": [\n\t\t8721,\n\t\t8721\n\t],\n\t\"./1F1EB-1F1F7.svg\": [\n\t\t8514,\n\t\t8514\n\t],\n\t\"./1F1EC-1F1F7.svg\": [\n\t\t9515,\n\t\t9515\n\t],\n\t\"./1F1ED-1F1F0.svg\": [\n\t\t2248,\n\t\t2248\n\t],\n\t\"./1F1ED-1F1FA.svg\": [\n\t\t268,\n\t\t268\n\t],\n\t\"./1F1EE-1F1F3.svg\": [\n\t\t6236,\n\t\t6236\n\t],\n\t\"./1F1EE-1F1F7.svg\": [\n\t\t2617,\n\t\t2617\n\t],\n\t\"./1F1EE-1F1F9.svg\": [\n\t\t3541,\n\t\t3541\n\t],\n\t\"./1F1EF-1F1F5.svg\": [\n\t\t2741,\n\t\t2741\n\t],\n\t\"./1F1F0-1F1F7.svg\": [\n\t\t2255,\n\t\t2255\n\t],\n\t\"./1F1F2-1F1F4.svg\": [\n\t\t6435,\n\t\t6435\n\t],\n\t\"./1F1F2-1F1FD.svg\": [\n\t\t3086,\n\t\t3086\n\t],\n\t\"./1F1F2-1F1FE.svg\": [\n\t\t6082,\n\t\t6082\n\t],\n\t\"./1F1F3-1F1F4.svg\": [\n\t\t6095,\n\t\t6095\n\t],\n\t\"./1F1F5-1F1EA.svg\": [\n\t\t2955,\n\t\t2955\n\t],\n\t\"./1F1F5-1F1F9.svg\": [\n\t\t7791,\n\t\t7791\n\t],\n\t\"./1F1F7-1F1F4.svg\": [\n\t\t7224,\n\t\t7224\n\t],\n\t\"./1F1F7-1F1FA.svg\": [\n\t\t6031,\n\t\t6031\n\t],\n\t\"./1F1F8-1F1EA.svg\": [\n\t\t1550,\n\t\t1550\n\t],\n\t\"./1F1F8-1F1EC.svg\": [\n\t\t1229,\n\t\t1229\n\t],\n\t\"./1F1F9-1F1F7.svg\": [\n\t\t2237,\n\t\t2237\n\t],\n\t\"./1F1F9-1F1FC.svg\": [\n\t\t4252,\n\t\t4252\n\t],\n\t\"./1F1FA-1F1F3.svg\": [\n\t\t3353,\n\t\t3353\n\t],\n\t\"./1F1FA-1F1F8.svg\": [\n\t\t5439,\n\t\t5439\n\t],\n\t\"./1F1FB-1F1F3.svg\": [\n\t\t3886,\n\t\t3886\n\t],\n\t\"./1F3F4-E0067-E0062-E0065-E006E-E0067-E007F.svg\": [\n\t\t6129,\n\t\t6129\n\t],\n\t\"./1F3F4-E0067-E0062-E0073-E0063-E0074-E007F.svg\": [\n\t\t138,\n\t\t138\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 4018;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./athens.js\": [\n\t\t6128,\n\t\t6869\n\t],\n\t\"./baku.js\": [\n\t\t2481,\n\t\t6810\n\t],\n\t\"./barcelona.js\": [\n\t\t6340,\n\t\t5792\n\t],\n\t\"./beijing.js\": [\n\t\t2145,\n\t\t2358\n\t],\n\t\"./berlin.js\": [\n\t\t7976,\n\t\t436\n\t],\n\t\"./bucharest.js\": [\n\t\t5249,\n\t\t5520\n\t],\n\t\"./budapest.js\": [\n\t\t8895,\n\t\t1321\n\t],\n\t\"./cairo.js\": [\n\t\t6509,\n\t\t5189\n\t],\n\t\"./changsha.js\": [\n\t\t574,\n\t\t6739\n\t],\n\t\"./chengdu.js\": [\n\t\t6312,\n\t\t7599\n\t],\n\t\"./chongqing.js\": [\n\t\t300,\n\t\t7081\n\t],\n\t\"./daegu.js\": [\n\t\t6995,\n\t\t4874\n\t],\n\t\"./dalian.js\": [\n\t\t5169,\n\t\t9186\n\t],\n\t\"./delhi.js\": [\n\t\t3707,\n\t\t8719\n\t],\n\t\"./dongguan.js\": [\n\t\t3280,\n\t\t7206\n\t],\n\t\"./dortmund.js\": [\n\t\t6079,\n\t\t134\n\t],\n\t\"./edinburgh.js\": [\n\t\t285,\n\t\t9770\n\t],\n\t\"./eskisehir.js\": [\n\t\t1686,\n\t\t8189\n\t],\n\t\"./foshan.js\": [\n\t\t3204,\n\t\t9898\n\t],\n\t\"./frankfurt.js\": [\n\t\t2040,\n\t\t4447\n\t],\n\t\"./glasgow.js\": [\n\t\t4476,\n\t\t1847\n\t],\n\t\"./gothenburg.js\": [\n\t\t6801,\n\t\t6951\n\t],\n\t\"./guadalajara.js\": [\n\t\t9399,\n\t\t1392\n\t],\n\t\"./guangzhou.js\": [\n\t\t5841,\n\t\t5449\n\t],\n\t\"./hangzhou.js\": [\n\t\t3427,\n\t\t17\n\t],\n\t\"./hanoi.js\": [\n\t\t507,\n\t\t8237\n\t],\n\t\"./harbin.js\": [\n\t\t4826,\n\t\t886\n\t],\n\t\"./hochiminh.js\": [\n\t\t6770,\n\t\t4788\n\t],\n\t\"./hongkong.js\": [\n\t\t4243,\n\t\t3106\n\t],\n\t\"./istanbul.js\": [\n\t\t3107,\n\t\t4073\n\t],\n\t\"./jinan.js\": [\n\t\t5719,\n\t\t5303\n\t],\n\t\"./kansai.js\": [\n\t\t382,\n\t\t310\n\t],\n\t\"./kaohsiung.js\": [\n\t\t3037,\n\t\t5081\n\t],\n\t\"./klangvalley.js\": [\n\t\t137,\n\t\t1951\n\t],\n\t\"./kunming.js\": [\n\t\t8852,\n\t\t8183\n\t],\n\t\"./lima.js\": [\n\t\t9118,\n\t\t8140\n\t],\n\t\"./lisbon.js\": [\n\t\t8814,\n\t\t3417\n\t],\n\t\"./london.js\": [\n\t\t8087,\n\t\t3875\n\t],\n\t\"./macao.js\": [\n\t\t8015,\n\t\t425\n\t],\n\t\"./madrid.js\": [\n\t\t8020,\n\t\t7826\n\t],\n\t\"./milan.js\": [\n\t\t4410,\n\t\t2028\n\t],\n\t\"./munich.js\": [\n\t\t7368,\n\t\t9890\n\t],\n\t\"./nanjing.js\": [\n\t\t1664,\n\t\t5944\n\t],\n\t\"./newtaipei.js\": [\n\t\t9114,\n\t\t4737\n\t],\n\t\"./osaka.js\": [\n\t\t1064,\n\t\t3579\n\t],\n\t\"./oslo.js\": [\n\t\t8057,\n\t\t8975\n\t],\n\t\"./other.js\": [\n\t\t7642,\n\t\t1614\n\t],\n\t\"./paris.js\": [\n\t\t2720,\n\t\t5066\n\t],\n\t\"./qingdao.js\": [\n\t\t7994,\n\t\t2168\n\t],\n\t\"./rheinruhr.js\": [\n\t\t6870,\n\t\t743\n\t],\n\t\"./sanfrancisco.js\": [\n\t\t4747,\n\t\t8291\n\t],\n\t\"./sanktpeterburg.js\": [\n\t\t1832,\n\t\t8413\n\t],\n\t\"./santiago.js\": [\n\t\t2568,\n\t\t6195\n\t],\n\t\"./saopaulo.js\": [\n\t\t6956,\n\t\t441\n\t],\n\t\"./seoul.js\": [\n\t\t3266,\n\t\t6546\n\t],\n\t\"./shanghai.js\": [\n\t\t9656,\n\t\t5288\n\t],\n\t\"./shenyang.js\": [\n\t\t2266,\n\t\t3658\n\t],\n\t\"./shenzhen.js\": [\n\t\t4691,\n\t\t2194\n\t],\n\t\"./singapore.js\": [\n\t\t2459,\n\t\t1342\n\t],\n\t\"./stockholm.js\": [\n\t\t4606,\n\t\t7153\n\t],\n\t\"./suzhou.js\": [\n\t\t9819,\n\t\t5885\n\t],\n\t\"./taipei.js\": [\n\t\t9489,\n\t\t6977\n\t],\n\t\"./tehran.js\": [\n\t\t2573,\n\t\t7719\n\t],\n\t\"./tianjin.js\": [\n\t\t7942,\n\t\t9\n\t],\n\t\"./tokyo.js\": [\n\t\t3762,\n\t\t9450\n\t],\n\t\"./toronto.js\": [\n\t\t8148,\n\t\t1608\n\t],\n\t\"./tyneandwear.js\": [\n\t\t9314,\n\t\t2871\n\t],\n\t\"./vienna.js\": [\n\t\t5252,\n\t\t2832\n\t],\n\t\"./wuxi.js\": [\n\t\t4099,\n\t\t1902\n\t],\n\t\"./xiamen.js\": [\n\t\t4610,\n\t\t530\n\t],\n\t\"./xian.js\": [\n\t\t2591,\n\t\t7101\n\t],\n\t\"./zhengzhou.js\": [\n\t\t7357,\n\t\t4111\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 7827;\nmodule.exports = webpackAsyncContext;","import { CanvasType, RmgStyle, Theme } from '../constants/constants';\nimport React, { ReactNode, Suspense, useEffect } from 'react';\nimport FallbackLoader from '../components/fallback-loader';\n\ninterface SvgWrapperProps {\n    type: CanvasType;\n    style: RmgStyle;\n    svgWidth: number;\n    svgHeight: number;\n    canvasScale: number;\n    theme: Theme;\n    children: ReactNode;\n}\n\nexport default function SvgWrapper(props: SvgWrapperProps) {\n    const { type, style, svgWidth, svgHeight, canvasScale, theme, children } = props;\n\n    useEffect(() => {\n        (document.getElementById('css_' + type) as HTMLLinkElement).href =\n            process.env.PUBLIC_URL + `/styles/${type}_${style}.css`;\n        return () => {\n            (document.getElementById('css_' + type) as HTMLLinkElement).href = '';\n        };\n    }, [style]);\n\n    return (\n        <svg\n            id={type}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            height={svgHeight * canvasScale}\n            viewBox={`0 0 ${svgWidth} ${svgHeight}`}\n            colorInterpolationFilters=\"sRGB\"\n            style={{\n                ['--rmg-svg-width' as any]: svgWidth + 'px',\n                ['--rmg-svg-height' as any]: svgHeight + 'px',\n                ['--rmg-theme-colour' as any]: theme[2],\n                ['--rmg-theme-fg' as any]: theme[3],\n            }}\n        >\n            <rect\n                id=\"canvas-bg\"\n                fill=\"white\"\n                style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n            />\n            <Suspense fallback={<FallbackLoader />}>{children}</Suspense>\n            <rect\n                id=\"canvas-border\"\n                fill=\"none\"\n                strokeWidth={3}\n                stroke=\"none\"\n                style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n            />\n        </svg>\n    );\n}\n","import React, { lazy, ReactNode, useEffect } from 'react';\nimport { CanvasType, RmgStyle } from '../constants/constants';\nimport { useAppSelector } from '../redux';\nimport SvgWrapper from './svg-wrapper';\nimport { useDispatch } from 'react-redux';\nimport { setStyle } from '../redux/param/action';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Flex } from '@chakra-ui/react';\nimport ErrorBoundary from '../error-boundary';\n\nconst style = {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    '&::before, &::after': {\n        content: '\"\"',\n        margin: 'auto',\n    },\n    '& > svg': {\n        flex: '0 0 auto',\n        border: '1px solid black',\n    },\n};\n\nexport default function SvgRouter() {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const { canvasToShow, canvasScale } = useAppSelector(state => state.app);\n    const { svgWidth: svgWidths, svg_height: svgHeight, style: rmgStyle, theme } = useAppSelector(state => state.param);\n\n    if (location.pathname !== '/' + rmgStyle && location.pathname !== '/v3/' + rmgStyle) {\n        const nextStyle = location.pathname.split('/').slice(-1)[0] as RmgStyle;\n        if (Object.values(RmgStyle).includes(nextStyle)) {\n            // set style in param\n            dispatch(setStyle(nextStyle));\n        } else {\n            // push route to match param's style\n            navigate(rmgStyle);\n        }\n    }\n\n    useEffect(() => {\n        (document.getElementById('css_share') as HTMLLinkElement).href =\n            process.env.PUBLIC_URL + `/styles/share_${rmgStyle}.css`;\n    }, [rmgStyle]);\n\n    const filteredCanvas = (Object.keys(canvasList[rmgStyle]) as CanvasType[]).filter(canvas =>\n        canvasToShow === 'all' ? true : canvasToShow === canvas\n    );\n\n    return (\n        <Flex sx={style}>\n            {filteredCanvas.map(canvas => (\n                <ErrorBoundary key={canvas + rmgStyle}>\n                    <SvgWrapper\n                        type={canvas}\n                        style={rmgStyle}\n                        svgWidth={svgWidths[canvas]}\n                        svgHeight={svgHeight}\n                        canvasScale={canvasScale}\n                        theme={theme}\n                    >\n                        {canvasList[rmgStyle][canvas]}\n                    </SvgWrapper>\n                </ErrorBoundary>\n            ))}\n        </Flex>\n    );\n}\n\n// Canvas available\n\nconst RunInGZMTR = lazy(() => import(/* webpackChunkName: \"runinGZMTR\" */ './runin/runin-gzmtr'));\nconst RailMapGZMTR = lazy(() => import(/* webpackChunkName: \"railmapGZMTR\" */ './railmap/railmap-gzmtr'));\n\nconst DestinationMTR = lazy(() => import(/* webpackChunkName: \"destinationMTR\" */ './destination/destination-mtr'));\nconst RailMapMTR = lazy(() => import(/* webpackChunkName: \"railmapMTR\" */ './railmap/railmap-mtr'));\n\nconst DestinationSHMetro = lazy(\n    () => import(/* webpackChunkName: \"destinationSHMetro\" */ './destination/destination-shmetro')\n);\nconst RunInSHMetro = lazy(() => import(/* webpackChunkName: \"runinSHMetro\" */ './runin/runin-shmetro'));\nconst RailMapSHMetro = lazy(() => import(/* webpackChunkName: \"railmapSHMetro\" */ './railmap/railmap-shmetro'));\nconst IndoorSHMetro = lazy(() => import(/* webpackChunkName: \"indoorSHMetro\" */ './indoor/indoor-shmetro'));\n\n/**\n * Each value of this object is an object of ORDERED key-value pairs\n */\nconst canvasList: Record<RmgStyle, { [c in CanvasType]?: ReactNode }> = {\n    [RmgStyle.GZMTR]: {\n        [CanvasType.RunIn]: <RunInGZMTR />,\n        [CanvasType.RailMap]: <RailMapGZMTR />,\n    },\n    [RmgStyle.MTR]: {\n        [CanvasType.Destination]: <DestinationMTR />,\n        [CanvasType.RailMap]: <RailMapMTR />,\n    },\n    [RmgStyle.SHMetro]: {\n        [CanvasType.Destination]: <DestinationSHMetro />,\n        [CanvasType.RunIn]: <RunInSHMetro />,\n        [CanvasType.RailMap]: <RailMapSHMetro />,\n        [CanvasType.Indoor]: <IndoorSHMetro />,\n    },\n};\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { updateStationName, updateStationNum, updateStationSecondaryName } from '../../../redux/param/action';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function InfoSection() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const selectedStation = useAppSelector(state => state.app.selectedStation);\n    console.log('InfoSection:: Rendering for', selectedStation);\n    const style = useAppSelector(state => state.param.style);\n    const { num, name, secondaryName } = useAppSelector(state => state.param.stn_list[selectedStation]);\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'input',\n            label: t('StationSidePanel.info.num'),\n            value: num,\n            placeholder: '01',\n            onChange: (value: string) => dispatch(updateStationNum(selectedStation, value)),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'input',\n            label: t('Chinese name'),\n            value: name[0],\n            onChange: (value: string) => dispatch(updateStationName(selectedStation, [value, name[1]])),\n        },\n        {\n            type: 'input',\n            label: t('English name'),\n            value: name[1],\n            onChange: (value: string) => dispatch(updateStationName(selectedStation, [name[0], value])),\n        },\n        {\n            type: 'input',\n            label: t('StationSidePanel.info.zhSecondary'),\n            value: secondaryName ? secondaryName[0] : '',\n            placeholder: '1号航站楼',\n            onChange: (value: string) =>\n                dispatch(updateStationSecondaryName(selectedStation, [value, secondaryName ? secondaryName[1] : ''])),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'input',\n            label: t('StationSidePanel.info.enSecondary'),\n            value: secondaryName ? secondaryName[1] : '',\n            placeholder: 'Terminal 1',\n            onChange: (value: string) =>\n                dispatch(updateStationSecondaryName(selectedStation, [secondaryName ? secondaryName[0] : '', value])),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StationSidePanel.info.title')}\n            </Heading>\n\n            <RmgFields fields={fields} minW={130} />\n        </Box>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Image } from '@chakra-ui/react';\n\ninterface FlagSvgEmojiProps {\n    countryCode: string;\n    svgFilename?: string;\n}\n\nexport default function FlagSvgEmoji(props: FlagSvgEmojiProps) {\n    const { countryCode, svgFilename } = props;\n\n    const [src, setSrc] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        if (svgFilename) {\n            import('@railmapgen/rmg-palette-resources/flags/' + svgFilename)\n                .then(module => module.default)\n                .then(setSrc)\n                .catch(err => console.error(`Failed to find SVG file ${svgFilename} as ${err?.message}`));\n        }\n    }, [svgFilename]);\n\n    return src ? <Image src={src} alt={`Flag of ${countryCode}`} h={17} mr={1} /> : <></>;\n}\n","import React from 'react';\nimport { RmgAutoComplete } from '@railmapgen/rmg-components';\nimport { CityCode, CityEntry, cityList, countryList } from '@railmapgen/rmg-palette-resources';\nimport { LanguageCode } from '../../../constants/constants';\nimport { useTranslation } from 'react-i18next';\nimport FlagSvgEmoji from './flag-svg-emoji';\n\ninterface CityPickerProps {\n    defaultValueId?: CityCode;\n    onChange?: (val: CityCode) => void;\n}\n\nexport default function CityPicker(props: CityPickerProps) {\n    const { defaultValueId, onChange } = props;\n\n    const { i18n } = useTranslation();\n\n    const data = cityList;\n    const currentItem = defaultValueId ? data.find(item => item.id === defaultValueId) : undefined;\n\n    const displayValue = (item: CityEntry): string => {\n        return i18n.languages.map(lng => item.name[lng as LanguageCode]).find(name => name !== undefined)!!;\n    };\n\n    const displayHandler = (item: CityEntry) => {\n        const isCensorTWFlag =\n            item.country === 'TW' &&\n            [LanguageCode.ChineseSimp, LanguageCode.ChineseCN].includes(i18n.language as LanguageCode);\n        const isWindowsClient = ['Win32', 'Win64'].includes(navigator.platform);\n        // const isWindowsClient = true; // uncomment this line for Windows testing\n\n        const name = i18n.languages.map(lng => item.name[lng as LanguageCode]).find(name => name !== undefined);\n        const flagSvg = countryList.find(country => country.id === item.country)?.flagSvg;\n        const flagEmoji = countryList.find(country => country.id === item.country)?.flagEmoji;\n\n        return (\n            <>\n                {isCensorTWFlag ? (\n                    <span>🏴&nbsp;</span>\n                ) : isWindowsClient ? (\n                    <FlagSvgEmoji countryCode={item.country} svgFilename={flagSvg} />\n                ) : (\n                    <span>{flagEmoji}&nbsp;</span>\n                )}\n                {name}\n            </>\n        );\n    };\n\n    const predicate = (item: CityEntry, input: string): boolean => {\n        return Object.values(item.name).some(name => name.includes(input));\n    };\n\n    return (\n        <RmgAutoComplete\n            data={data}\n            displayValue={displayValue}\n            displayHandler={displayHandler}\n            predicate={predicate}\n            defaultValue={currentItem}\n            onChange={item => onChange?.(item.id)}\n        />\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { ColourHex, LanguageCode, MonoColour, PaletteEntry } from '../../../constants/constants';\nimport { RmgAutoComplete } from '@railmapgen/rmg-components';\nimport { CityCode } from '@railmapgen/rmg-palette-resources';\nimport { useTranslation } from 'react-i18next';\nimport { RmgLineBadge } from '@railmapgen/rmg-components';\n\nconst usePalette = (cityCode?: CityCode) => {\n    const [paletteList, setPaletteList] = useState<PaletteEntry[]>([]);\n\n    useEffect(() => {\n        import(/* webpackChunkName: \"palettes\" */ `@railmapgen/rmg-palette-resources/palettes/${cityCode}.js`)\n            .then(module => setPaletteList(module.default))\n            .catch(() => setPaletteList([]));\n    }, [cityCode]);\n\n    return paletteList;\n};\n\ninterface ColourPickerProps {\n    city?: CityCode;\n    defaultValueId?: string;\n    onChange?: (lineCode: string, bg: ColourHex, fg: MonoColour) => void;\n}\n\nexport default function ColourPicker(props: ColourPickerProps) {\n    const { city, defaultValueId, onChange } = props;\n\n    const { i18n } = useTranslation();\n\n    const paletteList = usePalette(city);\n\n    const currentItem = defaultValueId ? paletteList.find(palette => palette.id === defaultValueId) : undefined;\n\n    const displayValue = (item: PaletteEntry): string => {\n        return i18n.languages.map(lng => item.name[lng as LanguageCode]).find(name => name !== undefined)!!;\n    };\n\n    const displayHandler = (item: PaletteEntry) => {\n        const displayName = displayValue(item);\n\n        return <RmgLineBadge name={displayName} fg={item.fg || MonoColour.white} bg={item.colour} />;\n    };\n\n    const predicate = (item: PaletteEntry, input: string): boolean => {\n        return Object.values(item.name).some(name => name.includes(input));\n    };\n\n    return (\n        <RmgAutoComplete\n            data={paletteList}\n            displayValue={displayValue}\n            displayHandler={displayHandler}\n            predicate={predicate}\n            defaultValue={currentItem}\n            onChange={item => onChange?.(item.id, item.colour, item.fg || MonoColour.white)}\n        />\n    );\n}\n","import {\n    Button,\n    Icon,\n    Link,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    Tab,\n    TabList,\n    TabPanel,\n    TabPanels,\n    Tabs,\n    Text,\n    VStack,\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { ColourHex, MonoColour, Theme } from '../../../constants/constants';\nimport CityPicker from './city-picker';\nimport ColourPicker from './colour-picker';\nimport { CityCode } from '@railmapgen/rmg-palette-resources';\nimport { useTranslation } from 'react-i18next';\nimport { RmgFields, RmgFieldsField, RmgLineBadge } from '@railmapgen/rmg-components';\nimport { MdOpenInNew } from 'react-icons/md';\n\ninterface ColourModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    defaultTheme?: Theme;\n    onUpdate?: (theme: Theme) => void;\n}\n\nexport default function ColourModal(props: ColourModalProps) {\n    const { isOpen, onClose, defaultTheme, onUpdate } = props;\n\n    const { t } = useTranslation();\n\n    const [cityCode, setCityCode] = useState(defaultTheme?.[0]);\n    const [lineCode, setLineCode] = useState(defaultTheme?.[1]);\n    const [bgColour, setBgColour] = useState(defaultTheme?.[2] || '#AAAAAA');\n    const [fgColour, setFgColour] = useState(defaultTheme?.[3] || MonoColour.white);\n\n    useEffect(() => {\n        if (defaultTheme) {\n            setCityCode(defaultTheme[0]);\n            setLineCode(defaultTheme[1]);\n            setBgColour(defaultTheme[2]);\n            setFgColour(defaultTheme[3]);\n        }\n    }, [isOpen, defaultTheme?.toString()]);\n\n    const paletteFields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('ColourModal.city'),\n            component: (\n                <CityPicker\n                    defaultValueId={cityCode}\n                    onChange={value => {\n                        setCityCode(value);\n                        setLineCode(undefined);\n                        setBgColour('#AAAAAA');\n                        setFgColour(MonoColour.white);\n                    }}\n                />\n            ),\n        },\n        {\n            type: 'custom',\n            label: t('ColourModal.line'),\n            component: (\n                <ColourPicker\n                    city={cityCode}\n                    defaultValueId={lineCode}\n                    onChange={(line, bg, fg) => {\n                        setLineCode(line);\n                        setBgColour(bg);\n                        setFgColour(fg);\n                    }}\n                />\n            ),\n        },\n    ];\n\n    const customFields: RmgFieldsField[] = [\n        {\n            type: 'input',\n            label: t('ColourModal.bg'),\n            variant: 'color',\n            value: bgColour,\n            placeholder: '#F3D03E',\n            onChange: value => {\n                setCityCode(CityCode.Other);\n                setLineCode('other');\n                setBgColour(value as ColourHex);\n            },\n        },\n        {\n            type: 'select',\n            label: t('ColourModal.fg'),\n            value: fgColour,\n            options: {\n                [MonoColour.white]: t('ColourModal.white'),\n                [MonoColour.black]: t('ColourModal.black'),\n            },\n            onChange: value => {\n                setCityCode(CityCode.Other);\n                setLineCode('other');\n                setFgColour(value as MonoColour);\n            },\n        },\n    ];\n\n    const isSubmitEnabled = cityCode && lineCode && bgColour && fgColour;\n\n    const handleSubmit = () => {\n        if (isSubmitEnabled) {\n            onUpdate?.([cityCode, lineCode, bgColour, fgColour]);\n            onClose();\n        }\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('ColourModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <VStack>\n                        <RmgLineBadge name={t('ColourModal.example')} fg={fgColour} bg={bgColour} />\n\n                        <Tabs isFitted colorScheme=\"teal\" w=\"100%\" defaultIndex={cityCode === CityCode.Other ? 1 : 0}>\n                            <TabList>\n                                <Tab>{t('ColourModal.palette')}</Tab>\n                                <Tab>{t('ColourModal.custom')}</Tab>\n                            </TabList>\n\n                            <TabPanels>\n                                <TabPanel>\n                                    <RmgFields fields={paletteFields} />\n                                </TabPanel>\n                                <TabPanel>\n                                    <RmgFields fields={customFields} />\n                                </TabPanel>\n                            </TabPanels>\n                        </Tabs>\n                    </VStack>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Text fontSize=\"sm\" marginRight={2}>\n                        {t('ColourModal.seeAll')}\n                        <Link color=\"teal.500\" href=\"/rmg-palette\" isExternal={true}>\n                            RMG Palette <Icon as={MdOpenInNew} />\n                        </Link>\n                    </Text>\n\n                    <Button colorScheme=\"teal\" onClick={handleSubmit} disabled={!isSubmitEnabled}>\n                        {t('ColourModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import { ColourHex } from '../constants/constants';\nimport { rmgChakraTheme } from '@railmapgen/rmg-components';\n\nexport default class ColourUtil {\n    private static hexToRgb(hex: ColourHex): [number, number, number] {\n        return [parseInt(hex.slice(1, 3), 16), parseInt(hex.slice(3, 5), 16), parseInt(hex.slice(5, 7), 16)];\n    }\n\n    public static fade(hex: ColourHex, alpha: number): `rgba(${string})` {\n        return `rgba(${[...this.hexToRgb(hex), alpha].join(',')})`;\n    }\n\n    public static euclideanDistance(hex1: ColourHex, hex2: ColourHex): number {\n        return this.hexToRgb(hex1).reduce((acc, cur, idx) => {\n            return acc + Math.pow(cur - this.hexToRgb(hex2)[idx], 2);\n        }, 0);\n    }\n}\n\nexport const findNearestColour = (hex: ColourHex): string => {\n    const colourDb: Record<string, Record<string, ColourHex> | ColourHex> = rmgChakraTheme.colors;\n\n    const [nearestColour] = Object.entries(colourDb).reduce(\n        (acc, cur) => {\n            if (cur[0].includes('Alpha') || cur[0] === 'current') {\n                return acc;\n            } else if (typeof cur[1] === 'string') {\n                const dist = ColourUtil.euclideanDistance(hex, cur[1]);\n                return dist < acc[1] ? [cur[0], dist] : acc;\n            } else {\n                const dist = ColourUtil.euclideanDistance(hex, cur[1]['600']);\n                return dist < acc[1] ? [cur[0], dist] : acc;\n            }\n        },\n        ['brand', Infinity]\n    );\n    return nearestColour;\n};\n","import React from 'react';\nimport ColourUtil from '../../theme/colour-util';\nimport { MdCircle } from 'react-icons/md';\nimport { IconButton } from '@chakra-ui/react';\nimport { Theme } from '../../constants/constants';\n\ninterface ThemeButtonProps {\n    theme: Theme;\n    onClick?: () => void;\n}\n\nexport default function ThemeButton(props: ThemeButtonProps) {\n    const { theme, onClick } = props;\n\n    return (\n        <IconButton\n            size=\"xs\"\n            aria-label=\"Theme colour\"\n            mt=\"0.45px\"\n            color={theme[3]}\n            bg={theme[2]}\n            _hover={{ bg: ColourUtil.fade(theme[2], 0.7) }}\n            icon={<MdCircle />}\n            onClick={onClick}\n        />\n    );\n}\n","import React, { useState } from 'react';\nimport { Box, HStack, IconButton, Text } from '@chakra-ui/react';\nimport { InterchangeInfo, MonoColour, Theme } from '../../../constants/constants';\nimport { MdAdd, MdContentCopy, MdDelete } from 'react-icons/md';\nimport ColourModal from '../../modal/colour-modal/colour-modal';\nimport { useTranslation } from 'react-i18next';\nimport { useAppSelector } from '../../../redux';\nimport ThemeButton from '../theme-button';\nimport { RmgCard, RmgFields, RmgFieldsField, RmgLabel } from '@railmapgen/rmg-components';\n\ninterface InterchangeCardProps {\n    interchangeList: InterchangeInfo[];\n    onAdd?: (info: InterchangeInfo) => void;\n    onDelete?: (index: number) => void;\n    onUpdate?: (index: number, info: InterchangeInfo) => void;\n}\n\nexport default function InterchangeCard(props: InterchangeCardProps) {\n    const { interchangeList, onAdd, onDelete, onUpdate } = props;\n\n    const { t } = useTranslation();\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n\n    const theme = useAppSelector(state => state.param.theme);\n\n    const interchangeFields: RmgFieldsField[][] = interchangeList.map((it, i) => [\n        {\n            type: 'input',\n            label: t('Chinese name'),\n            value: it[4],\n            minW: '80px',\n            onChange: val => onUpdate?.(i, [it[0], it[1], it[2], it[3], val, it[5]]),\n        },\n        {\n            type: 'input',\n            label: t('English name'),\n            value: it[5],\n            minW: '80px',\n            onChange: val => onUpdate?.(i, [it[0], it[1], it[2], it[3], it[4], val]),\n        },\n    ]);\n\n    return (\n        <RmgCard direction=\"column\">\n            {interchangeList.length === 0 && (\n                <HStack spacing={0.5}>\n                    <Text as=\"i\" flex={1} align=\"center\" fontSize=\"md\" colorScheme=\"gray\">\n                        {t('StationSidePanel.interchange.noInterchanges')}\n                    </Text>\n\n                    <IconButton\n                        size=\"sm\"\n                        variant=\"ghost\"\n                        aria-label={t('StationSidePanel.interchange.add')}\n                        onClick={() => onAdd?.([theme[0], '', '#aaaaaa', MonoColour.white, '', ''])}\n                        icon={<MdAdd />}\n                    />\n                </HStack>\n            )}\n\n            {interchangeList.map((it, i) => (\n                <HStack key={i} spacing={0.5}>\n                    <RmgLabel label={t('StationSidePanel.interchange.colour')} minW=\"40px\" noLabel={i !== 0}>\n                        <ThemeButton\n                            theme={[it[0], it[1], it[2], it[3]]}\n                            onClick={() => {\n                                setIsModalOpen(true);\n                                setSelectedIndex(i);\n                            }}\n                        />\n                    </RmgLabel>\n\n                    <RmgFields fields={interchangeFields[i]} noLabel={i !== 0} />\n\n                    {onAdd && i === interchangeFields.length - 1 ? (\n                        <IconButton\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            aria-label={t('StationSidePanel.interchange.copy')}\n                            onClick={() => onAdd?.(interchangeList.slice(-1)[0])} // duplicate last leg\n                            icon={<MdContentCopy />}\n                        />\n                    ) : (\n                        <Box minW={8} />\n                    )}\n\n                    {onDelete && (\n                        <IconButton\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            aria-label={t('StationSidePanel.interchange.remove')}\n                            onClick={() => onDelete?.(i)}\n                            icon={<MdDelete />}\n                        />\n                    )}\n                </HStack>\n            ))}\n\n            <ColourModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                defaultTheme={interchangeList[selectedIndex]?.slice(0, 4) as Theme}\n                onUpdate={theme =>\n                    onUpdate?.(selectedIndex, [\n                        ...theme,\n                        interchangeList[selectedIndex][4],\n                        interchangeList[selectedIndex][5],\n                    ])\n                }\n            />\n        </RmgCard>\n    );\n}\n","import React, { Fragment } from 'react';\nimport { Button, Heading, VStack } from '@chakra-ui/react';\nimport { useAppSelector } from '../../../redux';\nimport InterchangeCard from './interchange-card';\nimport { useDispatch } from 'react-redux';\nimport {\n    addInterchange,\n    removeInterchange,\n    updateInterchange,\n    updateStationOsiName,\n} from '../../../redux/param/action';\nimport { InterchangeInfo, MonoColour } from '../../../constants/constants';\nimport { MdAdd } from 'react-icons/md';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function InterchangeSection() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const selectedStation = useAppSelector(state => state.app.selectedStation);\n    const theme = useAppSelector(state => state.param.theme);\n    const { transfer } = useAppSelector(state => state.param.stn_list[selectedStation]);\n\n    const getOSINameFields = (setIndex: number): RmgFieldsField[] => [\n        {\n            type: 'input',\n            label: t('StationSidePanel.interchange.stationZhName'),\n            value: transfer.osi_names[setIndex]?.[0],\n            onChange: value =>\n                dispatch(updateStationOsiName(selectedStation, setIndex, [value, transfer.osi_names[setIndex]?.[1]])),\n        },\n        {\n            type: 'input',\n            label: t('StationSidePanel.interchange.stationEnName'),\n            value: transfer.osi_names[setIndex]?.[1],\n            onChange: value =>\n                dispatch(updateStationOsiName(selectedStation, setIndex, [transfer.osi_names[setIndex]?.[0], value])),\n        },\n    ];\n\n    const handleAdd = (i: number) => (info: InterchangeInfo) => {\n        dispatch(addInterchange(selectedStation, i, info));\n    };\n\n    const handleDelete = (i: number) => (j: number) => {\n        dispatch(removeInterchange(selectedStation, i, j));\n    };\n\n    const handleUpdate = (i: number) => (j: number, info: InterchangeInfo) => {\n        dispatch(updateInterchange(selectedStation, i, j, info));\n    };\n\n    const handleAddInterchangeGroup = () => {\n        dispatch(\n            addInterchange(selectedStation, transfer.info.length, [theme[0], '', '#AAAAAA', MonoColour.white, '', ''])\n        );\n    };\n\n    return (\n        <VStack align=\"flex-start\" p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StationSidePanel.interchange.title')}\n            </Heading>\n\n            {transfer.info.map((infoList, i) => (\n                <Fragment key={i}>\n                    <Heading as=\"h6\" size=\"xs\">\n                        {i === 0\n                            ? t('StationSidePanel.interchange.within')\n                            : i === 1\n                            ? t('StationSidePanel.interchange.outStation')\n                            : t('StationSidePanel.interchange.outSystem')}\n                    </Heading>\n\n                    {i !== 0 && <RmgFields fields={getOSINameFields(i - 1)} />}\n\n                    <InterchangeCard\n                        interchangeList={infoList}\n                        onAdd={handleAdd(i)}\n                        onDelete={handleDelete(i)}\n                        onUpdate={handleUpdate(i)}\n                    />\n                </Fragment>\n            ))}\n\n            {transfer.info.length < 3 && (\n                <Button\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    alignSelf=\"flex-end\"\n                    leftIcon={<MdAdd />}\n                    onClick={handleAddInterchangeGroup}\n                >\n                    {t('StationSidePanel.interchange.addGroup')}\n                </Button>\n            )}\n        </VStack>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup } from '@chakra-ui/react';\n\ntype ButtonGroupSelection<T> = {\n    label: string;\n    value: T;\n    disabled?: boolean;\n};\n\ntype RmgButtonGroupSingleSelectProps<T> = {\n    selections: ButtonGroupSelection<T>[];\n    defaultValue: T;\n    onChange?: (value: T) => void;\n    multiSelect?: false;\n};\n\ntype RmgButtonGroupMultiSelectProps<T> = {\n    selections: ButtonGroupSelection<T>[];\n    defaultValue: T[];\n    onChange?: (value: T[]) => void;\n    multiSelect: true;\n};\n\ntype RmgButtonGroupProps<T> = RmgButtonGroupSingleSelectProps<T> | RmgButtonGroupMultiSelectProps<T>;\n\nexport default function RmgButtonGroup<T extends string | boolean>(props: RmgButtonGroupProps<T>) {\n    const { selections, defaultValue, onChange, multiSelect } = props;\n\n    const [value, setValue] = useState(defaultValue);\n\n    useEffect(() => {\n        defaultValue.toString() && setValue(defaultValue);\n    }, [defaultValue.toString()]);\n\n    const handleToggle = (val: T) => {\n        if (multiSelect) {\n            const prevValue = value as T[];\n            const nextValue = prevValue.includes(val) ? prevValue.filter(v => v !== val) : [...prevValue, val];\n\n            setValue(nextValue);\n            (onChange as RmgButtonGroupMultiSelectProps<T>['onChange'])?.(nextValue);\n        } else {\n            setValue(val);\n            (onChange as RmgButtonGroupSingleSelectProps<T>['onChange'])?.(val);\n        }\n    };\n\n    return (\n        <ButtonGroup size=\"xs\" isAttached colorScheme=\"teal\" variant=\"outline\">\n            {selections.map((selection, i) => {\n                const isSelected =\n                    (typeof value === 'object' && value.includes(selection.value)) || value === selection.value;\n\n                // TODO: fix overlapped/missing border\n                const mr = i !== selections.length - 1 && !isSelected ? '-px' : undefined;\n\n                return (\n                    <Button\n                        key={selection.value.toString()}\n                        variant={isSelected ? 'solid' : 'outline'}\n                        mr={mr}\n                        isDisabled={selection.disabled}\n                        onClick={() => handleToggle(selection.value)}\n                    >\n                        {selection.label}\n                    </Button>\n                );\n            })}\n        </ButtonGroup>\n    );\n}\n\ninterface RmgBooleanButtonGroupProps {\n    defaultValue: boolean;\n    onChange?: (value: boolean) => void;\n}\n\nexport const RmgBooleanButtonGroup = (props: RmgBooleanButtonGroupProps) => {\n    const selections = [\n        {\n            label: 'Yes',\n            value: true,\n        },\n        {\n            label: 'No',\n            value: false,\n        },\n    ];\n\n    return <RmgButtonGroup selections={selections} {...props} />;\n};\n","import { Box, Heading } from '@chakra-ui/react';\nimport React from 'react';\nimport RmgButtonGroup from '../../common/rmg-button-group';\nimport { useAppSelector } from '../../../redux';\nimport { Facilities, RmgStyle, Services } from '../../../constants/constants';\nimport { useDispatch } from 'react-redux';\nimport { updateStationFacility, updateStationLoopPivot, updateStationServices } from '../../../redux/param/action';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function MoreSection() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const selectedStation = useAppSelector(state => state.app.selectedStation);\n    const style = useAppSelector(state => state.param.style);\n    const { services, facility, loop_pivot } = useAppSelector(state => state.param.stn_list[selectedStation]);\n\n    const serviceSelections = Object.values(Services).map(service => {\n        return {\n            label: t('StationSidePanel.more.' + service),\n            value: service,\n            disabled: service === Services.local && style !== RmgStyle.SHMetro,\n        };\n    });\n\n    const mtrFacilityOptions = {\n        [Facilities.none]: t('StationSidePanel.more.none'),\n        [Facilities.airport]: t('StationSidePanel.more.airport'),\n        [Facilities.hsr]: t('StationSidePanel.more.hsr'),\n        [Facilities.disney]: t('StationSidePanel.more.disney'),\n    };\n\n    const shmetroFacilityOptions = {\n        [Facilities.none]: t('StationSidePanel.more.none'),\n        [Facilities.airport]: t('StationSidePanel.more.airport'),\n        [Facilities.railway]: t('StationSidePanel.more.railway'),\n        [Facilities.disney]: t('StationSidePanel.more.disney'),\n    };\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('StationSidePanel.more.service'),\n            component: (\n                <RmgButtonGroup\n                    selections={serviceSelections}\n                    defaultValue={services}\n                    onChange={services => dispatch(updateStationServices(selectedStation, services))}\n                    multiSelect\n                />\n            ),\n            hidden: ![RmgStyle.GZMTR, RmgStyle.SHMetro].includes(style),\n        },\n        {\n            type: 'select',\n            label: t('StationSidePanel.more.facility'),\n            value: facility,\n            options: style === RmgStyle.MTR ? mtrFacilityOptions : shmetroFacilityOptions,\n            onChange: value => dispatch(updateStationFacility(selectedStation, value as Facilities)),\n            hidden: ![RmgStyle.MTR, RmgStyle.SHMetro].includes(style),\n        },\n        {\n            type: 'switch',\n            label: t('StationSidePanel.more.pivot'),\n            isChecked: loop_pivot,\n            onChange: checked => dispatch(updateStationLoopPivot(selectedStation, checked)),\n            hidden: ![RmgStyle.SHMetro].includes(style),\n            minW: 'full',\n            oneLine: true,\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StationSidePanel.more.title')}\n            </Heading>\n\n            <RmgFields fields={fields} />\n        </Box>\n    );\n}\n","import { Box, Heading, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { BranchStyle, Direction } from '../../../constants/constants';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../../redux';\nimport {\n    flipStationBranchPosition,\n    updateStationBranchFirstStation,\n    updateStationBranchType,\n} from '../../../redux/param/action';\nimport { RmgCard, RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function BranchSection() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const selectedStation = useAppSelector(state => state.app.selectedStation);\n    const stationList = useAppSelector(state => state.param.stn_list);\n    const { parents, children, branch } = stationList[selectedStation];\n\n    const branchOptions = {\n        [BranchStyle.through]: t('StationSidePanel.branch.through'),\n        [BranchStyle.nonThrough]: t('StationSidePanel.branch.nonThrough'),\n    };\n\n    const getFirstStationOptions = (direction: Direction) => {\n        return (direction === Direction.left ? parents : children).reduce<Record<string, string>>(\n            (acc, cur) => ({ ...acc, [cur]: stationList[cur].name.join(' ') }),\n            {}\n        );\n    };\n\n    const positionOptions = {\n        upper: t('StationSidePanel.branch.upper'),\n        lower: t('StationSidePanel.branch.lower'),\n    };\n\n    const getFields = (direction: Direction): RmgFieldsField[] => {\n        if (branch[direction].length) {\n            return [\n                {\n                    type: 'select',\n                    label: t('StationSidePanel.branch.type'),\n                    options: branchOptions,\n                    value: branch[direction][0],\n                    onChange: value =>\n                        dispatch(updateStationBranchType(selectedStation, direction, value as BranchStyle)),\n                },\n                {\n                    type: 'select',\n                    label: t('StationSidePanel.branch.firstStation'),\n                    options: getFirstStationOptions(direction),\n                    value: branch[direction][1],\n                    onChange: value =>\n                        dispatch(updateStationBranchFirstStation(selectedStation, direction, value as string)),\n                },\n                {\n                    type: 'select',\n                    label: t('StationSidePanel.branch.position'),\n                    options: positionOptions,\n                    value:\n                        (direction === Direction.left ? parents : children).indexOf(branch[direction][1]!) === 0\n                            ? 'upper'\n                            : 'lower',\n                    onChange: () => dispatch(flipStationBranchPosition(selectedStation, direction)),\n                },\n            ];\n        } else {\n            return [];\n        }\n    };\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StationSidePanel.branch.title')}\n            </Heading>\n\n            <Heading as=\"h6\" size=\"xs\">\n                {t('StationSidePanel.branch.left')}\n            </Heading>\n\n            <RmgCard direction=\"column\">\n                {parents.length === 2 ? (\n                    <RmgFields fields={getFields(Direction.left)} />\n                ) : (\n                    <Text as=\"i\" flex={1} align=\"center\" fontSize=\"md\" colorScheme=\"gray\">\n                        {t('StationSidePanel.branch.noBranch')}\n                    </Text>\n                )}\n            </RmgCard>\n\n            <Heading as=\"h6\" size=\"xs\">\n                {t('StationSidePanel.branch.left')}\n            </Heading>\n\n            <RmgCard direction=\"column\">\n                {children.length === 2 ? (\n                    <RmgFields fields={getFields(Direction.right)} />\n                ) : (\n                    <Text as=\"i\" flex={1} align=\"center\" fontSize=\"md\" colorScheme=\"gray\">\n                        {t('StationSidePanel.branch.noBranch')}\n                    </Text>\n                )}\n            </RmgCard>\n        </Box>\n    );\n}\n","import { Divider } from '@chakra-ui/react';\nimport React from 'react';\nimport InfoSection from './info-section';\nimport InterchangeSection from './interchange-section';\nimport MoreSection from './more-section';\nimport BranchSection from './branch-section';\nimport { RmgSidePanelBody } from '@railmapgen/rmg-components';\n\nexport default function StationSidePanel() {\n    return (\n        <RmgSidePanelBody>\n            <InfoSection />\n\n            <Divider />\n\n            <InterchangeSection />\n\n            <Divider />\n\n            <BranchSection />\n\n            <Divider />\n\n            <MoreSection />\n        </RmgSidePanelBody>\n    );\n}\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../../redux';\nimport { canvasConfig, RmgStyle } from '../../../constants/constants';\nimport {\n    setBranchSpacing,\n    setDirectionIndicatorX,\n    setDirectionIndicatorY,\n    setPaddingPercentage,\n    setSvgHeight,\n    setSvgWidth,\n    setYPercentage,\n} from '../../../redux/param/action';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\n\nexport default function LayoutSection() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const {\n        style: rmgStyle,\n        svgWidth,\n        svg_height,\n        y_pc,\n        branch_spacing,\n        padding,\n        direction_gz_x,\n        direction_gz_y,\n    } = useAppSelector(state => state.param);\n\n    const fields: RmgFieldsField[] = [\n        ...canvasConfig[rmgStyle].map<RmgFieldsField>(canvas => ({\n            type: 'input',\n            label: t(`StyleSidePanel.layout.${canvas}Width`),\n            value: svgWidth[canvas].toString(),\n            onChange: val => dispatch(setSvgWidth(Number(val), canvas)),\n        })),\n        {\n            type: 'input',\n            label: t('StyleSidePanel.layout.canvasHeight'),\n            value: svg_height.toString(),\n            onChange: val => dispatch(setSvgHeight(Number(val))),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.verticalPosition'),\n            value: y_pc,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setYPercentage(val)),\n            hidden: ![RmgStyle.MTR, RmgStyle.GZMTR].includes(rmgStyle),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.branchSpacing'),\n            value: branch_spacing,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setBranchSpacing(val)),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.padding'),\n            value: padding,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setPaddingPercentage(val)),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.directionGzX'),\n            value: direction_gz_x,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setDirectionIndicatorX(val)),\n            hidden: ![RmgStyle.GZMTR].includes(rmgStyle),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.directionGzY'),\n            value: direction_gz_y,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setDirectionIndicatorY(val)),\n            hidden: ![RmgStyle.GZMTR].includes(rmgStyle),\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.layout.title')}\n            </Heading>\n\n            <RmgFields fields={fields} minW={130} />\n        </Box>\n    );\n}\n","import React, { useState } from 'react';\nimport { Box, Button, Heading, HStack } from '@chakra-ui/react';\nimport { useAppSelector } from '../../../redux';\nimport ThemeButton from '../theme-button';\nimport ColourModal from '../../modal/colour-modal/colour-modal';\nimport { useDispatch } from 'react-redux';\nimport {\n    customiseDestinationName,\n    flipStationNames,\n    setDirection,\n    setLineName,\n    setLineNum,\n    setPanelType,\n    setPlatform,\n    setPsdNum,\n    setTheme,\n    staggerStationNames,\n    toggleLineNameBeforeDestination,\n} from '../../../redux/param/action';\nimport RmgButtonGroup from '../../common/rmg-button-group';\nimport { PanelTypeGZMTR, PanelTypeShmetro, RmgStyle, ShortDirection } from '../../../constants/constants';\nimport { MdSwapVert } from 'react-icons/md';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function DesignSection() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const {\n        style,\n        theme,\n        line_name: lineName,\n        line_num: lineNum,\n        direction,\n        platform_num: platformNum,\n        psd_num: psdNum,\n        namePosMTR,\n        customiseMTRDest,\n        info_panel_type,\n    } = useAppSelector(state => state.param);\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const directionSelections = [\n        {\n            label: t('StyleSidePanel.design.left'),\n            value: ShortDirection.left,\n        },\n        {\n            label: t('StyleSidePanel.design.right'),\n            value: ShortDirection.right,\n        },\n    ];\n\n    const panelTypeGZMTROptions = Object.values(PanelTypeGZMTR).reduce<Record<string, string>>(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: t('StyleSidePanel.design.' + cur),\n        }),\n        {}\n    );\n\n    const panelTypeSHMetroOptions = Object.values(PanelTypeShmetro).reduce<Record<string, string>>(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: t('StyleSidePanel.design.' + cur),\n        }),\n        {}\n    );\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('StyleSidePanel.design.colour'),\n            component: <ThemeButton theme={theme} onClick={() => setIsModalOpen(true)} />,\n            minW: '40px',\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.zhLineName'),\n            value: lineName[0],\n            onChange: value => dispatch(setLineName([value, lineName[1]])),\n            minW: 130,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.enLineName'),\n            value: lineName[1],\n            onChange: value => dispatch(setLineName([lineName[0], value])),\n            minW: 130,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.lineNum'),\n            value: lineNum,\n            onChange: value => dispatch(setLineNum(value)),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.platformNum'),\n            value: platformNum || '',\n            onChange: value => dispatch(setPlatform(value)),\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.psdNum'),\n            value: psdNum,\n            onChange: value => dispatch(setPsdNum(value)),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'select',\n            label: t('StyleSidePanel.design.panelType'),\n            value: info_panel_type,\n            options: style === RmgStyle.GZMTR ? panelTypeGZMTROptions : panelTypeSHMetroOptions,\n            onChange: value => dispatch(setPanelType(value as PanelTypeGZMTR | PanelTypeShmetro)),\n            hidden: ![RmgStyle.GZMTR, RmgStyle.SHMetro].includes(style),\n        },\n        {\n            type: 'custom',\n            label: t('StyleSidePanel.design.direction'),\n            component: (\n                <RmgButtonGroup\n                    selections={directionSelections}\n                    defaultValue={direction}\n                    onChange={nextDirection => dispatch(setDirection(nextDirection))}\n                />\n            ),\n            minW: 'full',\n            oneLine: true,\n        },\n    ];\n\n    const staggerNameSelections = [\n        {\n            label: t('StyleSidePanel.design.alternatively'),\n            value: true,\n        },\n        {\n            label: t('StyleSidePanel.design.onOneSide'),\n            value: false,\n        },\n    ];\n\n    const mtrSpecifiedFields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('StyleSidePanel.design.nameDisplay'),\n            component: (\n                <HStack>\n                    <RmgButtonGroup\n                        selections={staggerNameSelections}\n                        defaultValue={namePosMTR.isStagger}\n                        onChange={value => dispatch(staggerStationNames(value))}\n                    />\n                    <Button\n                        size=\"xs\"\n                        variant=\"ghost\"\n                        leftIcon={<MdSwapVert />}\n                        onClick={() => dispatch(flipStationNames())}\n                    >\n                        {t('StyleSidePanel.design.flip')}\n                    </Button>\n                </HStack>\n            ),\n            minW: 'full',\n            oneLine: true,\n            hidden: ![RmgStyle.MTR].includes(style),\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.design.legacyDestination'),\n            isChecked: customiseMTRDest.isLegacy,\n            onChange: checked => dispatch(toggleLineNameBeforeDestination(checked)),\n            hidden: ![RmgStyle.MTR].includes(style),\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.design.overrideTerminal'),\n            isChecked: customiseMTRDest.terminal !== false,\n            onChange: checked => dispatch(customiseDestinationName(checked ? ['', ''] : false)),\n            hidden: ![RmgStyle.MTR].includes(style),\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.terminalZhName'),\n            value: customiseMTRDest.terminal ? customiseMTRDest.terminal[0] : '',\n            placeholder: '機場及博覽館',\n            onChange: value =>\n                dispatch(\n                    customiseDestinationName([value, customiseMTRDest.terminal ? customiseMTRDest.terminal[1] : ''])\n                ),\n            hidden: ![RmgStyle.MTR].includes(style) || customiseMTRDest.terminal === false,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.terminalEnName'),\n            value: customiseMTRDest.terminal ? customiseMTRDest.terminal[1] : '',\n            placeholder: 'Airport and AsiaWorld-Expo',\n            onChange: value =>\n                dispatch(\n                    customiseDestinationName([customiseMTRDest.terminal ? customiseMTRDest.terminal[0] : '', value])\n                ),\n            hidden: ![RmgStyle.MTR].includes(style) || customiseMTRDest.terminal === false,\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.design.title')}\n            </Heading>\n\n            <RmgFields fields={[...fields, ...mtrSpecifiedFields]} minW={130} />\n\n            <ColourModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                defaultTheme={theme}\n                onUpdate={nextTheme => dispatch(setTheme(nextTheme))}\n            />\n        </Box>\n    );\n}\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../../redux';\nimport { setLoop, setLoopBank, setLoopLeftAndRightFactor, setLoopBottomFactor } from '../../../redux/param/action';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function LoopSection() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const { branches } = useAppSelector(state => state.helper);\n    const { loop, loop_info } = useAppSelector(state => state.param);\n    const { bank, left_and_right_factor, bottom_factor } = loop_info;\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.loop.isLoop'),\n            isChecked: loop,\n            onChange: checked => dispatch(setLoop(checked)),\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.loop.isBank'),\n            isChecked: bank,\n            isDisabled: true,\n            onChange: checked => dispatch(setLoopBank(checked)),\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.loop.leftRightFactor'),\n            value: left_and_right_factor,\n            min: 0,\n            max: Math.floor((branches[0].length - bottom_factor * 2) / 2),\n            onChange: val => dispatch(setLoopLeftAndRightFactor(Math.floor(val))),\n            hidden: !loop,\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.loop.bottomFactor'),\n            value: bottom_factor,\n            min: 1,\n            max: Math.floor((branches[0].length - left_and_right_factor * 2) / 2),\n            onChange: val => dispatch(setLoopBottomFactor(Math.floor(val))),\n            hidden: !loop,\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.loop.title')}\n            </Heading>\n\n            <RmgFields fields={fields} />\n        </Box>\n    );\n}\n","import React from 'react';\nimport { HStack, IconButton } from '@chakra-ui/react';\nimport { Note } from '../../../constants/constants';\nimport { MdDelete } from 'react-icons/md';\nimport { RmgCard, RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\ninterface GZMTRNoteCardProps {\n    note: Note;\n    onUpdate?: (value: Note) => void;\n    onDelete?: () => void;\n}\n\nexport default function GZMTRNoteCard(props: GZMTRNoteCardProps) {\n    const { note, onUpdate, onDelete } = props;\n    const { t } = useTranslation();\n\n    const fields1: RmgFieldsField[] = [\n        {\n            type: 'textarea',\n            label: t('StyleSidePanel.note.zhNote'),\n            value: note[0],\n            onChange: value => onUpdate?.([value, note[1], note[2], note[3], note[4]]),\n        },\n        {\n            type: 'textarea',\n            label: t('StyleSidePanel.note.enNote'),\n            value: note[1],\n            onChange: value => onUpdate?.([note[0], value, note[2], note[3], note[4]]),\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.note.border'),\n            isChecked: note[4],\n            onChange: value => onUpdate?.([note[0], note[1], note[2], note[3], value]),\n            oneLine: true,\n        },\n    ];\n\n    const fields2: RmgFieldsField[] = [\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.note.positionX'),\n            value: note[2],\n            min: 0,\n            max: 100,\n            onChange: value => onUpdate?.([note[0], note[1], value, note[3], note[4]]),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.note.positionY'),\n            value: note[3],\n            min: 0,\n            max: 100,\n            onChange: value => onUpdate?.([note[0], note[1], note[2], value, note[4]]),\n        },\n    ];\n\n    return (\n        <RmgCard direction=\"column\">\n            <RmgFields fields={fields1} minW=\"full\" />\n            <HStack spacing={0.5}>\n                <RmgFields fields={fields2} />\n\n                <IconButton\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    aria-label={t('StyleSidePanel.note.remove')}\n                    onClick={() => onDelete?.()}\n                    icon={<MdDelete />}\n                />\n            </HStack>\n        </RmgCard>\n    );\n}\n","import React from 'react';\nimport { Box, Button, Heading, VStack } from '@chakra-ui/react';\nimport GZMTRNoteCard from './gzmtr-note-card';\nimport { addNote, removeNote, updateNote } from '../../../redux/param/action';\nimport { MdAdd } from 'react-icons/md';\nimport { useAppSelector } from '../../../redux';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nexport default function GZMTRNoteSection() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const notesGZMTR = useAppSelector(state => state.param.notesGZMTR);\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.note.title')}\n            </Heading>\n\n            <VStack spacing={0.5}>\n                {notesGZMTR.map((note, i) => (\n                    <GZMTRNoteCard\n                        key={i}\n                        note={note}\n                        onUpdate={value => dispatch(updateNote(i, value))}\n                        onDelete={() => dispatch(removeNote(i))}\n                    />\n                ))}\n\n                <Button\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    leftIcon={<MdAdd />}\n                    alignSelf=\"flex-end\"\n                    onClick={() => dispatch(addNote())}\n                >\n                    {t('StyleSidePanel.note.add')}\n                </Button>\n            </VStack>\n        </Box>\n    );\n}\n","import { Divider } from '@chakra-ui/react';\nimport React from 'react';\nimport { useAppSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport LayoutSection from './layout-section';\nimport DesignSection from './design-section';\nimport LoopSection from './loop-section';\nimport { RmgSidePanelBody } from '@railmapgen/rmg-components';\nimport GZMTRNoteSection from './gzmtr-note-section';\n\nexport default function StyleSidePanel() {\n    const { style } = useAppSelector(state => state.param);\n\n    return (\n        <RmgSidePanelBody>\n            <LayoutSection />\n\n            <Divider />\n\n            <DesignSection />\n\n            {style === RmgStyle.GZMTR && (\n                <>\n                    <Divider />\n\n                    <GZMTRNoteSection />\n                </>\n            )}\n\n            {style === RmgStyle.SHMetro && (\n                <>\n                    <Divider />\n\n                    <LoopSection />\n                </>\n            )}\n        </RmgSidePanelBody>\n    );\n}\n","import { StationDict } from './constants/constants';\n\n/**\n * Vertical position (in shares) of station icon if using MTR style (for consistency of method `RMGLine.newStnPossibleLoc()`).\n */\nexport const getYShareMTR = (stnId: string, stnList: StationDict): -1 | 0 | 1 => {\n    if (\n        ['linestart', 'lineend'].includes(stnId) ||\n        stnList[stnId].parents.length > 1 ||\n        stnList[stnId].children.length > 1\n    ) {\n        return 0;\n    }\n    var stnPred = stnList[stnId].parents[0];\n    if (stnPred) {\n        // parent exist\n        if (stnList[stnPred].children.length === 1) {\n            // no sibling, then y same as parent\n            return getYShareMTR(stnPred, stnList);\n        } else {\n            // sibling exists, then y depends on its idx of being children\n            return stnList[stnPred].children.indexOf(stnId) === 0 ? 1 : -1;\n        }\n    } else {\n        // no parent, must be linestart\n        return 0;\n    }\n};\n","import React, { RefObject } from 'react';\nimport {\n    AlertDialog,\n    AlertDialogBody,\n    AlertDialogContent,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogOverlay,\n    Button,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\n\ninterface RemoveConfirmModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    cancelRef?: RefObject<HTMLButtonElement>;\n    onConfirm: () => void;\n}\n\nexport default function RemoveConfirmModal(props: RemoveConfirmModalProps) {\n    const { isOpen, onClose, cancelRef, onConfirm } = props;\n    const { t } = useTranslation();\n\n    return (\n        <AlertDialog isOpen={isOpen} leastDestructiveRef={cancelRef} onClose={onClose}>\n            <AlertDialogOverlay>\n                <AlertDialogContent>\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                        {t('RemoveConfirmModal.title')}\n                    </AlertDialogHeader>\n\n                    <AlertDialogBody>Are you sure to remove station? You cannot undo this action.</AlertDialogBody>\n\n                    <AlertDialogFooter>\n                        <Button ref={cancelRef} onClick={onClose}>\n                            {t('RemoveConfirmModal.cancel')}\n                        </Button>\n                        <Button colorScheme=\"teal\" onClick={onConfirm} ml={3}>\n                            {t('RemoveConfirmModal.confirm')}\n                        </Button>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialogOverlay>\n        </AlertDialog>\n    );\n}\n","import { Button, HStack } from '@chakra-ui/react';\nimport { RmgSidePanelFooter } from '@railmapgen/rmg-components';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { removeInvalidColineOnRemoveStation } from '../../../redux/param/coline-action';\nimport { checkStationCouldBeRemoved, removeStation } from '../../../redux/param/remove-station-action';\nimport { useAppSelector } from '../../../redux';\nimport { setGlobalAlert, setSelectedStation, setSidePanelMode } from '../../../redux/app/action';\nimport RemoveConfirmModal from '../../modal/remove-confirm-modal';\nimport { setCurrentStation } from '../../../redux/param/action';\nimport { SidePanelMode } from '../../../constants/constants';\nimport { useTranslation } from 'react-i18next';\n\nexport default function StationSidePanelFooter() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const selectedStation = useAppSelector(state => state.app.selectedStation);\n\n    const [isRemoveModalOpen, setIsRemoveModalOpen] = useState(false);\n\n    const handleDelete = () => {\n        if (dispatch(checkStationCouldBeRemoved(selectedStation))) {\n            // close side panel\n            dispatch(setSidePanelMode(SidePanelMode.CLOSE));\n\n            // reset selected station\n            dispatch(setSelectedStation('linestart'));\n\n            dispatch(removeInvalidColineOnRemoveStation(selectedStation));\n            dispatch(removeStation(selectedStation));\n            setIsRemoveModalOpen(false);\n        } else {\n            dispatch(setGlobalAlert({ status: 'error', message: t('StationSidePanel.footer.errorOnRemove') }));\n        }\n    };\n\n    return (\n        <RmgSidePanelFooter>\n            <HStack>\n                <Button size=\"sm\" variant=\"outline\" onClick={() => dispatch(setCurrentStation(selectedStation))}>\n                    {t('StationSidePanel.footer.current')}\n                </Button>\n                <Button size=\"sm\" variant=\"outline\" onClick={() => setIsRemoveModalOpen(true)}>\n                    {t('StationSidePanel.footer.remove')}\n                </Button>\n            </HStack>\n\n            <RemoveConfirmModal\n                isOpen={isRemoveModalOpen}\n                onClose={() => setIsRemoveModalOpen(false)}\n                onConfirm={handleDelete}\n            />\n        </RmgSidePanelFooter>\n    );\n}\n","import { AppDispatch, RootState } from '../index';\nimport { getYShareMTR } from '../../methods';\nimport { StationDict } from '../../constants/constants';\nimport { setStationsBulk } from './action';\n\n/**\n * Return false when current algo can not handle this kind of station removal.\n * MUST BE CALLED AND CHECKED BEFORE removeStation!!!\n */\nexport const checkStationCouldBeRemoved = (stationId: string) => {\n    return (dispatch: AppDispatch, getState: () => RootState): boolean => {\n        const stationList = getState().param.stn_list;\n\n        const { parents, children } = stationList[stationId];\n\n        if (Object.keys(stationList).length === 4) {\n            console.log('removeStation():: failed as only 2 stations remaining');\n            return false;\n        } else if (parents.length === 2 && children.length === 2) {\n            // Todo: rewrite, join two branches rather than reject?\n            console.log('removeStation():: failed as branches on both sides cannot be combined');\n            return false;\n        }\n\n        // reject if station is the last one on main branch\n        const isNotLastMainBranchStn = Object.keys(stationList).some(\n            id => ![stationId, 'linestart', 'lineend'].includes(id) && getYShareMTR(id, stationList) === 0\n        );\n        if (!isNotLastMainBranchStn) {\n            console.log('removeStation():: failed as selected station is the only station without siblings');\n            return false;\n        }\n\n        return true;\n    };\n};\n\nexport const removeStation = (stationId: string) => {\n    // checkStationCouldBeRemoved BEFORE removeStation!!!\n    return (dispatch: AppDispatch, getState: () => RootState) => {\n        const stationList = getState().param.stn_list;\n        const { parents, children } = stationList[stationId];\n\n        let newStnList = JSON.parse(JSON.stringify(stationList)) as StationDict;\n\n        if (parents.length === 2 || children.length === 2) {\n            /**\n             * stn1 - stn2 - stn3\n             *         ^   \\\n             *               stn4\n             */\n            parents.forEach(parId => {\n                newStnList[parId].children = children;\n            });\n            children.forEach(childId => {\n                newStnList[childId].parents = parents;\n            });\n            if (parents.length === 1) {\n                newStnList[parents[0]].branch.right = newStnList[stationId].branch.right;\n            }\n            if (children.length === 1) {\n                newStnList[children[0]].branch.left = newStnList[stationId].branch.left;\n            }\n        } else if (stationList[parents[0]].children.length === 2 && stationList[children[0]].parents.length === 2) {\n            /**\n             * stn1 -     stn2    - stn3\n             *      \\      ^      /\n             *        stn4 - stn5\n             */\n            newStnList = {\n                ...stationList,\n                [parents[0]]: {\n                    ...stationList[parents[0]],\n                    children: stationList[parents[0]].children.filter(id => id !== stationId),\n                    branch: {\n                        ...stationList[parents[0]].branch,\n                        right: [],\n                    },\n                },\n                [children[0]]: {\n                    ...stationList[children[0]],\n                    parents: stationList[children[0]].parents.filter(id => id !== stationId),\n                    branch: {\n                        ...stationList[children[0]].branch,\n                        left: [],\n                    },\n                },\n            };\n        } else {\n            /**\n             * stn1 - stn2\n             *      \\\n             *        stn3 - stn4\n             *         ^\n             */\n\n            // parents have length 1\n            parents.forEach(parId => {\n                var idx = newStnList[parId].children.indexOf(stationId);\n                if (children.length) {\n                    newStnList[parId].children[idx] = children[0];\n                } else {\n                    // Right dest\n                    newStnList[parId].children.splice(idx, 1);\n                }\n\n                if (newStnList[parId].branch.right[1] === stationId) {\n                    newStnList[parId].branch.right[1] = children[0];\n                }\n            });\n\n            // children have length 1\n            children.forEach(childId => {\n                var idx = newStnList[childId].parents.indexOf(stationId);\n                if (parents.length) {\n                    newStnList[childId].parents[idx] = parents[0];\n                } else {\n                    // Left dest\n                    newStnList[childId].parents.splice(idx, 1);\n                }\n\n                if (newStnList[childId].branch.left[1] === stationId) {\n                    newStnList[childId].branch.left[1] = parents[0];\n                }\n            });\n        }\n\n        delete newStnList[stationId];\n        dispatch(setStationsBulk(newStnList));\n    };\n};\n","import { RmgCard, RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport React, { useState } from 'react';\nimport { ColineInfo, InterchangeInfo, Theme } from '../../../constants/constants';\nimport ThemeButton from '../theme-button';\nimport ColourModal from '../../modal/colour-modal/colour-modal';\nimport { HStack, IconButton } from '@chakra-ui/react';\nimport { MdDelete } from 'react-icons/md';\nimport { useTranslation } from 'react-i18next';\n\ninterface ColineCardProps {\n    colineInfo: ColineInfo;\n    routeOptions: Record<string, string>;\n    onUpdateRoute?: (route: string) => void;\n    onUpdateColourInfo?: (colourInfo: InterchangeInfo) => void;\n    onDelete?: (colourIndex: number) => void;\n}\n\nexport default function ColineCard(props: ColineCardProps) {\n    const { colineInfo, routeOptions, onUpdateRoute, onUpdateColourInfo, onDelete } = props;\n    const { t } = useTranslation();\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const fields1: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: 'Route',\n            value: [colineInfo.from, colineInfo.to].join(','),\n            options: routeOptions,\n            onChange: value => onUpdateRoute?.(value as string),\n        },\n    ];\n\n    const fields2: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('Colour'),\n            component: (\n                <ThemeButton\n                    theme={[\n                        colineInfo.colors[0][0],\n                        colineInfo.colors[0][1],\n                        colineInfo.colors[0][2],\n                        colineInfo.colors[0][3],\n                    ]}\n                    onClick={() => setIsModalOpen(true)}\n                />\n            ),\n        },\n        {\n            type: 'input',\n            label: t('Chinese name'),\n            value: colineInfo.colors[0][4],\n            minW: 120,\n            onChange: value =>\n                onUpdateColourInfo?.([\n                    colineInfo.colors[0][0],\n                    colineInfo.colors[0][1],\n                    colineInfo.colors[0][2],\n                    colineInfo.colors[0][3],\n                    value,\n                    colineInfo.colors[0][5],\n                ]),\n        },\n        {\n            type: 'input',\n            label: t('English name'),\n            value: colineInfo.colors[0][5],\n            minW: 120,\n            onChange: value =>\n                onUpdateColourInfo?.([\n                    colineInfo.colors[0][0],\n                    colineInfo.colors[0][1],\n                    colineInfo.colors[0][2],\n                    colineInfo.colors[0][3],\n                    colineInfo.colors[0][4],\n                    value,\n                ]),\n        },\n    ];\n\n    return (\n        <RmgCard direction=\"column\">\n            <RmgFields fields={fields1} minW=\"full\" />\n            <HStack spacing={0.5}>\n                <RmgFields fields={fields2} />\n\n                <IconButton\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    aria-label=\"Delete colour for route\"\n                    onClick={() => onDelete?.(0)}\n                    icon={<MdDelete />}\n                />\n            </HStack>\n\n            <ColourModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                defaultTheme={colineInfo.colors[0].slice(0, 4) as Theme}\n                onUpdate={theme => onUpdateColourInfo?.([...theme, colineInfo.colors[0][4], colineInfo.colors[0][5]])}\n            />\n        </RmgCard>\n    );\n}\n","import React from 'react';\nimport { Button, Heading, VStack } from '@chakra-ui/react';\nimport { useAppDispatch, useAppSelector } from '../../../redux';\nimport {\n    addColine,\n    findAllColinesInBranch,\n    getPossibleCombinations,\n    removeColineColor,\n    updateColine,\n    updateColineColor,\n} from '../../../redux/param/coline-action';\nimport ColineCard from './coline-card';\nimport { MdAdd } from 'react-icons/md';\nimport { MonoColour } from '../../../constants/constants';\nimport { setGlobalAlert } from '../../../redux/app/action';\nimport { useTranslation } from 'react-i18next';\n\nexport default function ColineSection() {\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const selectedBranch = useAppSelector(state => state.app.selectedBranch);\n    const { theme, stn_list: stationList } = useAppSelector(state => state.param);\n\n    const colineInfoList = dispatch(findAllColinesInBranch(selectedBranch));\n    const possibleCombinations = dispatch(getPossibleCombinations(selectedBranch));\n\n    const getStationPairDisplayName = (pair: [string, string]) => {\n        return pair.map(id => stationList[id].name.join(' - ')).join(' ~ ');\n    };\n\n    const routeOptions = possibleCombinations.reduce<Record<string, string>>(\n        (acc, cur) => ({\n            ...acc,\n            [cur.join(',')]: getStationPairDisplayName(cur),\n        }),\n        {}\n    );\n\n    const handleAddTrackSharing = () => {\n        console.log(\n            `ColineSection.handleAddTrackSharing():: Adding track sharing to branch ${selectedBranch} with default combination`,\n            possibleCombinations[0]\n        );\n        dispatch(\n            addColine(possibleCombinations[0][0], possibleCombinations[0][1], [\n                [theme[0], '', '#AAAAAA', MonoColour.white, '', ''],\n            ])\n        );\n    };\n\n    const handleUpdateRoute = (colineId: string) => (route: string) => {\n        const [from, to] = route.split(',');\n        console.log(`ColineSection.handleUpdateRoute():: Updating route, colineId=${colineId}, from=${from}, to=${to}`);\n\n        try {\n            dispatch(updateColine(colineId, from, to));\n        } catch {\n            dispatch(setGlobalAlert({ status: 'error', message: 'Unable to draw this share track.' }));\n        }\n    };\n\n    const handleDeleteColour = (colineId: string, colourIndex: number) => {\n        dispatch(removeColineColor(colineId, colourIndex));\n    };\n\n    return (\n        <VStack align=\"flex-start\" p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('BranchSidePanel.coline.title')}\n            </Heading>\n\n            {Object.entries(colineInfoList).map(([id, colineInfo]) => (\n                <ColineCard\n                    key={id}\n                    colineInfo={colineInfo}\n                    routeOptions={routeOptions}\n                    onUpdateRoute={handleUpdateRoute(id)}\n                    onUpdateColourInfo={colourInfo => dispatch(updateColineColor(id, 0, colourInfo))}\n                    onDelete={colourIndex => handleDeleteColour(id, colourIndex)}\n                />\n            ))}\n\n            {(selectedBranch === 0 || Object.keys(colineInfoList).length === 0) && (\n                <Button\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    alignSelf=\"flex-end\"\n                    leftIcon={<MdAdd />}\n                    onClick={handleAddTrackSharing}\n                >\n                    {t('BranchSidePanel.coline.add')}\n                </Button>\n            )}\n        </VStack>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\nimport { useAppDispatch, useAppSelector } from '../../redux';\nimport { RmgStyle } from '../../constants/constants';\nimport { isColineBranch } from '../../redux/param/coline-action';\nimport { autoNumbering } from '../../redux/param/action';\n\ninterface AutoNumModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function AutoNumModal(props: AutoNumModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const selectedBranch = useAppSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useAppSelector(state => state.param);\n    const branches = useAppSelector(state => state.helper.branches);\n\n    const [where, setWhere] = useState(selectedBranch);\n    const [from, setFrom] = useState('1');\n    const [maxLength, setMaxLength] = useState('2');\n    const [sort, setSort] = useState<'asc' | 'desc'>('asc');\n\n    useEffect(() => {\n        setWhere(selectedBranch);\n    }, [selectedBranch]);\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('AutoNumModal.where'),\n            value: where,\n            options: {\n                ...branches.reduce(\n                    (acc, cur, idx) => ({\n                        ...acc,\n                        [idx]:\n                            idx === 0\n                                ? t('AutoNumModal.main')\n                                : style !== RmgStyle.SHMetro || !isColineBranch(cur, stationList)\n                                ? t('AutoNumModal.branch') + ' ' + idx\n                                : t('AutoNumModal.external') + ' ' + idx,\n                    }),\n                    {}\n                ),\n            },\n            onChange: value => setWhere(value as number),\n        },\n        {\n            type: 'input',\n            label: t('AutoNumModal.from'),\n            value: from,\n            validator: value => !isNaN(Number(value)),\n            onChange: setFrom,\n            debouncedDelay: 0,\n        },\n        {\n            type: 'input',\n            label: t('AutoNumModal.maxLength'),\n            validator: value => !isNaN(Number(value)),\n            value: maxLength,\n            onChange: setMaxLength,\n            debouncedDelay: 0,\n        },\n        {\n            type: 'select',\n            label: t('AutoNumModal.sort'),\n            value: sort,\n            options: {\n                asc: t('AutoNumModal.asc'),\n                desc: t('AutoNumModal.desc'),\n            },\n            onChange: value => setSort(value as 'asc' | 'desc'),\n        },\n    ];\n\n    const handleSubmit = () => {\n        dispatch(autoNumbering(where, Number(from), Number(maxLength), sort));\n        onClose();\n    };\n\n    const isSubmitDisabled = !from || !maxLength || isNaN(Number(from)) || isNaN(Number(maxLength));\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('AutoNumModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button colorScheme=\"teal\" isDisabled={isSubmitDisabled} onClick={handleSubmit}>\n                        {t('AutoNumModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Box, Button, Flex, Heading } from '@chakra-ui/react';\nimport { MdCached, MdFilter1 } from 'react-icons/md';\nimport AutoNumModal from '../../modal/auto-num-modal';\nimport { useAppDispatch, useAppSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport { reverseStations } from '../../../redux/param/action';\n\nexport default function ActionSection() {\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const style = useAppSelector(state => state.param.style);\n\n    const [isAutoNumModalOpen, setIsAutoNumModalOpen] = useState(false);\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('BranchSidePanel.action.title')}\n            </Heading>\n\n            <Flex\n                wrap=\"wrap\"\n                sx={{\n                    p: 1,\n\n                    '&> *': {\n                        flexShrink: 0,\n                        flexBasis: '100%',\n\n                        '&:not(:first-child)': {\n                            marginTop: 2,\n                        },\n                    },\n                }}\n            >\n                {style === RmgStyle.GZMTR && (\n                    <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        leftIcon={<MdFilter1 />}\n                        alignSelf=\"flex-end\"\n                        onClick={() => setIsAutoNumModalOpen(true)}\n                    >\n                        {t('BranchSidePanel.action.autoNum')}\n                    </Button>\n                )}\n\n                <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    leftIcon={<MdCached />}\n                    alignSelf=\"flex-end\"\n                    onClick={() => dispatch(reverseStations(style === RmgStyle.SHMetro))}\n                >\n                    {style === RmgStyle.SHMetro\n                        ? t('BranchSidePanel.action.flip')\n                        : t('BranchSidePanel.action.reverse')}\n                </Button>\n            </Flex>\n\n            <AutoNumModal isOpen={isAutoNumModalOpen} onClose={() => setIsAutoNumModalOpen(false)} />\n        </Box>\n    );\n}\n","import { RmgSidePanelBody } from '@railmapgen/rmg-components';\nimport React from 'react';\nimport ColineSection from './coline-section';\nimport { Divider } from '@chakra-ui/react';\nimport ActionSection from './action-section';\nimport { useAppSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport { isColineBranch } from '../../../redux/param/coline-action';\n\nexport default function BranchSidePanel() {\n    const selectedBranch = useAppSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useAppSelector(state => state.param);\n    const branches = useAppSelector(state => state.helper.branches);\n\n    return (\n        <RmgSidePanelBody>\n            {style === RmgStyle.SHMetro &&\n                (selectedBranch === 0 || isColineBranch(branches[selectedBranch], stationList)) && (\n                    <>\n                        <ColineSection />\n                        <Divider />\n                    </>\n                )}\n\n            <ActionSection />\n        </RmgSidePanelBody>\n    );\n}\n","import React, { ReactNode } from 'react';\nimport { useAppSelector } from '../../redux';\nimport { setSidePanelMode } from '../../redux/app/action';\nimport { useDispatch } from 'react-redux';\nimport { SidePanelMode } from '../../constants/constants';\nimport StationSidePanel from './station-side-panel/station-side-panel';\nimport StyleSidePanel from './style-side-panel/style-side-panel';\nimport { RmgMultiLineString, RmgSidePanel, RmgSidePanelHeader } from '@railmapgen/rmg-components';\nimport StationSidePanelFooter from './station-side-panel/station-side-panel-footer';\nimport BranchSidePanel from './branch-side-panel/branch-side-panel';\nimport { useTranslation } from 'react-i18next';\n\nconst SIDE_PANEL_WIDTH = 375;\n\nexport default function SidePanel() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const { sidePanelMode, selectedStation } = useAppSelector(state => state.app);\n    const name = useAppSelector(state => state.param.stn_list[selectedStation]?.name);\n\n    const mode: Record<SidePanelMode, { header: ReactNode; body?: ReactNode; footer?: ReactNode }> = {\n        STATION: {\n            header: <RmgMultiLineString text={name?.join(' - ') || ''} />,\n            body: <StationSidePanel />,\n            footer: <StationSidePanelFooter />,\n        },\n        STYLE: { header: t('StyleSidePanel.header'), body: <StyleSidePanel /> },\n        BRANCH: { header: t('BranchSidePanel.header'), body: <BranchSidePanel /> },\n        CLOSE: { header: 'Close' },\n    };\n\n    const handleClose = () => {\n        dispatch(setSidePanelMode(SidePanelMode.CLOSE));\n    };\n\n    return (\n        <RmgSidePanel isOpen={sidePanelMode !== SidePanelMode.CLOSE} width={SIDE_PANEL_WIDTH} header=\"Dummy header\">\n            <RmgSidePanelHeader onClose={handleClose}>{mode[sidePanelMode].header}</RmgSidePanelHeader>\n            {mode[sidePanelMode]?.body}\n            {mode[sidePanelMode]?.footer}\n        </RmgSidePanel>\n    );\n}\n","export const downloadAs = (filename: string, type: string, data: any) => {\n    const blob = new Blob([data], { type });\n    downloadBlobAs(filename, blob);\n};\n\nexport const downloadBlobAs = (filename: string, blob: Blob) => {\n    const url = window.URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n};\n\nexport const readFileAsText = (file: File) => {\n    return new Promise((resolve: (text: string) => void) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve(reader.result as string);\n        reader.readAsText(file);\n    });\n};\n","import { CanvasType, RmgStyle } from '../constants/constants';\n\nexport const cloneSvgCanvas = async (\n    canvas: CanvasType,\n    rmgStyle: RmgStyle,\n    isTransparent?: boolean,\n    isShowBorder?: boolean,\n    scale?: number\n): Promise<SVGSVGElement> => {\n    let [, thisSVGHeight] = ['--rmg-svg-width', '--rmg-svg-height']\n        .map(\n            key =>\n                (document.querySelector(`svg#${canvas}`) as SVGSVGElement).style.getPropertyValue(key).match(/\\d+/g)![0]\n        )\n        .map(Number);\n\n    const elem = document.querySelector(`svg#${canvas}`)!.cloneNode(true) as SVGSVGElement;\n    // elem.setAttribute('width', (thisSVGWidth * scaleFactor).toString());\n    elem.setAttribute('height', ((thisSVGHeight * (scale || 100)) / 100).toString());\n    elem.style.setProperty('all', 'initial');\n\n    ['share', canvas]\n        .map(tag =>\n            [\n                ...(\n                    [...document.querySelectorAll('link')].filter(l => l.id === 'css_' + tag)[0]?.sheet as CSSStyleSheet\n                ).cssRules,\n            ]\n                .map(rule => rule.cssText)\n                .join(' ')\n        )\n        .forEach(txt => {\n            let s = document.createElement('style');\n            s.textContent = txt;\n            elem.prepend(s);\n        });\n\n    elem.querySelector('rect#canvas-border')?.setAttribute('stroke', isShowBorder ? 'black' : 'none');\n    elem.querySelector('rect#canvas-bg')?.setAttribute('fill', isTransparent ? 'none' : 'white');\n\n    if (rmgStyle === RmgStyle.MTR) {\n        try {\n            const uris = await getBase64FontFace(elem);\n            const s = document.createElement('style');\n            s.textContent = uris.join('\\n');\n            elem.prepend(s);\n        } catch (err) {\n            alert('Failed to fonts. Fonts in the exported PNG will be missing.');\n            console.error(err);\n        }\n    }\n\n    return elem;\n};\n\n/**\n * Convert a `Blob` into Base64 data URL.\n * @param blob\n */\nconst readBlobAsDataURL = (blob: Blob): Promise<string> => {\n    return new Promise((resolve: (value: string) => void) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve(reader.result as string);\n        reader.readAsDataURL(blob);\n    });\n};\n\nconst matchCssRuleByFontFace = (rules: CSSFontFaceRule[], font: FontFace): CSSFontFaceRule | undefined => {\n    return rules.find(rule => {\n        const cssStyle = rule.style as any;\n        return (\n            cssStyle.fontFamily.replace(/^\"(.+)\"$/, '$1') === font.family && cssStyle.unicodeRange === font.unicodeRange\n        );\n    });\n};\n\nexport const getBase64FontFace = async (svgEl: SVGSVGElement): Promise<string[]> => {\n    const uniqueCharacters = Array.from(\n        new Set(\n            [\n                ...svgEl.querySelectorAll<SVGElement>('.rmg-name__zh'),\n                ...svgEl.querySelectorAll<SVGElement>('.rmg-name__en'),\n            ]\n                .map(el => el.innerHTML)\n                .join('')\n                .replace(/[\\s]/g, '')\n        )\n    ).join('');\n\n    const fontFaceList = await document.fonts.load('80px GenYoMin TW, Vegur', uniqueCharacters);\n    const cssRules = Array.from(\n        (document.querySelector<HTMLLinkElement>('link#css_share')!.sheet!.cssRules[0] as CSSImportRule).styleSheet\n            .cssRules\n    ) as CSSFontFaceRule[];\n    const distinctCssRules = fontFaceList.reduce<CSSFontFaceRule[]>((acc, cur) => {\n        const matchedRule = matchCssRuleByFontFace(cssRules, cur);\n        if (matchedRule) {\n            const existence = acc.find(rule => {\n                const ruleStyle = rule.style as any;\n                const matchedStyle = matchedRule.style as any;\n                return (\n                    ruleStyle.fontFamily === matchedStyle.fontFamily &&\n                    ruleStyle.unicodeRange === matchedStyle.unicodeRange\n                );\n            });\n            return existence ? acc : acc.concat(matchedRule);\n        } else {\n            return acc;\n        }\n    }, []);\n\n    return await Promise.all(\n        distinctCssRules.map(async cssRule => {\n            try {\n                const ruleStyleSrc = (cssRule.style as any).src;\n                const isSafari = navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');\n                const url = isSafari\n                    ? ruleStyleSrc.replace(/^url\\(([\\S]+)\\).*$/, '$1')\n                    : process.env.PUBLIC_URL + '/styles/' + ruleStyleSrc.match(/^url\\(\"([\\S*]+)\"\\)/)?.[1];\n\n                const fontResp = await fetch(url);\n                const fontDataUri = await readBlobAsDataURL(await fontResp.blob());\n                return cssRule.cssText.replace(/src:[ \\w('\",\\-:/.)]+;/g, `src: url('${fontDataUri}'); `);\n            } catch (err) {\n                console.error(err);\n                return '';\n            }\n        })\n    );\n};\n\nexport const test = async (svgEl: SVGSVGElement, scale: number): Promise<Blob> => {\n    let svgW = svgEl.viewBox.baseVal.width;\n    let svgH = svgEl.viewBox.baseVal.height;\n\n    // svgEl.removeAttribute('height');\n\n    let canvas = document.querySelectorAll('canvas')[0];\n    canvas.width = Number(svgW) * window.devicePixelRatio * scale;\n    canvas.height = Number(svgH) * window.devicePixelRatio * scale;\n\n    svgEl.setAttribute('width', canvas.width.toString());\n    svgEl.setAttribute('height', canvas.height.toString());\n\n    let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // bypass Chrome min font size (to be improved)\n\n    svgEl.querySelectorAll('.rmg-name__en.rmg-name__mtr--station').forEach(el => el.setAttribute('font-size', '11px'));\n\n    svgEl.querySelectorAll('.rmg-name__zh.IntName').forEach(el => el.setAttribute('font-size', '10px'));\n\n    svgEl.querySelectorAll('.rmg-name__en.rmg-name__mtr--osi').forEach(el => el.setAttribute('font-size', '9px'));\n\n    svgEl\n        .querySelectorAll('.rmg-name__en.rmg-name__gzmtr--next2-dest')\n        .forEach(el => el.setAttribute('font-size', '8.5px'));\n\n    svgEl.querySelectorAll('.rmg-name__en.IntName').forEach(el => el.setAttribute('font-size', '7px'));\n\n    // svgEl\n    //     .querySelectorAll('text:not([font-size]), tspan:not([font-size])')\n    //     .forEach((el) => el.setAttribute('font-size', window.getComputedStyle(el).fontSize));\n\n    svgEl.querySelectorAll('text, tspan').forEach(el => {\n        let elStyle = window.getComputedStyle(el);\n        el.setAttribute('font-family', elStyle.fontFamily);\n        el.setAttribute('fill', elStyle.fill);\n        el.setAttribute('dominant-baseline', elStyle.dominantBaseline);\n        el.setAttribute('text-anchor', elStyle.textAnchor || '');\n        // el.removeAttribute('class');\n    });\n\n    // https://stackoverflow.com/questions/46399223/async-await-in-image-loading/52851789\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            canvas.toBlob(blob => resolve(blob!), 'image/png');\n            // return resolve(canvas.toDataURL('image/png'));\n        };\n        img.onerror = reject;\n        img.src = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgEl.outerHTML)));\n    });\n};\n","import React, { useState } from 'react';\nimport {\n    Button,\n    HStack,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { canvasConfig, CanvasType, RmgStyle } from '../../constants/constants';\nimport { useAppSelector } from '../../redux';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport JSZip from 'jszip';\nimport { setCurrentStation } from '../../redux/param/action';\nimport { useDispatch } from 'react-redux';\nimport { cloneSvgCanvas, test } from '../../util/export-utils';\nimport { downloadAs, downloadBlobAs } from '../../util/utils';\nimport { useTranslation } from 'react-i18next';\n\ninterface DownloadModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function DownloadModal(props: DownloadModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n\n    const dispatch = useDispatch();\n\n    const [canvasToDownload, setCanvasToDownload] = useState('');\n    const [isTransparent, setIsTransparent] = useState(false);\n    const [isShowBorder, setIsShowBorder] = useState(false);\n    const [scale, setScale] = useState(100);\n    const [format, setFormat] = useState('png');\n\n    const {\n        style,\n        stn_list: stationList,\n        current_stn_idx: currentStationId,\n        line_name: lineName,\n    } = useAppSelector(state => state.param);\n\n    const canvasOptions = canvasConfig[style].reduce<Record<string, string>>(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: cur,\n        }),\n        { '': t('DownloadModal.pleaseSelect') }\n    );\n\n    const scaleOptions = [25, 33, 50, 67, 75, 80, 90, 100, 110, 125, 150, 175, 200, 250, 300, 400, 500].reduce<\n        Record<number, string>\n    >(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: `${cur}%`,\n        }),\n        {}\n    );\n\n    const formatOptions = {\n        png: t('DownloadModal.png'),\n        svg: t('DownloadModal.svg'),\n    };\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('DownloadModal.canvas'),\n            value: canvasToDownload,\n            options: canvasOptions,\n            disabledOptions: [''],\n            onChange: value => setCanvasToDownload(value as CanvasType),\n            minW: 'full',\n        },\n        {\n            type: 'switch',\n            label: t('DownloadModal.transparent'),\n            isChecked: isTransparent,\n            onChange: setIsTransparent,\n            oneLine: true,\n            minW: 'full',\n        },\n        {\n            type: 'switch',\n            label: t('DownloadModal.showBorder'),\n            isChecked: isShowBorder,\n            onChange: setIsShowBorder,\n            oneLine: true,\n            minW: 'full',\n        },\n        {\n            type: 'select',\n            label: t('DownloadModal.scale'),\n            value: scale,\n            options: scaleOptions,\n            onChange: value => setScale(value as number),\n        },\n        {\n            type: 'select',\n            label: t('DownloadModal.format'),\n            value: format,\n            options: formatOptions,\n            onChange: value => setFormat(value as string),\n        },\n    ];\n\n    const handleDownload = async (option: 'current' | 'all') => {\n        const stationIdListToDownload =\n            option === 'current'\n                ? [currentStationId]\n                : Object.keys(stationList).filter(id => !['linestart', 'lineend'].includes(id));\n\n        const zip = new JSZip();\n\n        for (const stnId of stationIdListToDownload) {\n            // wait for svg elements updated for station A before we dispatch the current station to B.\n            await dispatch(setCurrentStation(stnId));\n\n            const elem = await cloneSvgCanvas(\n                canvasToDownload as CanvasType,\n                style,\n                isTransparent,\n                isShowBorder,\n                scale\n            );\n\n            // append svg to the document so the bbox will be loaded correctly\n            // (but not for gzmtr and have no idea why)\n            document.body.appendChild(elem);\n\n            const filename = `rmg.${stnId}.${stationList[stnId].name[0]}.${stationList[stnId].name[1]}`.replaceAll(\n                ' ',\n                '_'\n            );\n            if (format === 'png') {\n                const blob = await test(elem, scale / 100);\n                if (navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome')) {\n                    await new Promise<void>(resolve => {\n                        setTimeout(() => {\n                            console.log('Sleep 1 second for Safari');\n                            resolve();\n                        }, 1000);\n                    });\n                }\n\n                if (stationIdListToDownload.length > 1) {\n                    // batch download and split base64 for this\n                    // https://stackoverflow.com/questions/31305485/export-resized-image-in-canvas-to-new-jszip-package\n                    zip.file(`${filename}.png`, blob);\n                } else {\n                    downloadBlobAs(`${filename}.png`, blob);\n                }\n            } else if (format === 'svg') {\n                elem.removeAttribute('height');\n                const data = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(elem.outerHTML)));\n\n                if (stationIdListToDownload.length > 1) {\n                    zip.file(`${filename}.svg`, data.split('base64,')[1], { base64: true });\n                } else {\n                    downloadAs(filename + '.svg', 'image/svg+xml', elem.outerHTML);\n                }\n            }\n\n            // don't forget to release it after use\n            document.body.removeChild(elem);\n        }\n\n        // generate the zip for batch download\n        if (stationIdListToDownload.length > 1) {\n            const zipData = await zip.generateAsync({ type: 'blob' });\n            const filename = `rmg.${lineName[0]}.${lineName[1]}.zip`.replaceAll(' ', '_');\n            downloadBlobAs(filename, zipData);\n        }\n\n        // revert to original station\n        await dispatch(setCurrentStation(currentStationId));\n        onClose();\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('DownloadModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <HStack>\n                        <Button\n                            colorScheme=\"teal\"\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handleDownload('current')}\n                            disabled={!canvasToDownload}\n                        >\n                            {t('DownloadModal.downloadOne')}\n                        </Button>\n                        {style !== RmgStyle.GZMTR && (\n                            <Button\n                                colorScheme=\"teal\"\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handleDownload('all')}\n                                disabled={!canvasToDownload}\n                            >\n                                {t('DownloadModal.downloadAll')}\n                            </Button>\n                        )}\n                    </HStack>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useState } from 'react';\nimport { Button, Menu, MenuButton, MenuList, MenuItem } from '@chakra-ui/react';\nimport { MdExpandMore } from 'react-icons/md';\nimport { downloadAs } from '../../util/utils';\nimport { useAppSelector } from '../../redux';\nimport { useTranslation } from 'react-i18next';\nimport DownloadModal from '../modal/download-modal';\n\nexport default function DownloadActions() {\n    const { t } = useTranslation();\n\n    const [isDownloadModalOpen, setIsDownloadModalOpen] = useState(false);\n\n    const param = useAppSelector(state => state.param);\n\n    const handleDownloadJson = () => {\n        downloadAs(`RMG_${new Date().valueOf()}.json`, 'application/json', JSON.stringify(param));\n    };\n\n    return (\n        <Menu>\n            <MenuButton as={Button} variant=\"ghost\" size=\"sm\" rightIcon={<MdExpandMore />}>\n                {t('DownloadActions.downloads')}\n            </MenuButton>\n            <MenuList>\n                <MenuItem onClick={handleDownloadJson}>{t('DownloadActions.configFile')}</MenuItem>\n                <MenuItem onClick={() => setIsDownloadModalOpen(true)}>{t('DownloadActions.images')}</MenuItem>\n            </MenuList>\n\n            <DownloadModal isOpen={isDownloadModalOpen} onClose={() => setIsDownloadModalOpen(false)} />\n        </Menu>\n    );\n}\n","import { LanguageCode, Translation } from './constants';\n\nexport enum CompanyCode {\n    basic = 'basic',\n    bjsubway = 'bjsubway',\n    fmetro = 'fmetro',\n    gzmtr = 'gzmtr',\n    kmrailtransit = 'kmrailtransit',\n    kvtransit = 'kvtransit',\n    mlm = 'mlm',\n    mtr = 'mtr',\n    njmetro = 'njmetro',\n    qdmetro = 'qdmetro',\n    shmetro = 'shmetro',\n    saopaulometro = 'saopaulometro',\n    szmetro = 'szmetro',\n    zzmetro = 'zzmetro',\n}\n\ninterface CompanyEntry {\n    id: CompanyCode;\n    name: Translation;\n}\n\nexport const companies: CompanyEntry[] = [\n    {\n        id: CompanyCode.basic,\n        name: {\n            [LanguageCode.English]: 'Basic',\n            [LanguageCode.Chinese]: '基本',\n        },\n    },\n\n    // Templates with styles supported\n    {\n        id: CompanyCode.mtr,\n        name: {\n            [LanguageCode.English]: 'MTR',\n            [LanguageCode.ChineseSimp]: '港铁',\n            [LanguageCode.ChineseTrad]: '港鐵',\n        },\n    },\n    {\n        id: CompanyCode.gzmtr,\n        name: {\n            [LanguageCode.English]: 'Guangzhou Metro',\n            [LanguageCode.ChineseSimp]: '广州地铁',\n            [LanguageCode.ChineseTrad]: '廣州地鐵',\n        },\n    },\n    {\n        id: CompanyCode.shmetro,\n        name: {\n            [LanguageCode.English]: 'Shanghai Metro',\n            [LanguageCode.ChineseSimp]: '上海地铁',\n            [LanguageCode.ChineseTrad]: '上海地鐵',\n        },\n    },\n\n    // Third-party templates\n    {\n        id: CompanyCode.bjsubway,\n        name: {\n            [LanguageCode.English]: 'Beijing Subway',\n            [LanguageCode.ChineseSimp]: '北京地铁',\n            [LanguageCode.ChineseTrad]: '北京地鐵',\n        },\n    },\n    {\n        id: CompanyCode.fmetro,\n        name: {\n            en: 'Foshan Metro',\n            'zh-Hans': '佛山地铁',\n            'zh-Hant': '佛山地鐵',\n        },\n    },\n    {\n        id: CompanyCode.kmrailtransit,\n        name: {\n            en: 'Kunming Metro',\n            'zh-Hans': '昆明地铁',\n            'zh-Hant': '昆明地鐵',\n        },\n    },\n    {\n        id: CompanyCode.kvtransit,\n        name: {\n            [LanguageCode.English]: 'Klang Valley Integrated Transit System',\n            [LanguageCode.ChineseSimp]: '巴生谷综合运输系统',\n            [LanguageCode.ChineseTrad]: '巴生谷綜合運輸系統',\n        },\n    },\n    {\n        id: CompanyCode.mlm,\n        name: {\n            [LanguageCode.English]: 'Macao LRT',\n            [LanguageCode.Portuguese]: 'Metro Ligeiro de Macau',\n            [LanguageCode.ChineseSimp]: '澳门轻轨',\n            [LanguageCode.ChineseTrad]: '澳門輕軌',\n        },\n    },\n    {\n        id: CompanyCode.njmetro,\n        name: {\n            [LanguageCode.English]: 'Nanjing Metro',\n            [LanguageCode.ChineseSimp]: '南京地铁',\n            [LanguageCode.ChineseTrad]: '南京地鐵',\n        },\n    },\n    {\n        id: CompanyCode.qdmetro,\n        name: {\n            en: 'Qingdao Metro',\n            'zh-Hans': '青岛地铁',\n            'zh-Hant': '青島地鐵',\n        },\n    },\n    {\n        id: CompanyCode.saopaulometro,\n        name: {\n            en: 'São Paulo Metro',\n            pt: 'Metrô de São Paulo',\n            'zh-Hans': '圣保罗地铁',\n            'zh-Hant': '聖保羅地鐵',\n        },\n    },\n    {\n        id: CompanyCode.szmetro,\n        name: {\n            [LanguageCode.English]: 'Shenzhen Metro',\n            [LanguageCode.ChineseSimp]: '深圳地铁',\n            [LanguageCode.ChineseTrad]: '深圳地鐵',\n        },\n    },\n    {\n        id: CompanyCode.zzmetro,\n        name: {\n            [LanguageCode.English]: 'Zhengzhou Metro',\n            [LanguageCode.ChineseSimp]: '郑州地铁',\n            [LanguageCode.ChineseTrad]: '鄭州地鐵',\n        },\n    },\n];\n","import React, { RefObject } from 'react';\nimport {\n    AlertDialog,\n    AlertDialogBody,\n    AlertDialogContent,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogOverlay,\n    Button,\n} from '@chakra-ui/react';\nimport { MonoColour, RMGParam } from '../../constants/constants';\nimport { RmgLineBadge } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\ninterface UploadConfirmModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    cancelRef?: RefObject<HTMLButtonElement>;\n    uploadedParam?: RMGParam;\n    onOpenParam: (param: Record<string, any>) => void;\n}\n\nexport default function UploadConfirmModal(props: UploadConfirmModalProps) {\n    const { isOpen, onClose, cancelRef, uploadedParam, onOpenParam } = props;\n    const { t } = useTranslation();\n\n    const handleConfirm = () => {\n        if (uploadedParam) {\n            onOpenParam(uploadedParam);\n        }\n        onClose();\n    };\n\n    return (\n        <AlertDialog isOpen={isOpen} leastDestructiveRef={cancelRef} onClose={onClose}>\n            <AlertDialogOverlay>\n                <AlertDialogContent>\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                        {t('UploadConfirmModal.title')}\n                    </AlertDialogHeader>\n\n                    <AlertDialogBody>\n                        {t('UploadConfirmModal.message1')}\n                        <RmgLineBadge\n                            name={uploadedParam?.line_name?.join(' ') || ''}\n                            fg={uploadedParam?.theme?.[3] || MonoColour.white}\n                            bg={uploadedParam?.theme?.[2] || '#AAAAAA'}\n                        />\n                        {t('UploadConfirmModal.message2') +\n                            (uploadedParam ? Object.keys(uploadedParam.stn_list).length - 2 : 0) +\n                            t('UploadConfirmModal.message3')}\n                    </AlertDialogBody>\n\n                    <AlertDialogFooter>\n                        <Button ref={cancelRef} onClick={onClose}>\n                            {t('UploadConfirmModal.cancel')}\n                        </Button>\n                        <Button colorScheme=\"teal\" onClick={handleConfirm} ml={3}>\n                            {t('UploadConfirmModal.confirm')}\n                        </Button>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialogOverlay>\n        </AlertDialog>\n    );\n}\n","import React from 'react';\nimport {\n    Button,\n    Flex,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalHeader,\n    ModalOverlay,\n    Tab,\n    TabList,\n    TabPanel,\n    TabPanels,\n    Tabs,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { companies } from '../../constants/company-config';\nimport { templateList } from '../../constants/templates/data';\nimport { translateText } from '../../i18n/config';\nimport { useAppDispatch } from '../../redux';\nimport { setIsLoading } from '../../redux/app/action';\n\ninterface TemplateModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onOpenParam: (param: Record<string, any>) => void;\n}\n\nexport default function TemplateModal(props: TemplateModalProps) {\n    const { isOpen, onClose, onOpenParam } = props;\n\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const handleSelect = async (company: string, filename: string) => {\n        dispatch(setIsLoading(true));\n        const module = await import(\n            /* webpackChunkName: \"templates\" */ `../../constants/templates/${company}/${filename}`\n        );\n        onOpenParam(module.default);\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('TemplateModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <Tabs isLazy size=\"sm\" orientation=\"vertical\">\n                        <TabList maxW={150}>\n                            {companies.map(company => (\n                                <Tab key={company.id}>{translateText(company.name)}</Tab>\n                            ))}\n                        </TabList>\n\n                        <TabPanels maxW={250}>\n                            {Object.entries(templateList)\n                                .sort(\n                                    (a, b) =>\n                                        companies.findIndex(c => c.id === a[0]) -\n                                        companies.findIndex(c => c.id === b[0])\n                                )\n                                .map(([company, templates]) => (\n                                    <TabPanel key={company} as={Flex} flexDirection=\"column\" py={0} px={1}>\n                                        {templates.map(template => (\n                                            <Button\n                                                key={template.filename}\n                                                variant=\"ghost\"\n                                                size=\"sm\"\n                                                justifyContent=\"flex-start\"\n                                                overflow=\"hidden\"\n                                                onClick={() => handleSelect(company, template.filename)}\n                                            >\n                                                {translateText(template.name)}\n                                            </Button>\n                                        ))}\n                                    </TabPanel>\n                                ))}\n                        </TabPanels>\n                    </Tabs>\n                </ModalBody>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { ChangeEvent, useRef, useState } from 'react';\nimport { Button, Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/react';\nimport { MdExpandMore, MdInsertDriveFile, MdUpload } from 'react-icons/md';\nimport { useTranslation } from 'react-i18next';\nimport { updateParam } from '../../utils';\nimport { readFileAsText } from '../../util/utils';\nimport UploadConfirmModal from '../modal/upload-confirm-modal';\nimport { useDispatch } from 'react-redux';\nimport { setGlobalAlert } from '../../redux/app/action';\nimport { RMGParam } from '../../constants/constants';\nimport TemplateModal from '../modal/template-modal';\nimport { openFromNewParam } from '../../redux/param/open-new-action';\n\nexport default function OpenActions() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n    const [isTemplateModalOpen, setIsTemplateModalOpen] = useState(false);\n    const [uploadedParam, setUploadedParam] = useState<RMGParam | undefined>(undefined);\n\n    const uploadModalCloseRef = useRef<HTMLButtonElement | null>(null);\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n\n    const handleUpload = async (event: ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        console.log('OpenActions.handleUpload():: received file', file);\n\n        if (file?.type !== 'application/json') {\n            dispatch(\n                setGlobalAlert({\n                    status: 'error',\n                    message: t('OpenActions.invalidType'),\n                })\n            );\n        } else {\n            try {\n                const paramStr = await readFileAsText(file);\n                const updatedParam = updateParam(JSON.parse(paramStr));\n                setUploadedParam(updatedParam as RMGParam);\n                setIsUploadModalOpen(true);\n            } catch (err) {\n                dispatch(\n                    setGlobalAlert({\n                        status: 'error',\n                        message: t('OpenActions.unknownError'),\n                    })\n                );\n                console.error(\n                    'OpenActions.handleUpload():: Unknown error occurred while parsing the uploaded file',\n                    err\n                );\n            }\n        }\n\n        // clear field for next upload\n        event.target.value = '';\n    };\n\n    const handleOpenParam = (param: Record<string, any>) => {\n        dispatch(openFromNewParam(param));\n    };\n\n    return (\n        <Menu>\n            <MenuButton as={Button} variant=\"ghost\" size=\"sm\" rightIcon={<MdExpandMore />}>\n                {t('OpenActions.openFrom')}\n            </MenuButton>\n            <MenuList>\n                <input ref={fileInputRef} type=\"file\" accept=\".json\" hidden={true} onChange={handleUpload} />\n                <MenuItem icon={<MdUpload />} onClick={() => fileInputRef?.current?.click()}>\n                    {t('OpenActions.upload')}\n                </MenuItem>\n\n                <MenuItem icon={<MdInsertDriveFile />} onClick={() => setIsTemplateModalOpen(true)}>\n                    {t('OpenActions.templates')}\n                </MenuItem>\n            </MenuList>\n\n            <UploadConfirmModal\n                isOpen={isUploadModalOpen}\n                onClose={() => setIsUploadModalOpen(false)}\n                cancelRef={uploadModalCloseRef}\n                uploadedParam={uploadedParam}\n                onOpenParam={handleOpenParam}\n            />\n\n            <TemplateModal\n                isOpen={isTemplateModalOpen}\n                onClose={() => setIsTemplateModalOpen(false)}\n                onOpenParam={handleOpenParam}\n            />\n        </Menu>\n    );\n}\n","import { AppDispatch, RootState } from '../index';\nimport { updateParam } from '../../utils';\nimport { AllCanvas, canvasConfig, RMGParam, SidePanelMode } from '../../constants/constants';\nimport { selectCanvas, setIsLoading, setSelectedStation, setSidePanelMode } from '../app/action';\nimport { reRenderApp } from '../../index';\n\nexport const openFromNewParam = (param: Record<string, any>) => {\n    return async (dispatch: AppDispatch, getState: () => RootState) => {\n        const updatedParam = updateParam(param) as RMGParam;\n        await window.rmgStorage.writeFile('rmgParam', JSON.stringify(updatedParam));\n\n        // close side panel, reset selection\n        dispatch(setSidePanelMode(SidePanelMode.CLOSE));\n        dispatch(setSelectedStation('linestart'));\n\n        // reset to AllCanvas if the current canvas is not supported in the new style\n        const canvasToShow = getState().app.canvasToShow;\n        const canvas = canvasConfig[updatedParam.style].some(c => c === canvasToShow) ? canvasToShow : AllCanvas;\n        await dispatch(selectCanvas(canvas));\n        reRenderApp(updatedParam);\n        dispatch(setIsLoading(false));\n    };\n};\n","import React from 'react';\nimport { HStack, Button } from '@chakra-ui/react';\nimport DownloadActions from './download-actions';\nimport { MdPalette } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { SidePanelMode } from '../../constants/constants';\nimport { setSidePanelMode } from '../../redux/app/action';\nimport { useTranslation } from 'react-i18next';\nimport OpenActions from './open-actions';\n\nexport default function HeaderActions() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    return (\n        <HStack ml=\"auto\">\n            <DownloadActions />\n\n            <OpenActions />\n\n            <Button\n                variant=\"solid\"\n                size=\"sm\"\n                colorScheme=\"teal\"\n                leftIcon={<MdPalette />}\n                onClick={() => dispatch(setSidePanelMode(SidePanelMode.STYLE))}\n            >\n                {t('HeaderActions.editStyle')}\n            </Button>\n        </HStack>\n    );\n}\n","import React from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport HeaderActions from './header-actions';\nimport RmgButtonGroup from '../common/rmg-button-group';\nimport { selectCanvas } from '../../redux/app/action';\nimport { AllCanvas, canvasConfig, CanvasType } from '../../constants/constants';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../redux';\nimport { RmgLabel } from '@railmapgen/rmg-components';\n\nexport default function PageHeader() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const canvasToShow = useAppSelector(state => state.app.canvasToShow);\n    const style = useAppSelector(state => state.param.style);\n\n    const canvasSelections = [AllCanvas, ...canvasConfig[style]].map(canvas => ({\n        label: t('CanvasButtonGroup.' + canvas),\n        value: canvas,\n    }));\n\n    return (\n        <Flex align=\"center\" wrap=\"wrap\" pl={2} pr={3}>\n            <RmgLabel label={t('CanvasButtonGroup.label')}>\n                <RmgButtonGroup\n                    selections={canvasSelections}\n                    defaultValue={canvasToShow}\n                    onChange={canvas => dispatch(selectCanvas(canvas as CanvasType | typeof AllCanvas))}\n                />\n            </RmgLabel>\n\n            <HeaderActions />\n        </Flex>\n    );\n}\n","import packageJson from '../../package.json';\n\nexport enum Environments {\n    DEV = 'DEV',\n    UAT = 'UAT',\n    PRD = 'PRD',\n}\n\nexport const getEnvironment = () => {\n    if (window.location.hostname === 'localhost') {\n        return Environments.DEV;\n    } else if (window.location.hostname.includes('uat')) {\n        return Environments.UAT;\n    } else {\n        return Environments.PRD;\n    }\n};\n\nexport const getVersion = () => {\n    return packageJson.version;\n};\n","import React from 'react';\nimport {\n    Avatar,\n    Button,\n    Flex,\n    Heading,\n    Icon,\n    Link,\n    ListItem,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    OrderedList,\n    Tag,\n    TagLabel,\n    Text,\n    VStack,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { MdOpenInNew } from 'react-icons/md';\n\nconst CONTRIBUTORS_LIST = [\n    'jealousyge',\n    'Jay20081229',\n    'clearng-kly',\n    'Dingdong2334',\n    '52PD',\n    'linchen1965',\n    'C1P918R',\n    'AnDanJune\\nUnderline',\n    'GrassRabbit\\n1410',\n    'xiany114514',\n    'Andy1782010',\n    'Thomastzc',\n    'Tianxiu11111',\n];\n\ninterface HelpModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function HelpModal(props: HelpModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose} size=\"xl\" scrollBehavior=\"inside\">\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('Help and support')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <Heading as=\"h5\" size=\"sm\" mb={2}>\n                        {t('Terms and conditions')}\n                    </Heading>\n\n                    <OrderedList>\n                        <ListItem>\n                            The layout of the elements on the signage or rail map, is designed by{' '}\n                            <Link color=\"teal.500\" href=\"https://www.gzmtr.com/\" isExternal={true}>\n                                Guangzhou Metro Group <Icon as={MdOpenInNew} />\n                            </Link>\n                            {', '}\n                            <Link color=\"teal.500\" href=\"https://www.mtr.com.hk/\" isExternal={true}>\n                                MTR Corporation <Icon as={MdOpenInNew} />\n                            </Link>\n                            {' or '}\n                            <Link color=\"teal.500\" href=\"https://www.shmetro.com/\" isExternal={true}>\n                                Shanghai Shentong Metro Group <Icon as={MdOpenInNew} />\n                            </Link>\n                            , depending on your selection. You shall grant appropriate permit or license from the\n                            relevant company above before using the generated images for commercial purposes, if it is\n                            required to do so.\n                            <br />\n                            標誌版或路線圖之元素之佈局，基於你所選擇之風格，為\n                            <Link color=\"teal.500\" href=\"https://www.gzmtr.com/\" isExternal={true}>\n                                廣州地鐵集團公司 <Icon as={MdOpenInNew} />\n                            </Link>\n                            ，\n                            <Link color=\"teal.500\" href=\"https://www.mtr.com.hk/\" isExternal={true}>\n                                港鐵公司 <Icon as={MdOpenInNew} />\n                            </Link>\n                            或\n                            <Link color=\"teal.500\" href=\"https://www.shmetro.com/\" isExternal={true}>\n                                上海申通地鐵集團 <Icon as={MdOpenInNew} />\n                            </Link>\n                            所設計。在產生之圖像用作商業用途前，你應向相關公司取得適當之許可證或授權。\n                        </ListItem>\n                        <ListItem>\n                            The elements including shapes and lines on the image are drawn by{' '}\n                            <Link color=\"teal.500\" href=\"https://www.github.com/wongchito\" isExternal={true}>\n                                Chito Wong <Icon as={MdOpenInNew} />\n                            </Link>\n                            {' and '}\n                            <Link color=\"teal.500\" href=\"https://www.github.com/thekingofcity\" isExternal={true}>\n                                thekingofcity <Icon as={MdOpenInNew} />\n                            </Link>\n                            , based on the design standards or rules of the companies listed above. You may use them for\n                            any purposes, but it is recommended to state the name and the link of software alongside.\n                            <br />\n                            圖像之元素，包括圖形及線條，均由\n                            <Link color=\"teal.500\" href=\"https://www.github.com/wongchito\" isExternal={true}>\n                                Chito Wong <Icon as={MdOpenInNew} />\n                            </Link>\n                            及\n                            <Link color=\"teal.500\" href=\"https://www.github.com/thekingofcity\" isExternal={true}>\n                                thekingofcity <Icon as={MdOpenInNew} />\n                            </Link>\n                            基於上述公司之設計標準或準則繪製。你可將其用於任何目的，但我們建議你於使用同時附以我們之名字以及該軟件之連結。\n                        </ListItem>\n                        <ListItem>\n                            Due to copyright, licensing and other legal restrictions, Rail Map Generator uses{' '}\n                            <Link color=\"teal.500\" href=\"https://github.com/ButTaiwan/genyo-font\" isExternal={true}>\n                                GenYoMin provided by ButTaiwan <Icon as={MdOpenInNew} />\n                            </Link>\n                            , and Vegur instead of MTRSung and Myriad Pro respectively to display and generate MTR-style\n                            signage. You shall grant appropriate permit or license from the manufacturers before using\n                            those generated images for commercial purposes.\n                            <br />\n                            由於著作權及其他法律限制，鐵路路線圖產生器使用\n                            <Link color=\"teal.500\" href=\"https://github.com/ButTaiwan/genyo-font\" isExternal={true}>\n                                由ButTaiwan提供之源樣明體 <Icon as={MdOpenInNew} />\n                            </Link>\n                            ，以及Vegur，以代替港鐵樣式標誌牌所使用之地鐵宋及Myriad\n                            Pro。在產生之圖像用作商業用途前，你應向字型生產廠商取得適當之許可證或授權。\n                        </ListItem>\n                        <ListItem>\n                            The exported images in PNG or SVG format may be modified, published, or used for other\n                            purposes, under the conditions above.\n                            <br />\n                            輸出之PNG或SVG種類之圖像可基於上述條款，用於修改、發行或其他用途。\n                        </ListItem>\n                        <ListItem>\n                            All flag emojis shown on Windows platforms are designed by{' '}\n                            <Link color=\"teal.500\" href=\"https://openmoji.org/\" isExternal={true}>\n                                OpenMoji <Icon as={MdOpenInNew} />\n                            </Link>{' '}\n                            – the open-source emoji and icon project. License:\n                            <Link\n                                color=\"teal.500\"\n                                href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n                                isExternal={true}\n                            >\n                                CC BY-SA 4.0 <Icon as={MdOpenInNew} />\n                            </Link>\n                            <br />\n                            於Windows作業系統上顯示之旗幟Emoji為\n                            <Link color=\"teal.500\" href=\"https://openmoji.org/\" isExternal={true}>\n                                OpenMoji <Icon as={MdOpenInNew} />\n                            </Link>\n                            所設計。許可證：\n                            <Link\n                                color=\"teal.500\"\n                                href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n                                isExternal={true}\n                            >\n                                CC BY-SA 4.0 <Icon as={MdOpenInNew} />\n                            </Link>\n                        </ListItem>\n                        <ListItem>\n                            We reserve the rights, without prior notice, to modify, add, or remove these terms. The\n                            Chinese translation is for reference only. In case of any discrepancy between the English\n                            version and the Chinese version, the English version shall prevail.\n                            <br />\n                            我們保留修改、新增或移除上述條款之權利，而無需另行通知。中文譯本僅供參考，文義如與英文有歧異，概以英文本為準。\n                        </ListItem>\n                    </OrderedList>\n\n                    <Heading as=\"h5\" size=\"sm\" mt={3} mb={2}>\n                        {t('Contributors')}\n                    </Heading>\n\n                    <Heading as=\"h6\" size=\"xs\" my={1}>\n                        {t('Core contributors')}\n                    </Heading>\n\n                    <VStack>\n                        <Tag size=\"lg\" minW=\"80%\">\n                            <Avatar src=\"https://github.com/wongchito.png\" size=\"lg\" my={2} ml={-1} mr={2} />\n                            <TagLabel>\n                                <Text fontSize=\"lg\" fontWeight=\"bold\" mb={1}>\n                                    Chito Wong\n                                </Text>\n                                <Text fontSize=\"sm\">Project initiator</Text>\n                                <Text fontSize=\"sm\">Author of MTR and Guangzhou Metro styles</Text>\n                            </TagLabel>\n                        </Tag>\n                        <Tag size=\"lg\" minW=\"80%\">\n                            <Avatar src=\"https://github.com/thekingofcity.png\" size=\"lg\" my={2} ml={-1} mr={2} />\n                            <TagLabel>\n                                <Text fontSize=\"lg\" fontWeight=\"bold\" mb={1}>\n                                    thekingofcity\n                                </Text>\n                                <Text fontSize=\"sm\">Author of Shanghai Metro style</Text>\n                                <Text fontSize=\"sm\">Desktop version (Electron) maintaner</Text>\n                            </TagLabel>\n                        </Tag>\n                    </VStack>\n\n                    <Heading as=\"h6\" size=\"xs\" my={1}>\n                        {t('Other contributors')}\n                    </Heading>\n\n                    <Flex wrap=\"wrap\">\n                        {CONTRIBUTORS_LIST.map(contributor => (\n                            <Tag key={contributor} size=\"lg\" mb={1} mr={1}>\n                                <Avatar\n                                    src={`https://github.com/${contributor.replaceAll('\\n', '')}.png`}\n                                    size=\"xs\"\n                                    ml={-1}\n                                    mr={2}\n                                />\n                                <TagLabel>{contributor}</TagLabel>\n                            </Tag>\n                        ))}\n                    </Flex>\n\n                    <Text>\n                        {t('Visit')}{' '}\n                        <Link\n                            color=\"teal.500\"\n                            href=\"https://github.com/railmapgen/rmg/wiki/How-to-add-color-palette-and-line-templates\"\n                            isExternal={true}\n                        >\n                            {t('Contribution Wiki')} <Icon as={MdOpenInNew} />\n                        </Link>\n                        {t(', open an issue and join us today!')}\n                    </Text>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        colorScheme=\"teal\"\n                        onClick={() => window.open('https://github.com/railmapgen/rmg', '_blank')}\n                    >\n                        {t('Visit GitHub')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useState } from 'react';\nimport { Flex, Heading, HStack, Icon, IconButton, Link, Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/react';\nimport { getEnvironment, getVersion } from '../util/config';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { MdHelp, MdLocationCity, MdOpenInNew, MdTranslate, MdZoomIn, MdZoomOut } from 'react-icons/md';\nimport { LanguageCode, RmgStyle } from '../constants/constants';\nimport { useDispatch } from 'react-redux';\nimport { setStyle } from '../redux/param/action';\nimport * as ReactRouterDom from 'react-router-dom';\nimport { zoomIn, zoomOut } from '../redux/app/action';\nimport HelpModal from './modal/help-modal';\nimport { RmgEnvBadge } from '@railmapgen/rmg-components';\n\nexport default function WindowHeader() {\n    const { t, i18n } = useTranslation();\n    const dispatch = useDispatch();\n\n    const [isHelpModalOpen, setIsHelpModalOpen] = useState(false);\n\n    const environment = getEnvironment();\n\n    const handleChangeLanguage = async (language: LanguageCode) => {\n        const t = await i18n.changeLanguage(language);\n        document.documentElement.lang = language;\n        document.title = t('WindowHeader.heading');\n    };\n\n    return (\n        <Flex pl={2} pr={2} align=\"center\">\n            <Heading as=\"h4\" size=\"md\">\n                {t('WindowHeader.heading')}\n            </Heading>\n            <RmgEnvBadge\n                environment={environment}\n                version={getVersion()}\n                popoverHeader={\n                    <Trans i18nKey=\"WindowHeader.popoverHeader\" environment={environment}>\n                        You're on {{ environment }} environment!\n                    </Trans>\n                }\n                popoverBody={\n                    <Trans i18nKey=\"WindowHeader.popoverBody\">\n                        This is a testing environment where we don't guarantee the stability and compatibility. Please\n                        switch back to{' '}\n                        <Link\n                            color=\"teal.500\"\n                            href={'https://railmapgen.github.io' + window.location.pathname}\n                            isExternal={true}\n                        >\n                            Production environment <Icon as={MdOpenInNew} />\n                        </Link>\n                        .\n                    </Trans>\n                }\n            />\n\n            <HStack ml=\"auto\">\n                <IconButton\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    aria-label=\"Zoom out\"\n                    icon={<MdZoomOut />}\n                    onClick={() => dispatch(zoomOut())}\n                />\n                <IconButton\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    aria-label=\"Zoom in\"\n                    icon={<MdZoomIn />}\n                    onClick={() => dispatch(zoomIn())}\n                />\n\n                <Menu>\n                    <MenuButton as={IconButton} icon={<MdLocationCity />} variant=\"ghost\" size=\"sm\" />\n                    <MenuList>\n                        {Object.values(RmgStyle).map(style => (\n                            <ReactRouterDom.Link key={style} to={style}>\n                                <MenuItem onClick={() => dispatch(setStyle(style))}>\n                                    {t('WindowHeader.' + style)}\n                                </MenuItem>\n                            </ReactRouterDom.Link>\n                        ))}\n                    </MenuList>\n                </Menu>\n\n                <Menu>\n                    <MenuButton as={IconButton} icon={<MdTranslate />} variant=\"ghost\" size=\"sm\" />\n                    <MenuList>\n                        <MenuItem onClick={() => handleChangeLanguage(LanguageCode.English)}>English</MenuItem>\n                        <MenuItem onClick={() => handleChangeLanguage(LanguageCode.ChineseSimp)}>简体中文</MenuItem>\n                        <MenuItem onClick={() => handleChangeLanguage(LanguageCode.ChineseTrad)}>繁體中文</MenuItem>\n                    </MenuList>\n                </Menu>\n\n                <IconButton\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    aria-label=\"Help\"\n                    icon={<MdHelp />}\n                    onClick={() => setIsHelpModalOpen(true)}\n                />\n            </HStack>\n\n            <HelpModal isOpen={isHelpModalOpen} onClose={() => setIsHelpModalOpen(false)} />\n        </Flex>\n    );\n}\n","import { AppDispatch, RootState } from '../index';\nimport { getRandomId } from './station-list-util';\nimport { BranchStyle, Facilities, Services, ShortDirection, StationDict, StationInfo } from '../../constants/constants';\nimport { getYShareMTR } from '../../methods';\nimport { setStationsBulk } from './action';\nimport { nanoid } from 'nanoid';\n\nconst getStationTemplate = (id: string): StationInfo => ({\n    name: ['未命名 ' + id, 'Unnamed ' + id],\n    secondaryName: false,\n    num: '00',\n    services: [Services.local],\n    parents: [],\n    children: [],\n    branch: { left: [], right: [] },\n    transfer: {\n        info: [[]],\n        // type: 'none',\n        tick_direc: ShortDirection.right,\n        paid_area: true,\n        osi_names: [],\n    },\n    facility: Facilities.none,\n    loop_pivot: false,\n});\n\n/**\n * @deprecated For V3 legacy support\n */\nexport const addStationLegacy = (\n    prep: 'before' | 'after',\n    pivotStationId: string,\n    loc: 'centre' | 'upper' | 'lower' | 'newupper' | 'newlower',\n    end: string\n) => {\n    // return new station id\n    return (dispatch: AppDispatch, getState: () => RootState): string => {\n        const stationList = getState().param.stn_list;\n        // get new id\n        let newId = getRandomId();\n        while (Object.keys(stationList).includes(newId)) {\n            newId = getRandomId();\n        }\n        let newInfo: StationInfo = {\n            name: ['未命名 ' + newId, 'Unnamed ' + newId],\n            secondaryName: false,\n            num: '00',\n            services: [Services.local],\n            parents: [],\n            children: [],\n            branch: {\n                left: [],\n                right: [],\n            },\n            transfer: {\n                info: [[]],\n                // type: 'none',\n                tick_direc: ShortDirection.right,\n                paid_area: true,\n                osi_names: [],\n            },\n            facility: Facilities.none,\n            loop_pivot: false,\n        };\n\n        let newStnList = JSON.parse(JSON.stringify(stationList)) as StationDict;\n\n        if (prep === 'before') {\n            if (loc === 'centre') {\n                newInfo.parents = stationList[pivotStationId].parents;\n                if (\n                    stationList[pivotStationId].parents.length === 0 &&\n                    getYShareMTR(pivotStationId, stationList) !== 0\n                ) {\n                    // todo: is this case really exist?\n                    newInfo.children = stationList.linestart.children;\n                } else if (getYShareMTR(pivotStationId, stationList) !== 0) {\n                    // pivot on branch\n                    newInfo.children = stationList[stationList[pivotStationId].parents[0]].children.slice();\n                    newInfo.branch.right = stationList[newInfo.parents[0]].branch.right;\n                    newStnList[newInfo.parents[0]].branch.right = [];\n                } else {\n                    // pivot on main\n                    newInfo.children = [pivotStationId];\n                    newInfo.branch.left = stationList[pivotStationId].branch.left;\n                    newStnList[pivotStationId].branch.left = [];\n                }\n                newInfo.parents.forEach(par => {\n                    newStnList[par].children = [newId];\n                });\n                newInfo.children.forEach(child => {\n                    newStnList[child].parents = [newId];\n                });\n            } else if (loc === 'upper') {\n                if (stationList[pivotStationId].parents.length === 2) {\n                    if (stationList[pivotStationId].branch.left[1] === stationList[pivotStationId].parents[0]) {\n                        newStnList[pivotStationId].branch.left[1] = newId;\n                    }\n\n                    newInfo.parents = stationList[pivotStationId].parents.slice(0, 1);\n                    newInfo.children = [pivotStationId];\n                    newInfo.parents.forEach(par => {\n                        newStnList[par].children = [newId];\n                    });\n                    newStnList[pivotStationId].parents[0] = newId;\n                } else {\n                    // already on branch\n                    newInfo.parents = stationList[pivotStationId].parents;\n                    newInfo.children = [pivotStationId];\n                    newInfo.parents.forEach(par => {\n                        newStnList[par].children[0] = newId;\n\n                        if (stationList[par].branch.right[1] === pivotStationId) {\n                            newStnList[par].branch.right[1] = newId;\n                        }\n                    });\n                    newInfo.children.forEach(child => {\n                        newStnList[child].parents = [newId];\n                    });\n                }\n            } else if (loc === 'lower') {\n                if (stationList[pivotStationId].parents.length === 2) {\n                    if (stationList[pivotStationId].branch.left[1] === stationList[pivotStationId].parents[1]) {\n                        newStnList[pivotStationId].branch.left[1] = newId;\n                    }\n\n                    newInfo.parents = stationList[pivotStationId].parents.slice(1);\n                    newInfo.children = [pivotStationId];\n                    newInfo.parents.forEach(par => {\n                        newStnList[par].children = [newId];\n                    });\n                    newStnList[pivotStationId].parents[1] = newId;\n                } else {\n                    // already on branch\n                    newInfo.parents = stationList[pivotStationId].parents;\n                    newInfo.children = [pivotStationId];\n                    newInfo.parents.forEach(par => {\n                        let parChildLen = stationList[par].children.length;\n                        newStnList[par].children[parChildLen - 1] = newId;\n\n                        if (stationList[par].branch.right[1] === pivotStationId) {\n                            newStnList[par].branch.right[1] = newId;\n                        }\n                    });\n                    newInfo.children.forEach(child => {\n                        newStnList[child].parents = [newId];\n                    });\n                }\n            } else {\n                newStnList[pivotStationId].branch.left = [BranchStyle.through, newId];\n                newStnList[end].branch.right = [BranchStyle.through, newId];\n                newInfo.parents = [end];\n                newInfo.children = [pivotStationId];\n\n                if (loc === 'newupper') {\n                    newStnList[end].children.unshift(newId);\n                    newStnList[pivotStationId].parents.unshift(newId);\n                } else {\n                    newStnList[end].children.push(newId);\n                    newStnList[pivotStationId].parents.push(newId);\n                }\n            }\n        } else {\n            if (loc === 'centre') {\n                newInfo.children = stationList[pivotStationId].children;\n                if (\n                    stationList[pivotStationId].children.length === 0 &&\n                    getYShareMTR(pivotStationId, stationList) !== 0\n                ) {\n                    newInfo.parents = stationList.lineend.parents;\n                } else if (getYShareMTR(pivotStationId, stationList) !== 0) {\n                    // pivot on branch\n                    newInfo.parents = stationList[stationList[pivotStationId].children[0]].parents;\n                    newInfo.branch.left = stationList[newInfo.children[0]].branch.left;\n                    newStnList[newInfo.children[0]].branch.left = [];\n                } else {\n                    // pivot on main\n                    newInfo.parents = [pivotStationId];\n                    newInfo.branch.right = stationList[pivotStationId].branch.right;\n                    newStnList[pivotStationId].branch.right = [];\n                }\n                newInfo.children.forEach(child => {\n                    newStnList[child].parents = [newId];\n                });\n                newInfo.parents.forEach(par => {\n                    newStnList[par].children = [newId];\n                });\n            } else if (loc === 'upper') {\n                if (stationList[pivotStationId].children.length === 2) {\n                    if (stationList[pivotStationId].branch.right[1] === stationList[pivotStationId].children[0]) {\n                        newStnList[pivotStationId].branch.right[1] = newId;\n                    }\n\n                    newInfo.children = stationList[pivotStationId].children.slice(0, 1);\n                    newInfo.parents = [pivotStationId];\n                    newInfo.children.forEach(child => {\n                        newStnList[child].parents = [newId];\n                    });\n                    newStnList[pivotStationId].children[0] = newId;\n                } else {\n                    // already on branch\n                    newInfo.children = stationList[pivotStationId].children;\n                    newInfo.parents = [pivotStationId];\n                    newInfo.children.forEach(child => {\n                        newStnList[child].parents[0] = newId;\n\n                        if (stationList[child].branch.left[1] === pivotStationId) {\n                            newStnList[child].branch.left[1] = newId;\n                        }\n                    });\n                    newInfo.parents.forEach(par => {\n                        newStnList[par].children = [newId];\n                    });\n                }\n            } else if (loc === 'lower') {\n                if (stationList[pivotStationId].children.length === 2) {\n                    if (stationList[pivotStationId].branch.right[1] === stationList[pivotStationId].children[1]) {\n                        newStnList[pivotStationId].branch.right[1] = newId;\n                    }\n\n                    newInfo.children = stationList[pivotStationId].children.slice(1);\n                    newInfo.parents = [pivotStationId];\n                    newInfo.children.forEach(child => {\n                        newStnList[child].parents = [newId];\n                    });\n                    newStnList[pivotStationId].children[1] = newId;\n                } else {\n                    // already on branch\n                    newInfo.children = stationList[pivotStationId].children;\n                    newInfo.parents = [pivotStationId];\n                    newInfo.children.forEach(child => {\n                        newStnList[child].parents[stationList[child].parents.length === 1 ? 0 : 1] = newId;\n\n                        if (stationList[child].branch.left[1] === pivotStationId) {\n                            newStnList[child].branch.left[1] = newId;\n                        }\n                    });\n                    newInfo.parents.forEach(par => {\n                        newStnList[par].children = [newId];\n                    });\n                }\n            } else {\n                newStnList[pivotStationId].branch.right = [BranchStyle.through, newId];\n                newStnList[end].branch.left = [BranchStyle.through, newId];\n\n                newInfo.children = [end];\n                newInfo.parents = [pivotStationId];\n\n                if (loc === 'newupper') {\n                    newStnList[end].parents.unshift(newId);\n                    newStnList[pivotStationId].children.unshift(newId);\n                } else {\n                    newStnList[end].parents.push(newId);\n                    newStnList[pivotStationId].children.push(newId);\n                }\n            }\n        }\n\n        dispatch(\n            setStationsBulk({\n                ...newStnList,\n                [newId]: newInfo,\n            })\n        );\n        return newId;\n    };\n};\n\nexport const addStation = (where: `${number}` | 'new', from: string, to: string, position?: 'upper' | 'lower') => {\n    return (dispatch: AppDispatch, getState: () => RootState): string | false => {\n        const stationList = getState().param.stn_list;\n\n        // get new id\n        const newId = nanoid(6);\n        const newStationInfo = getStationTemplate(newId);\n\n        if (where !== 'new') {\n            const nextStationList = {\n                ...stationList,\n                [from]: {\n                    ...stationList[from],\n                    children: stationList[from].children.map(id => (id === to ? newId : id)),\n                    branch: {\n                        left: stationList[from].branch.left,\n                        right:\n                            stationList[from].branch.right.length && stationList[from].branch.right[1] === to\n                                ? ([stationList[from].branch.right[0], newId] as [BranchStyle, string])\n                                : stationList[from].branch.right,\n                    },\n                },\n                [to]: {\n                    ...stationList[to],\n                    parents: stationList[to].parents.map(id => (id === from ? newId : id)),\n                    branch: {\n                        left:\n                            stationList[to].branch.left.length && stationList[to].branch.left[1] === from\n                                ? ([stationList[to].branch.left[0], newId] as [BranchStyle, string])\n                                : stationList[to].branch.left,\n                        right: stationList[to].branch.right,\n                    },\n                },\n                [newId]: {\n                    ...newStationInfo,\n                    parents: [from],\n                    children: [to],\n                },\n            };\n            dispatch(setStationsBulk(nextStationList));\n            return newId;\n        } else {\n            if (!position) {\n                return false;\n            }\n\n            const nextStationList = {\n                ...stationList,\n                [from]: {\n                    ...stationList[from],\n                    children:\n                        position === 'upper'\n                            ? [newId, stationList[from].children[0]]\n                            : [stationList[from].children[0], newId],\n                    branch: {\n                        left: stationList[from].branch.left,\n                        right: [BranchStyle.through, newId] as [BranchStyle, string],\n                    },\n                },\n                [to]: {\n                    ...stationList[to],\n                    parents:\n                        position === 'upper'\n                            ? [newId, stationList[to].parents[0]]\n                            : [stationList[to].parents[0], newId],\n                    branch: {\n                        left: [BranchStyle.through, newId] as [BranchStyle, string],\n                        right: stationList[to].branch.right,\n                    },\n                },\n                [newId]: {\n                    ...newStationInfo,\n                    parents: [from],\n                    children: [to],\n                },\n            };\n            dispatch(setStationsBulk(nextStationList));\n            return newId;\n        }\n    };\n};\n\nexport const addStationToExistingBranch = (where: number, preposition: 'before' | 'after', pivot: string) => {\n    return (dispatch: AppDispatch, getState: () => RootState): false | string => {\n        const branches = getState().helper.branches;\n        const branch = branches[where];\n\n        if (branch?.length) {\n            if (preposition === 'before') {\n                const from = branch[branch.indexOf(pivot) - 1];\n                return dispatch(addStation(where.toString() as `${number}`, from, pivot));\n            } else {\n                const to = branch[branch.indexOf(pivot) + 1];\n                return dispatch(addStation(where.toString() as `${number}`, pivot, to));\n            }\n        } else {\n            return false;\n        }\n    };\n};\n\nexport const getNewBranchAllowedEnds = () => {\n    return (dispatch: AppDispatch, getState: () => RootState): string[] => {\n        const stationList = getState().param.stn_list;\n        const branches = getState().helper.branches;\n\n        return branches[0].filter(id => {\n            const isTwoSidedBranchOut = stationList[id].parents.length + stationList[id].children.length === 4;\n            const isYShare0 = getYShareMTR(id, stationList) === 0;\n\n            return !isTwoSidedBranchOut && isYShare0;\n        });\n    };\n};\n\nexport const verifyNewBranchEnds = (from: string, to: string) => {\n    return (dispatch: AppDispatch, getState: () => RootState): string => {\n        const stationList = getState().param.stn_list;\n        const branches = getState().helper.branches;\n\n        // should be included in main line\n        if (!branches[0].includes(from) || !branches[0].includes(to)) {\n            return 'Branch should end at main line';\n        }\n\n        // from should come before to\n        if (branches[0].indexOf(from) > branches[0].indexOf(to)) {\n            return 'Not in correct ordering';\n        }\n\n        // should not be open jaw from the first station\n        if (from === 'linestart' && branches[0].indexOf(to) === 1) {\n            return 'Branch should not be open jaw from the first station';\n        }\n\n        // should not be open jaw from the last station\n        if (to === 'lineend' && branches[0].indexOf(from) === branches[0].length - 2) {\n            return 'Branch should not be open jaw from the last station';\n        }\n\n        // from has one child, to has one parent\n        if (stationList[from].children.length > 1 || stationList[to].parents.length > 1) {\n            return 'Branch already exist';\n        }\n\n        // end station won't be a middle station of any branch except main line\n        const isExistBranchIncludesEndStation = branches\n            .slice(1)\n            .some(branch => branch.slice(1, -1).includes(from) || branch.slice(1, -1).includes(to));\n        if (isExistBranchIncludesEndStation) {\n            return 'Cannot branch out from existing branch';\n        }\n\n        // stations between both ends should be stations which isn't branching out\n        const isStationsBetweenNotBranchOut = branches[0]\n            .slice(branches[0].indexOf(from) + 1, branches[0].indexOf(to))\n            .every(id => stationList[id].parents.length === 1 && stationList[id].children.length === 1);\n        if (!isStationsBetweenNotBranchOut) {\n            return 'One or more stations between both ends are branching out';\n        }\n\n        return '';\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n    Alert,\n    AlertIcon,\n    Box,\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useAppDispatch, useAppSelector } from '../../redux';\nimport { RmgStyle, SidePanelMode } from '../../constants/constants';\nimport { isColineBranch } from '../../redux/param/coline-action';\nimport { useTranslation } from 'react-i18next';\nimport { addStationToExistingBranch } from '../../redux/param/add-station-action';\nimport { setSelectedStation, setSidePanelMode } from '../../redux/app/action';\n\ninterface AddStationModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function AddStationModal(props: AddStationModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const selectedBranch = useAppSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useAppSelector(state => state.param);\n    const branches = useAppSelector(state => state.helper.branches);\n\n    const [where, setWhere] = useState(selectedBranch);\n    const [preposition, setPreposition] = useState<'before' | 'after'>('before');\n    const [pivot, setPivot] = useState('');\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        setWhere(selectedBranch);\n    }, [selectedBranch]);\n\n    useEffect(() => {\n        if (!isOpen) {\n            setError(false);\n        }\n    }, [isOpen]);\n\n    const selectableStations = branches[Number(where)]?.slice(1, -1) ?? [];\n\n    const getStationOptions = (stationIdList: string[]): Record<string, string> => {\n        return stationIdList.reduce(\n            (acc, cur) => ({\n                ...acc,\n                [cur]: stationList[cur]?.name.join(' - '),\n            }),\n            { '': t('AddStationModal.pleaseSelect') }\n        );\n    };\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('AddStationModal.where'),\n            value: where,\n            options: {\n                ...branches.reduce(\n                    (acc, cur, idx) => ({\n                        ...acc,\n                        [idx]:\n                            idx === 0\n                                ? t('AddStationModal.main')\n                                : style !== RmgStyle.SHMetro || !isColineBranch(cur, stationList)\n                                ? t('AddStationModal.branch') + ' ' + idx\n                                : t('AddStationModal.external') + ' ' + idx,\n                    }),\n                    {}\n                ),\n            },\n            onChange: value => handleSelectWhere(value as number),\n            minW: 'full',\n        },\n        {\n            type: 'select',\n            label: t('AddStationModal.preposition'),\n            value: preposition,\n            options: {\n                before: t('AddStationModal.before'),\n                after: t('AddStationModal.after'),\n            },\n            onChange: value => setPreposition(value as 'before' | 'after'),\n        },\n        {\n            type: 'select',\n            label: t('AddStationModal.pivot'),\n            value: pivot,\n            options: getStationOptions(selectableStations),\n            disabledOptions: [''],\n            onChange: value => setPivot(value as string),\n        },\n    ];\n\n    const handleSelectWhere = (value: number) => {\n        setWhere(value);\n        setPivot('');\n    };\n\n    const handleSubmit = () => {\n        const result = dispatch(addStationToExistingBranch(where, preposition, pivot));\n        if (result) {\n            onClose();\n\n            dispatch(setSelectedStation(result));\n            dispatch(setSidePanelMode(SidePanelMode.STATION));\n        } else {\n            console.log('false here');\n            setError(true);\n        }\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                {error && (\n                    <Alert status=\"error\" variant=\"solid\" size=\"xs\">\n                        <AlertIcon />\n                        {t('AddStationModal.error')}\n                    </Alert>\n                )}\n                <Box position=\"relative\">\n                    <ModalHeader>{t('AddStationModal.title')}</ModalHeader>\n                    <ModalCloseButton />\n                </Box>\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button colorScheme=\"teal\" onClick={handleSubmit} disabled={!pivot}>\n                        {t('AddStationModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useAppDispatch, useAppSelector } from '../../redux';\nimport { addStation, getNewBranchAllowedEnds, verifyNewBranchEnds } from '../../redux/param/add-station-action';\nimport { RmgStyle } from '../../constants/constants';\nimport { useTranslation } from 'react-i18next';\n\ninterface NewBranchModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function NewBranchModal(props: NewBranchModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const [where, setWhere] = useState<'new' | 'ext'>('new');\n    const [from, setFrom] = useState('');\n    const [to, setTo] = useState('');\n    const [position, setPosition] = useState<'upper' | 'lower'>('upper');\n\n    const [fromError, setFromError] = useState('');\n    const [toError, setToError] = useState('');\n\n    const { style, stn_list: stationList } = useAppSelector(state => state.param);\n\n    useEffect(() => {\n        // reset whenever modal is closed\n        if (!isOpen) {\n            setWhere('new');\n            setFrom('');\n            setTo('');\n        }\n    }, [isOpen]);\n\n    const getStationOptions = (stationIdList: string[]): Record<string, string> => {\n        return stationIdList.reduce(\n            (acc, cur) => ({\n                ...acc,\n                [cur]: stationList[cur]?.name.join(' - '),\n            }),\n            { '': t('NewBranchModal.pleaseSelect') }\n        );\n    };\n\n    const newBranchEndStationOptions = getStationOptions(dispatch(getNewBranchAllowedEnds()));\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('NewBranchModal.where'),\n            value: where,\n            options: {\n                new: t('NewBranchModal.new'),\n                ext: t('NewBranchModal.ext'),\n            },\n            disabledOptions: style === RmgStyle.SHMetro ? [] : ['ext'],\n            onChange: value => handleSelectWhere(value as 'new' | 'ext'),\n            minW: 'full',\n        },\n        {\n            type: 'select',\n            label: t('NewBranchModal.from'),\n            value: from,\n            options: newBranchEndStationOptions,\n            disabledOptions: [''],\n            onChange: value => handleSelectFrom(value as string),\n            isInvalid: Boolean(fromError),\n        },\n        {\n            type: 'select',\n            label: t('NewBranchModal.to'),\n            value: to,\n            options: newBranchEndStationOptions,\n            disabledOptions: [''],\n            onChange: value => handleSelectTo(value as string),\n            isInvalid: Boolean(toError),\n        },\n        {\n            type: 'select',\n            label: t('NewBranchModal.position'),\n            value: position,\n            options: {\n                upper: t('NewBranchModal.upper'),\n                lower: t('NewBranchModal.lower'),\n            },\n            onChange: value => setPosition(value as 'upper' | 'lower'),\n            minW: 'full',\n            hidden: where !== 'new' || style === RmgStyle.SHMetro,\n        },\n    ];\n\n    const handleSelectWhere = (value: 'new' | 'ext') => {\n        setWhere(value);\n        setFrom('');\n        setTo('');\n        setFromError('');\n        setToError('');\n    };\n\n    const handleSelectFrom = (value: string) => {\n        setFrom(value);\n        setFromError('');\n\n        if (value && to) {\n            setToError(dispatch(verifyNewBranchEnds(value, to)));\n        }\n    };\n\n    const handleSelectTo = (value: string) => {\n        setTo(value);\n        setToError('');\n\n        if (from && value) {\n            setFromError(dispatch(verifyNewBranchEnds(from, value)));\n        }\n    };\n\n    const handleSubmit = () => {\n        let result: false | string;\n        if (where === 'ext') {\n            // SHMetro specific - treat lower branch as external line\n            result = dispatch(addStation('new', from, to, 'lower'));\n        } else {\n            if (style === RmgStyle.SHMetro) {\n                result = dispatch(addStation('new', from, to, 'upper'));\n            } else {\n                result = dispatch(addStation('new', from, to, position));\n            }\n        }\n\n        if (result) {\n            onClose();\n        }\n    };\n\n    const isSubmitDisabled = Boolean(!from || !to || fromError || toError);\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('NewBranchModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        colorScheme=\"teal\"\n                        title={isSubmitDisabled ? fromError || toError : t('NewBranchModal.submit')}\n                        onClick={handleSubmit}\n                        disabled={isSubmitDisabled}\n                    >\n                        {t('NewBranchModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { lazy, Suspense, useState } from 'react';\nimport { Box, Button, HStack, IconButton, Progress, Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/react';\nimport { MdAdd } from 'react-icons/md';\nimport AddStationModal from '../modal/add-station-modal';\nimport { useAppDispatch, useAppSelector } from '../../redux';\nimport { RmgStyle, SidePanelMode } from '../../constants/constants';\nimport { isColineBranch } from '../../redux/param/coline-action';\nimport { setSelectedBranch, setSidePanelMode } from '../../redux/app/action';\nimport { useTranslation } from 'react-i18next';\nimport NewBranchModal from '../modal/new-branch-modal';\nimport ErrorBoundary from '../../error-boundary';\n\nconst StationAgGrid = lazy(() => import(/* webpackChunkName: \"StationAgGrid\" */ './station-ag-grid'));\n\nexport default function GridTabs() {\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const [isAddStationModalOpen, setIsAddStationModalOpen] = useState(false);\n    const [isNewBranchModalOpen, setIsNewBranchModalOpen] = useState(false);\n\n    const selectedBranch = useAppSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useAppSelector(state => state.param);\n    const branches = useAppSelector(state => state.helper.branches);\n\n    const handleEditLineSection = () => {\n        dispatch(setSidePanelMode(SidePanelMode.BRANCH));\n    };\n\n    return (\n        <Box flex={1} overflow=\"hidden\">\n            <Tabs\n                height=\"100%\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                overflow=\"hidden\"\n                index={selectedBranch}\n                onChange={index => dispatch(setSelectedBranch(index))}\n            >\n                <TabList>\n                    {branches.map((branch, i) => {\n                        if (i === 0) {\n                            return <Tab key={i}>{t('GridTabs.main')}</Tab>;\n                        } else {\n                            if (style !== RmgStyle.SHMetro || !isColineBranch(branch, stationList)) {\n                                return <Tab key={i}>{t('GridTabs.branch') + ' ' + i}</Tab>;\n                            } else {\n                                return <Tab key={i}>{t('GridTabs.external') + ' ' + i}</Tab>;\n                            }\n                        }\n                    })}\n                    <IconButton\n                        size=\"sm\"\n                        variant=\"ghost\"\n                        alignSelf=\"center\"\n                        aria-label=\"New branch\"\n                        onClick={() => setIsNewBranchModalOpen(true)}\n                        icon={<MdAdd />}\n                    />\n\n                    <HStack marginLeft=\"auto\" marginRight={1}>\n                        <Button\n                            variant=\"outline\"\n                            size=\"xs\"\n                            leftIcon={<MdAdd />}\n                            onClick={() => setIsAddStationModalOpen(true)}\n                        >\n                            {t('GridTabs.addStation')}\n                        </Button>\n                        <Button size=\"xs\" colorScheme=\"teal\" onClick={handleEditLineSection}>\n                            {t('GridTabs.editLine')}\n                        </Button>\n                    </HStack>\n                </TabList>\n\n                <TabPanels flex={1} overflowY=\"auto\">\n                    {branches.map((_, i) => (\n                        <TabPanel key={i} padding={0} h=\"100%\">\n                            <Suspense fallback={<Progress isIndeterminate />}>\n                                <ErrorBoundary>\n                                    <StationAgGrid branchIndex={i} />\n                                </ErrorBoundary>\n                            </Suspense>\n                        </TabPanel>\n                    ))}\n                </TabPanels>\n            </Tabs>\n\n            <AddStationModal isOpen={isAddStationModalOpen} onClose={() => setIsAddStationModalOpen(false)} />\n            <NewBranchModal isOpen={isNewBranchModalOpen} onClose={() => setIsNewBranchModalOpen(false)} />\n        </Box>\n    );\n}\n","import React from 'react';\nimport { CircularProgress, Flex, Modal, ModalOverlay } from '@chakra-ui/react';\nimport { useAppSelector } from '../../redux';\n\nexport default function LoadingModal() {\n    const isLoading = useAppSelector(state => state.app.isLoading);\n\n    return (\n        <Modal isOpen={isLoading} onClose={() => {}}>\n            <ModalOverlay />\n            <Flex position=\"absolute\" top={0} left={0} h=\"100%\" w=\"100%\" justifyContent=\"center\" alignItems=\"center\">\n                <CircularProgress isIndeterminate color=\"teal\" />\n            </Flex>\n        </Modal>\n    );\n}\n","import React, { useEffect } from 'react';\nimport SvgRouter from '../svgs/svg-router';\nimport SidePanel from './side-panel/side-panel';\nimport PageHeader from './page-header/page-header';\nimport WindowHeader from './window-header';\nimport { Alert, AlertIcon, Box, CloseButton, Flex } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../redux';\nimport { setGlobalAlert } from '../redux/app/action';\nimport GridTabs from './ag-grid/grid-tabs';\nimport LoadingModal from './modal/loading-modal';\n\nexport default function AppRoot() {\n    const dispatch = useDispatch();\n\n    const globalAlert = useAppSelector(state => state.app.globalAlert);\n    const param = useAppSelector(state => state.param);\n    const paramString = JSON.stringify(param);\n\n    useEffect(() => {\n        window.rmgStorage.writeFile('rmgParam', paramString).then();\n    }, [paramString]);\n\n    return (\n        <Flex direction=\"column\" height=\"100%\" overflow=\"hidden\">\n            <LoadingModal />\n            <WindowHeader />\n            <Flex direction=\"column\" flex={1} overflow=\"hidden\">\n                <PageHeader />\n                <Flex flex={1} overflow=\"hidden\" position=\"relative\">\n                    <Flex as=\"section\" direction=\"column\" flex={1} ml={1} mr={1} overflow=\"hidden\">\n                        {globalAlert && (\n                            <Alert status={globalAlert.status} variant=\"solid\" size=\"xs\" pl={3} pr={1} pb={0} pt={0}>\n                                <AlertIcon />\n                                {globalAlert.message}\n                                <CloseButton ml=\"auto\" onClick={() => dispatch(setGlobalAlert())} />\n                            </Alert>\n                        )}\n\n                        <Box>\n                            <SvgRouter />\n                        </Box>\n                        <GridTabs />\n                    </Flex>\n\n                    <SidePanel />\n                </Flex>\n            </Flex>\n\n            <canvas style={{ display: 'none' }} />\n        </Flex>\n    );\n}\n","import { Translation } from '../constants';\nimport { CompanyCode } from '../company-config';\n\nexport const templateList: Record<CompanyCode, { filename: string; name: Translation }[]> = {\n    basic: [\n        {\n            filename: 'blank',\n            name: {\n                en: 'Blank',\n                zh: '空白',\n            },\n        },\n        {\n            filename: 'default',\n            name: {\n                en: 'Default',\n                'zh-Hans': '默认',\n                'zh-Hant': '預設',\n            },\n        },\n        {\n            filename: 'coline',\n            name: {\n                en: 'Track Share',\n                'zh-Hans': '共线',\n                'zh-Hant': '共綫',\n            },\n        },\n        {\n            filename: 'loop',\n            name: {\n                en: 'Loop Line',\n                'zh-Hans': '环线',\n                'zh-Hant': '環綫',\n            },\n        },\n    ],\n\n    bjsubway: [\n        {\n            filename: 'bj1',\n            name: {\n                en: 'Line 1 by AnDanJuneUnderline',\n                'zh-Hans': '1号线 来自 AnDanJuneUnderline',\n                'zh-Hant': '1號線 來自 AnDanJuneUnderline',\n            },\n        },\n        {\n            filename: 'bj2',\n            name: {\n                en: 'Line 2 by AnDanJuneUnderline',\n                'zh-Hans': '2号线 来自 AnDanJuneUnderline',\n                'zh-Hant': '2號線 來自 AnDanJuneUnderline',\n            },\n        },\n        {\n            filename: 'bj4',\n            name: {\n                en: 'Line 4 by AnDanJuneUnderline',\n                'zh-Hans': '4号线 来自 AnDanJuneUnderline',\n                'zh-Hant': '4號線 來自 AnDanJuneUnderline',\n            },\n        },\n        {\n            filename: 'bj5',\n            name: {\n                en: 'Line 5 by AnDanJuneUnderline',\n                'zh-Hans': '5号线 来自 AnDanJuneUnderline',\n                'zh-Hant': '5號線 來自 AnDanJuneUnderline',\n            },\n        },\n        {\n            filename: 'bj6',\n            name: {\n                en: 'Line 6 by AnDanJuneUnderline',\n                'zh-Hans': '6号线 来自 AnDanJuneUnderline',\n                'zh-Hant': '6號線 來自 AnDanJuneUnderline',\n            },\n        },\n        {\n            filename: 'bj7',\n            name: {\n                en: 'Line 7 by AnDanJuneUnderline',\n                'zh-Hans': '7号线 来自 AnDanJuneUnderline',\n                'zh-Hant': '7號線 來自 AnDanJuneUnderline',\n            },\n        },\n        {\n            filename: 'bj8',\n            name: {\n                en: 'Line 8 by Jay20081229',\n                'zh-Hans': '8号线 来自 Jay20081229',\n                'zh-Hant': '8號線 來自 Jay20081229',\n            },\n        },\n        {\n            filename: 'bj9',\n            name: {\n                en: 'Line 9 by AnDanJuneUnderline',\n                'zh-Hans': '9号线 来自 AnDanJuneUnderline',\n                'zh-Hant': '9號線 來自 AnDanJuneUnderline',\n            },\n        },\n        {\n            filename: 'bj10',\n            name: {\n                en: 'Line 10 by 52PD',\n                'zh-Hans': '10号线 来自 52PD',\n                'zh-Hant': '10號線 來自 52PD',\n            },\n        },\n        {\n            filename: 'bj11',\n            name: {\n                en: 'Line 11 by Jay20081229',\n                'zh-Hans': '11号线 来自 Jay20081229',\n                'zh-Hant': '11號線 來自 Jay20081229',\n            },\n        },\n        {\n            filename: 'bj13',\n            name: {\n                en: 'Line 13 by AnDanJuneUnderline',\n                'zh-Hans': '13号线 来自 AnDanJuneUnderline',\n                'zh-Hant': '13號線 來自 AnDanJuneUnderline',\n            },\n        },\n        {\n            filename: 'bj14',\n            name: {\n                en: 'Line 14 by Jay20081229',\n                'zh-Hans': '14号线 来自 Jay20081229',\n                'zh-Hant': '14號線 來自 Jay20081229',\n            },\n        },\n        {\n            filename: 'bj16',\n            name: {\n                en: 'Line 16 by Jay20081229',\n                'zh-Hans': '16号线 来自 Jay20081229',\n                'zh-Hant': '16號線 來自 Jay20081229',\n            },\n        },\n        {\n            filename: 'bj17',\n            name: {\n                en: 'Line 17 by Jay20081229',\n                'zh-Hans': '17号线 来自 Jay20081229',\n                'zh-Hant': '17號線 來自 Jay20081229',\n            },\n        },\n        {\n            filename: 'dae',\n            name: {\n                en: 'Daxing Airport Express',\n                'zh-Hans': '大兴机场线',\n                'zh-Hant': '大興機場線',\n            },\n        },\n        {\n            filename: 's1l',\n            name: {\n                en: 'S1 Line',\n                'zh-Hans': 'S1线',\n                'zh-Hant': 'S1線',\n            },\n        },\n        {\n            filename: 't1l',\n            name: {\n                en: 'Yizhuang T1 Line by AnDanJuneUnderline',\n                'zh-Hans': '亦庄T1线 来自 AnDanJuneUnderline',\n                'zh-Hant': '亦莊T1線 來自 AnDanJuneUnderline',\n            },\n        },\n        {\n            filename: 'xjl',\n            name: {\n                en: 'Xijiao Line',\n                'zh-Hans': '西郊线',\n                'zh-Hant': '西郊線',\n            },\n        },\n        {\n            filename: 'yzl',\n            name: {\n                en: 'Yizhuang Line by AnDanJuneUnderline',\n                'zh-Hans': '亦庄线 来自 AnDanJuneUnderline',\n                'zh-Hant': '亦莊線 來自 AnDanJuneUnderline',\n            },\n        },\n    ],\n\n    fmetro: [\n        {\n            filename: 'fs2',\n            name: {\n                en: 'Line 2 by Dingdong2334',\n                'zh-Hans': '2号线 来自 Dingdong2334',\n                'zh-Hant': '2號線 來自 Dingdong2334',\n            },\n        },\n        {\n            filename: 'tnh1',\n            name: {\n                en: 'Nanhai Tram Line 1 by clearng-kly',\n                'zh-Hans': '南海有轨1号线 来自 clearng-kly',\n                'zh-Hant': '南海有軌1號線 來自 clearng-kly',\n            },\n        },\n        {\n            filename: 'tgm1',\n            name: {\n                en: 'Gaoming Tram by clearng-kly',\n                'zh-Hans': '高明有轨电车 来自 clearng-kly',\n                'zh-Hant': '高明有軌電車 來自 clearng-kly',\n            },\n        },\n    ],\n\n    gzmtr: [\n        {\n            filename: 'gz1',\n            name: {\n                en: 'Line 1',\n                'zh-Hans': '1号线',\n                'zh-Hant': '1號線',\n            },\n        },\n        {\n            filename: 'gz2',\n            name: {\n                en: 'Line 2',\n                'zh-Hans': '2号线',\n                'zh-Hant': '2號線',\n            },\n        },\n        {\n            filename: 'gz3',\n            name: {\n                en: 'Line 3',\n                'zh-Hans': '3号线',\n                'zh-Hant': '3號線',\n            },\n        },\n        {\n            filename: 'gz4',\n            name: {\n                en: 'Line 4',\n                'zh-Hans': '4号线',\n                'zh-Hant': '4號線',\n            },\n        },\n        {\n            filename: 'gz5',\n            name: {\n                en: 'Line 5',\n                'zh-Hans': '5号线',\n                'zh-Hant': '5號線',\n            },\n        },\n        {\n            filename: 'gz6',\n            name: {\n                en: 'Line 6',\n                'zh-Hans': '6号线',\n                'zh-Hant': '6號線',\n            },\n        },\n        {\n            filename: 'gz7',\n            name: {\n                en: 'Line 7',\n                'zh-Hans': '7号线',\n                'zh-Hant': '7號線',\n            },\n        },\n        {\n            filename: 'gz8',\n            name: {\n                en: 'Line 8',\n                'zh-Hans': '8号线',\n                'zh-Hant': '8號線',\n            },\n        },\n        {\n            filename: 'gz9',\n            name: {\n                en: 'Line 9',\n                'zh-Hans': '9号线',\n                'zh-Hant': '9號線',\n            },\n        },\n        {\n            filename: 'gz13',\n            name: {\n                en: 'Line 13 by Dingdong2334',\n                'zh-Hans': '13号线 来自 Dingdong2334',\n                'zh-Hant': '13號線 來自 Dingdong2334',\n            },\n        },\n        {\n            filename: 'gz14',\n            name: {\n                en: 'Line 14',\n                'zh-Hans': '14号线',\n                'zh-Hant': '14號線',\n            },\n        },\n        {\n            filename: 'gz18',\n            name: {\n                en: 'Line 18 by Dingdong2334',\n                'zh-Hans': '18号线 来自 Dingdong2334',\n                'zh-Hant': '18號線 來自 Dingdong2334',\n            },\n        },\n        {\n            filename: 'gz21',\n            name: {\n                en: 'Line 21',\n                'zh-Hans': '21号线',\n                'zh-Hant': '21號線',\n            },\n        },\n        {\n            filename: 'gz22',\n            name: {\n                en: 'Line 22',\n                'zh-Hans': '22号线',\n                'zh-Hant': '22號線',\n            },\n        },\n        {\n            filename: 'gf',\n            name: {\n                en: 'Guangfo Line',\n                'zh-Hans': '广佛线',\n                'zh-Hant': '廣佛線',\n            },\n        },\n        {\n            filename: 'apm',\n            name: {\n                en: 'APM Line by Dingdong2334',\n                'zh-Hans': 'APM线 来自 Dingdong2334',\n                'zh-Hant': 'APM線 來自 Dingdong2334',\n            },\n        },\n        {\n            filename: 'thz1',\n            name: {\n                en: 'Haizhu Tram Line 1',\n                'zh-Hans': '海珠有轨1号线 来自 clearng-kly',\n                'zh-Hant': '海珠有軌1號線 來自 clearng-kly',\n            },\n        },\n        {\n            filename: 'thp1',\n            name: {\n                en: 'Huangpu Tram Line 1',\n                'zh-Hans': '黄埔有轨1号线 来自 clearng-kly',\n                'zh-Hant': '黃埔有軌1號線 來自 clearng-kly',\n            },\n        },\n    ],\n\n    kmrailtransit: [\n        {\n            filename: 'km1',\n            name: {\n                en: 'Line 1 by 52PD',\n                'zh-Hans': '1号线 来自 52PD',\n                'zh-Hant': '1號線 來自 52PD',\n            },\n        },\n        {\n            filename: 'km2',\n            name: {\n                en: 'Line 2 by 52PD',\n                'zh-Hans': '2号线 来自 52PD',\n                'zh-Hant': '2號線 來自 52PD',\n            },\n        },\n        {\n            filename: 'km3',\n            name: {\n                en: 'Line 3 by 52PD',\n                'zh-Hans': '3号线 来自 52PD',\n                'zh-Hant': '3號線 來自 52PD',\n            },\n        },\n        {\n            filename: 'km4',\n            name: {\n                en: 'Line 4 by 52PD',\n                'zh-Hans': '4号线 来自 52PD',\n                'zh-Hant': '4號線 來自 52PD',\n            },\n        },\n        {\n            filename: 'km5',\n            name: {\n                en: 'Line 5 by 52PD',\n                'zh-Hans': '5号线 来自 52PD',\n                'zh-Hant': '5號線 來自 52PD',\n            },\n        },\n        {\n            filename: 'km6',\n            name: {\n                en: 'Line 6 by 52PD',\n                'zh-Hans': '6号线 来自 52PD',\n                'zh-Hant': '6號線 來自 52PD',\n            },\n        },\n    ],\n\n    kvtransit: [\n        {\n            filename: 'klMonorail',\n            name: {\n                en: 'KL Monorail',\n                ms: 'KL Monorail',\n                'zh-Hans': '吉隆坡单轨',\n                'zh-Hant': '吉隆坡單軌',\n            },\n        },\n        {\n            filename: 'lrtAmpang',\n            name: {\n                en: 'Ampang Line',\n                ms: 'Laluan Ampang',\n                'zh-Hans': '安邦线',\n                'zh-Hant': '安邦線',\n            },\n        },\n        {\n            filename: 'lrtKelanaJaya',\n            name: {\n                en: 'Kelana Jaya Line',\n                ms: 'Laluan Kelana Jaya',\n                'zh-Hans': '格拉那再也线',\n                'zh-Hant': '格拉那再也線',\n            },\n        },\n        {\n            filename: 'lrtSriPataling',\n            name: {\n                en: 'Sri Pataling Line',\n                ms: 'Laluan Sri Pataling',\n                'zh-Hans': '大城堡线',\n                'zh-Hant': '大城堡線',\n            },\n        },\n        {\n            filename: 'mrtKajang',\n            name: {\n                en: 'Kajang Line',\n                ms: 'Laluan Kajang',\n                'zh-Hans': '加影线',\n                'zh-Hant': '加影線',\n            },\n        },\n    ],\n\n    mlm: [\n        {\n            filename: 'taipa',\n            name: {\n                en: 'Taipa Line',\n                pt: 'Linha Taipa',\n                'zh-Hans': '氹仔线',\n                'zh-Hant': '氹仔線',\n            },\n        },\n    ],\n\n    mtr: [\n        {\n            filename: 'twl',\n            name: {\n                en: 'Tsuen Wan Line',\n                'zh-Hans': '荃湾线',\n                'zh-Hant': '荃灣綫',\n            },\n        },\n        {\n            filename: 'ktl',\n            name: {\n                en: 'Kwun Tong Line',\n                'zh-Hans': '观塘线',\n                'zh-Hant': '觀塘綫',\n            },\n        },\n        {\n            filename: 'isl',\n            name: {\n                en: 'Island Line',\n                'zh-Hans': '港岛线',\n                'zh-Hant': '港島綫',\n            },\n        },\n        {\n            filename: 'tkl',\n            name: {\n                en: 'Tseung Kwan O Line',\n                'zh-Hans': '将军澳线',\n                'zh-Hant': '將軍澳綫',\n            },\n        },\n        {\n            filename: 'sile',\n            name: {\n                en: 'South Island Line',\n                'zh-Hans': '南港岛线',\n                'zh-Hant': '南港島綫',\n            },\n        },\n        {\n            filename: 'eal',\n            name: {\n                en: 'East Rail Line',\n                'zh-Hans': '东铁线',\n                'zh-Hant': '東鐵綫',\n            },\n        },\n        {\n            filename: 'drl',\n            name: {\n                en: 'Disneyland Resort Line',\n                'zh-Hans': '迪士尼线',\n                'zh-Hant': '迪士尼綫',\n            },\n        },\n        {\n            filename: 'ael',\n            name: {\n                en: 'Airport Express',\n                'zh-Hans': '机场快线',\n                'zh-Hant': '機場快綫',\n            },\n        },\n        {\n            filename: 'tml',\n            name: {\n                en: 'Tuen Ma Line',\n                'zh-Hans': '屯马线',\n                'zh-Hant': '屯馬綫',\n            },\n        },\n    ],\n\n    njmetro: [\n        {\n            filename: 'nj1',\n            name: {\n                en: 'Line 1 by linchen1965',\n                'zh-Hans': '1号线 来自 linchen1965',\n                'zh-Hant': '1號線 來自 linchen1965',\n            },\n        },\n        {\n            filename: 'nj2',\n            name: {\n                en: 'Line 2 by linchen1965',\n                'zh-Hans': '2号线 来自 linchen1965',\n                'zh-Hant': '2號線 來自 linchen1965',\n            },\n        },\n        {\n            filename: 'nj3',\n            name: {\n                en: 'Line 3 by linchen1965',\n                'zh-Hans': '3号线 来自 linchen1965',\n                'zh-Hant': '3號線 來自 linchen1965',\n            },\n        },\n        {\n            filename: 'nj4',\n            name: {\n                en: 'Line 4 by linchen1965',\n                'zh-Hans': '4号线 来自 linchen1965',\n                'zh-Hant': '4號線 來自 linchen1965',\n            },\n        },\n        {\n            filename: 'nj10',\n            name: {\n                en: 'Line 10 by linchen1965',\n                'zh-Hans': '10号线 来自 linchen1965',\n                'zh-Hant': '10號線 來自 linchen1965',\n            },\n        },\n    ],\n\n    qdmetro: [\n        {\n            filename: 'qd2',\n            name: {\n                en: 'Line 2',\n                'zh-Hans': '2号线',\n                'zh-Hant': '2號線',\n            },\n        },\n        {\n            filename: 'qd3',\n            name: {\n                en: 'Line 3',\n                'zh-Hans': '3号线',\n                'zh-Hant': '3號線',\n            },\n        },\n        {\n            filename: 'qd8',\n            name: {\n                en: 'Line 8',\n                'zh-Hans': '8号线',\n                'zh-Hant': '8號線',\n            },\n        },\n        {\n            filename: 'qd11',\n            name: {\n                en: 'Line 11',\n                'zh-Hans': '11号线',\n                'zh-Hant': '11號線',\n            },\n        },\n        {\n            filename: 'qd13',\n            name: {\n                en: 'Line 13',\n                'zh-Hans': '13号线',\n                'zh-Hant': '13號線',\n            },\n        },\n    ],\n\n    shmetro: [\n        {\n            filename: 'sh1',\n            name: {\n                en: 'Line 1',\n                'zh-Hans': '1号线',\n                'zh-Hant': '1號線',\n            },\n        },\n        {\n            filename: 'sh2',\n            name: {\n                en: 'Line 2',\n                'zh-Hans': '2号线',\n                'zh-Hant': '2號線',\n            },\n        },\n        {\n            filename: 'sh3',\n            name: {\n                en: 'Line 3',\n                'zh-Hans': '3号线',\n                'zh-Hant': '3號線',\n            },\n        },\n        {\n            filename: 'sh4',\n            name: {\n                en: 'Line 4',\n                'zh-Hans': '4号线',\n                'zh-Hant': '4號線',\n            },\n        },\n        {\n            filename: 'sh5',\n            name: {\n                en: 'Line 5 by Tianxiu11111',\n                'zh-Hans': '5号线 来自 Tianxiu11111',\n                'zh-Hant': '5號線 來自 Tianxiu11111',\n            },\n        },\n        {\n            filename: 'sh6',\n            name: {\n                en: 'Line 6 by Thomastzc',\n                'zh-Hans': '6号线 来自 Thomastzc',\n                'zh-Hant': '6號線 來自 Thomastzc',\n            },\n        },\n        {\n            filename: 'sh7',\n            name: {\n                en: 'Line 7 by Thomastzc',\n                'zh-Hans': '7号线 来自 Thomastzc',\n                'zh-Hant': '7號線 來自 Thomastzc',\n            },\n        },\n        {\n            filename: 'sh8',\n            name: {\n                en: 'Line 8 by Thomastzc',\n                'zh-Hans': '8号线 来自 Thomastzc',\n                'zh-Hant': '8號線 來自 Thomastzc',\n            },\n        },\n        {\n            filename: 'sh9',\n            name: {\n                en: 'Line 9',\n                'zh-Hans': '9号线',\n                'zh-Hant': '9號線',\n            },\n        },\n        {\n            filename: 'sh10',\n            name: {\n                en: 'Line 10',\n                'zh-Hans': '10号线',\n                'zh-Hant': '10號線',\n            },\n        },\n        {\n            filename: 'sh11',\n            name: {\n                en: 'Line 11 by Tianxiu11111',\n                'zh-Hans': '11号线 来自 Tianxiu11111',\n                'zh-Hant': '11號線 來自 Tianxiu11111',\n            },\n        },\n        {\n            filename: 'sh12',\n            name: {\n                en: 'Line 12 by Andy1782010',\n                'zh-Hans': '12号线 来自 Andy1782010',\n                'zh-Hant': '12號線 來自 Andy1782010',\n            },\n        },\n        {\n            filename: 'sh13',\n            name: {\n                en: 'Line 13 by Andy1782010',\n                'zh-Hans': '13号线 来自 Andy1782010',\n                'zh-Hant': '13號線 來自 Andy1782010',\n            },\n        },\n        {\n            filename: 'sh14',\n            name: {\n                en: 'Line 14',\n                'zh-Hans': '14号线',\n                'zh-Hant': '14號線',\n            },\n        },\n        {\n            filename: 'sh15',\n            name: {\n                en: 'Line 15 by Thomastzc',\n                'zh-Hans': '15号线 来自 Thomastzc',\n                'zh-Hant': '15號線 來自 Thomastzc',\n            },\n        },\n        {\n            filename: 'sh16',\n            name: {\n                en: 'Line 16',\n                'zh-Hans': '16号线',\n                'zh-Hant': '16號線',\n            },\n        },\n        {\n            filename: 'sh17',\n            name: {\n                en: 'Line 17 by Thomastzc',\n                'zh-Hans': '17号线 来自 Thomastzc',\n                'zh-Hant': '17號線 來自 Thomastzc',\n            },\n        },\n        {\n            filename: 'sh18',\n            name: {\n                en: 'Line 18 by Tianxiu11111',\n                'zh-Hans': '18号线 来自 Tianxiu11111',\n                'zh-Hant': '18號線 來自 Tianxiu11111',\n            },\n        },\n    ],\n\n    saopaulometro: [\n        {\n            filename: 'sp1',\n            name: {\n                en: 'Line 1',\n                pt: 'Linha 1',\n                'zh-Hans': '1号线',\n                'zh-Hant': '1號線',\n            },\n        },\n        {\n            filename: 'sp2',\n            name: {\n                en: 'Line 2',\n                pt: 'Linha 2',\n                'zh-Hans': '2号线',\n                'zh-Hant': '2號線',\n            },\n        },\n        {\n            filename: 'sp3',\n            name: {\n                en: 'Line 3',\n                pt: 'Linha 3',\n                'zh-Hans': '3号线',\n                'zh-Hant': '3號線',\n            },\n        },\n        {\n            filename: 'sp4',\n            name: {\n                en: 'Line 4',\n                pt: 'Linha 4',\n                'zh-Hans': '4号线',\n                'zh-Hant': '4號線',\n            },\n        },\n        {\n            filename: 'sp5',\n            name: {\n                en: 'Line 5',\n                pt: 'Linha 5',\n                'zh-Hans': '5号线',\n                'zh-Hant': '5號線',\n            },\n        },\n        {\n            filename: 'sp7',\n            name: {\n                en: 'Line 7',\n                pt: 'Linha 7',\n                'zh-Hans': '7号线',\n                'zh-Hant': '7號線',\n            },\n        },\n        {\n            filename: 'sp8',\n            name: {\n                en: 'Line 8',\n                pt: 'Linha 8',\n                'zh-Hans': '8号线',\n                'zh-Hant': '8號線',\n            },\n        },\n        {\n            filename: 'sp9',\n            name: {\n                en: 'Line 9',\n                pt: 'Linha 9',\n                'zh-Hans': '9号线',\n                'zh-Hant': '9號線',\n            },\n        },\n        {\n            filename: 'sp10',\n            name: {\n                en: 'Line 10',\n                pt: 'Linha 10',\n                'zh-Hans': '10号线',\n                'zh-Hant': '10號線',\n            },\n        },\n        {\n            filename: 'sp11',\n            name: {\n                en: 'Line 11',\n                pt: 'Linha 11',\n                'zh-Hans': '11号线',\n                'zh-Hant': '11號線',\n            },\n        },\n        {\n            filename: 'sp12',\n            name: {\n                en: 'Line 12',\n                pt: 'Linha 12',\n                'zh-Hans': '12号线',\n                'zh-Hant': '12號線',\n            },\n        },\n        {\n            filename: 'sp13',\n            name: {\n                en: 'Line 13',\n                pt: 'Linha 13',\n                'zh-Hans': '13号线',\n                'zh-Hant': '13號線',\n            },\n        },\n        {\n            filename: 'sp15',\n            name: {\n                en: 'Line 15',\n                pt: 'Linha 15',\n                'zh-Hans': '15号线',\n                'zh-Hant': '15號線',\n            },\n        },\n    ],\n\n    szmetro: [\n        {\n            filename: 'sz1',\n            name: {\n                en: 'Line 1',\n                'zh-Hans': '1号线',\n                'zh-Hant': '1號線',\n            },\n        },\n        {\n            filename: 'sz3',\n            name: {\n                en: 'Line 3',\n                'zh-Hans': '3号线',\n                'zh-Hant': '3號線',\n            },\n        },\n        {\n            filename: 'sz4',\n            name: {\n                en: 'Line 4',\n                'zh-Hans': '4号线',\n                'zh-Hant': '4號線',\n            },\n        },\n    ],\n\n    zzmetro: [\n        {\n            filename: 'zz1',\n            name: {\n                en: 'Line 1',\n                'zh-Hans': '1号线',\n                'zh-Hant': '1號線',\n            },\n        },\n        {\n            filename: 'zz2',\n            name: {\n                en: 'Line 2',\n                'zh-Hans': '2号线',\n                'zh-Hant': '2號線',\n            },\n        },\n        {\n            filename: 'zz3',\n            name: {\n                en: 'Line 3',\n                'zh-Hans': '3号线',\n                'zh-Hant': '3號線',\n            },\n        },\n        {\n            filename: 'zz4',\n            name: {\n                en: 'Line 4',\n                'zh-Hans': '4号线',\n                'zh-Hant': '4號線',\n            },\n        },\n        {\n            filename: 'zz5',\n            name: {\n                en: 'Line 5',\n                'zh-Hans': '5号线',\n                'zh-Hant': '5號線',\n            },\n        },\n        {\n            filename: 'zz6',\n            name: {\n                en: 'Line 6',\n                'zh-Hans': '6号线',\n                'zh-Hant': '6號線',\n            },\n        },\n        {\n            filename: 'zz9',\n            name: {\n                en: 'Line 9',\n                'zh-Hans': '9号线',\n                'zh-Hant': '9號線',\n            },\n        },\n        {\n            filename: 'zz14',\n            name: {\n                en: 'Line 14',\n                'zh-Hans': '14号线',\n                'zh-Hant': '14號線',\n            },\n        },\n    ],\n};\n","import { AppDispatch, RootState } from '../index';\nimport { ColineInfo, InterchangeInfo, StationDict } from '../../constants/constants';\nimport { setColineBulk } from './action';\nimport { nanoid } from 'nanoid';\n\n// Cartesian product of multiple arrays in JavaScript\n// https://stackoverflow.com/questions/12303989/cartesian-product-of-multiple-arrays-in-javascript\n// Equivalent typescript version\n// https://gist.github.com/ssippe/1f92625532eef28be6974f898efb23ef?permalink_comment_id=3364149#gistcomment-3364149\nfunction cartesian<T>(...allEntries: T[][]): T[][] {\n    return allEntries.reduce<T[][]>(\n        (results, entries) =>\n            results\n                .map(result => entries.map(entry => result.concat([entry])))\n                .reduce((subResults, result) => subResults.concat(result), []),\n        [[]]\n    );\n}\n\n/**\n * Coline branch is also known as the lower branch.\n */\nexport const isColineBranch = (branch: string[], stnList: StationDict) =>\n    stnList[branch[0]].children.indexOf(branch[1]) ? true : false;\n\nexport const getPossibleStnIdsFromMainLine = (branches: string[][], stnList: StationDict) => [\n    branches[0][1], // skip linestart\n    branches[0][branches[0].length - 2], // skip lineend\n    ...branches[0].filter(stnId =>\n        // for every station in the main line, find if it branches out at this station\n        branches\n            .slice(1)\n            .filter(branch => isColineBranch(branch, stnList))\n            // branches after the first/main line may not have linestart or lineend\n            .map(branch => branch.filter(stnId => !['linestart', 'lineend'].includes(stnId)))\n            // only stations at both ends need to be taken into consideration\n            .map(branch => [branch[0], branch[branch.length - 1]])\n            .flat()\n            .includes(stnId)\n    ),\n];\n\nexport const getPossibleStnIdsFromBranchLine = (branches: string[][], stnList: StationDict) =>\n    branches\n        .slice(1)\n        .filter(branch => isColineBranch(branch, stnList))\n        .map(branch => branch.filter(stnId => !['linestart', 'lineend'].includes(stnId)))\n        .map(branch => [branch[0], branch[branch.length - 1]]);\n\nexport const getPossibleCombinations = (branchIndex: number) => {\n    return (dispatch: AppDispatch, getState: () => RootState): [string, string][] => {\n        const branches = getState().helper.branches;\n\n        if (branchIndex === 0) {\n            const stnList = getState().param.stn_list;\n            const possibleStnIdsFromMainLine = getPossibleStnIdsFromMainLine(branches, stnList);\n            return cartesian(possibleStnIdsFromMainLine, possibleStnIdsFromMainLine).filter(\n                val => val[0] !== val[1]\n            ) as [string, string][];\n        } else {\n            const branch = branches[branchIndex];\n            if (branch) {\n                const b = branch.filter(id => !['linestart', 'lineend'].includes(id));\n                return [[b[0], b.slice(-1)[0]]];\n            } else {\n                return [];\n            }\n        }\n    };\n};\n\n/**\n * Calculate row span for displaying track sharing column in StationAgGrid\n * @param stationId id of station that begins to span rows\n * @param branchIndex index of branch that the grid is displaying\n */\nexport const getRowSpanForColine = (stationId: string, branchIndex: number) => {\n    return (dispatch: AppDispatch, getState: () => RootState): [number, string | undefined] => {\n        const coline = getState().param.coline;\n        const branch = getState().helper.branches[branchIndex];\n\n        for (let [clId, cl] of Object.entries(coline)) {\n            if (cl.from === stationId && branch.includes(cl.to)) {\n                const thisIndex = branch.indexOf(stationId);\n                const thatIndex = branch.indexOf(cl.to);\n                if (thatIndex > thisIndex) {\n                    return [thatIndex - thisIndex + 1, clId];\n                }\n            } else if (cl.to === stationId && branch.includes(cl.to)) {\n                const thisIndex = branch.indexOf(stationId);\n                const thatIndex = branch.indexOf(cl.from);\n                if (thatIndex > thisIndex) {\n                    return [thatIndex - thisIndex + 1, clId];\n                }\n            }\n        }\n        return [0, undefined];\n    };\n};\n\n/**\n * Verify station selections from table are consecutive, which is the prerequisite for track sharing.\n * @param selectedIds IDs of the selected stations (get by gridApi)\n * @param branchIndex\n */\nexport const verifyAreSelectionsConsecutive = (selectedIds: string[], branchIndex: number) => {\n    return (dispatch: AppDispatch, getState: () => RootState): boolean => {\n        const branch = getState().helper.branches[branchIndex];\n\n        const from = selectedIds[0];\n        const to = selectedIds.slice(-1)[0];\n\n        const areConsecutiveSelections =\n            branch.slice(branch.indexOf(from), branch.indexOf(to) + 1).toString() === selectedIds.toString();\n        if (!areConsecutiveSelections) {\n            console.log('verifyAreSelectionsConsecutive():: Selections are NOT consecutive');\n            return false;\n        } else {\n            return true;\n        }\n    };\n};\n\n/**\n *  Checks the validity of from and to. Currently we accept coline if it:\n 1. Start from either ends of the mainline or branch stations and\n terminate at either ends of the mainline or branch stations.\n 2. Start from the one end of the branch line and\n terminate at the other end of the same branch line.\n\n * @param from station id from\n * @param to station id to\n */\nexport const checkColineValidity = (from: string, to: string) => {\n    return (dispatch: AppDispatch, getState: () => RootState) => {\n        const stnList = getState().param.stn_list;\n        const branches = getState().helper.branches;\n\n        if (from === to) {\n            throw new Error('addColine():: failed for same stnId');\n        }\n        // calculate if coline is in the main line\n        const colineInMainLine = getPossibleStnIdsFromMainLine(branches, stnList).filter(stnId =>\n            [from, to].includes(stnId)\n        );\n        // calculate if coline is in one branch line\n        const colineInBranches = getPossibleStnIdsFromBranchLine(branches, stnList).filter(terminals =>\n            [from, to].every(stnId => terminals.includes(stnId))\n        );\n        // see if coline is in the main line\n        if (colineInMainLine.length === 2 && colineInBranches.length > 0) {\n            throw new Error('addColine():: failed');\n        }\n        // see if coline is in one branch line\n        if (colineInMainLine.length !== 2 && colineInBranches.length !== 1) {\n            throw new Error('addColine():: failed');\n        }\n    };\n};\n\nexport const findAllColinesInBranch = (branchIndex: number) => {\n    return (dispatch: AppDispatch, getState: () => RootState) => {\n        const coline = getState().param.coline;\n        const branches = getState().helper.branches;\n        const branch = branches[branchIndex];\n\n        if (branch) {\n            return Object.entries(coline).reduce<Record<string, ColineInfo>>((acc, cur) => {\n                if (branch.includes(cur[1].from) && branch.includes(cur[1].to)) {\n                    return { ...acc, [cur[0]]: cur[1] };\n                } else {\n                    return { ...acc };\n                }\n            }, {});\n        } else {\n            return {};\n        }\n    };\n};\n\n/**\n * Remove related coline when the deleteStn is the coline `from` or `to` station.\n */\nexport const removeInvalidColineOnRemoveStation = (deleteStnId: string) => {\n    return (dispatch: AppDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (Object.keys(colineInfo).length === 0) return;\n\n        const nextColine = Object.entries(colineInfo).reduce<Record<string, ColineInfo>>((acc, cur) => {\n            if (cur[1].from !== deleteStnId && cur[1].to !== deleteStnId) {\n                return { ...acc, [cur[0]]: cur[1] };\n            } else {\n                return { ...acc };\n            }\n        }, {});\n\n        dispatch(setColineBulk(nextColine));\n    };\n};\n\nexport const addColine = (from: string, to: string, colors: InterchangeInfo[], display: boolean = true) => {\n    return (dispatch: AppDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        dispatch(checkColineValidity(from, to));\n        dispatch(\n            setColineBulk({\n                ...colineInfo,\n                [nanoid(4)]: { from: from, to: to, colors: colors, display: display },\n            })\n        );\n    };\n};\n\nexport const updateColine = (colineId: string, from: string, to: string, display = true) => {\n    return (dispatch: AppDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo) {\n            dispatch(checkColineValidity(from, to));\n\n            const newColineInfo = {\n                ...colineInfo,\n                [colineId]: { ...colineInfo[colineId], from, to, display },\n            };\n\n            dispatch(setColineBulk(newColineInfo));\n        }\n    };\n};\n\nexport const removeColine = (colineId: string) => {\n    return (dispatch: AppDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo) {\n            const { [colineId]: _, ...nextColine } = colineInfo;\n            dispatch(setColineBulk(nextColine));\n        }\n    };\n};\n\n/**\n *\n * @param colineId\n * @param interchangeInfo\n */\nexport const addColineColor = (colineId: string, interchangeInfo: InterchangeInfo) => {\n    return (dispatch: AppDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        colineInfo[colineId].colors = [...colineInfo[colineId].colors, interchangeInfo];\n\n        dispatch(setColineBulk(colineInfo));\n    };\n};\n\nexport const removeColineColor = (colineId: string, interchangeIndex: number) => {\n    return (dispatch: AppDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo && colineInfo[colineId].colors.length > interchangeIndex) {\n            const nextColours = colineInfo[colineId].colors.filter((_, colineIdx) => colineIdx !== interchangeIndex);\n            if (nextColours.length === 0) {\n                // remove entire coline\n                const { [colineId]: _, ...nextColine } = colineInfo;\n                dispatch(setColineBulk(nextColine));\n            } else {\n                // update coline colour list\n                const nextColine = {\n                    ...colineInfo,\n                    [colineId]: { ...colineInfo[colineId], colors: nextColours },\n                };\n                dispatch(setColineBulk(nextColine));\n            }\n        }\n    };\n};\n\nexport const updateColineColor = (colineId: string, interchangeIndex: number, interchangeInfo: InterchangeInfo) => {\n    return (dispatch: AppDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo && colineInfo[colineId].colors.length > interchangeIndex) {\n            colineInfo[colineId].colors = colineInfo[colineId].colors.map((int, colineIdx) =>\n                colineIdx === interchangeIndex\n                    ? ([0, 1, 2, 3, 4, 5].map(i =>\n                          interchangeInfo[i] === undefined ? int[i] : interchangeInfo[i]\n                      ) as InterchangeInfo)\n                    : int\n            );\n\n            dispatch(setColineBulk(colineInfo));\n        }\n    };\n};\n\n// DEBUG PROXY\n// declare const window: any;\n// window.addColine = addColine;\n// window.updateColine = updateColine;\n// window.removeColine = removeColine;\n// window.rmgStore.dispatch(window.removeColine(2))\n// let t = ['shanghai', 'sh4', '#5F259F', '#fff', '4号线', 'Line 4']\n// window.rmgStore.dispatch(window.addColine('s9tt', 'l1mz', [t]))\n","var map = {\n\t\"./basic/blank\": [\n\t\t8107,\n\t\t8014\n\t],\n\t\"./basic/blank.ts\": [\n\t\t8107,\n\t\t8014\n\t],\n\t\"./basic/coline\": [\n\t\t255,\n\t\t9410\n\t],\n\t\"./basic/coline.ts\": [\n\t\t255,\n\t\t9410\n\t],\n\t\"./basic/default\": [\n\t\t25,\n\t\t6230\n\t],\n\t\"./basic/default.ts\": [\n\t\t25,\n\t\t6230\n\t],\n\t\"./basic/loop\": [\n\t\t7861,\n\t\t1188\n\t],\n\t\"./basic/loop.ts\": [\n\t\t7861,\n\t\t1188\n\t],\n\t\"./bjsubway/bj1\": [\n\t\t8731,\n\t\t6698\n\t],\n\t\"./bjsubway/bj1.ts\": [\n\t\t8731,\n\t\t6698\n\t],\n\t\"./bjsubway/bj10\": [\n\t\t8009,\n\t\t2773\n\t],\n\t\"./bjsubway/bj10.ts\": [\n\t\t8009,\n\t\t2773\n\t],\n\t\"./bjsubway/bj11\": [\n\t\t4050,\n\t\t7680\n\t],\n\t\"./bjsubway/bj11.ts\": [\n\t\t4050,\n\t\t7680\n\t],\n\t\"./bjsubway/bj13\": [\n\t\t9248,\n\t\t9259\n\t],\n\t\"./bjsubway/bj13.ts\": [\n\t\t9248,\n\t\t9259\n\t],\n\t\"./bjsubway/bj14\": [\n\t\t203,\n\t\t9797\n\t],\n\t\"./bjsubway/bj14.ts\": [\n\t\t203,\n\t\t9797\n\t],\n\t\"./bjsubway/bj16\": [\n\t\t357,\n\t\t3981\n\t],\n\t\"./bjsubway/bj16.ts\": [\n\t\t357,\n\t\t3981\n\t],\n\t\"./bjsubway/bj17\": [\n\t\t7335,\n\t\t7200\n\t],\n\t\"./bjsubway/bj17.ts\": [\n\t\t7335,\n\t\t7200\n\t],\n\t\"./bjsubway/bj2\": [\n\t\t6466,\n\t\t2244\n\t],\n\t\"./bjsubway/bj2.ts\": [\n\t\t6466,\n\t\t2244\n\t],\n\t\"./bjsubway/bj4\": [\n\t\t2428,\n\t\t7149\n\t],\n\t\"./bjsubway/bj4.ts\": [\n\t\t2428,\n\t\t7149\n\t],\n\t\"./bjsubway/bj5\": [\n\t\t3968,\n\t\t6452\n\t],\n\t\"./bjsubway/bj5.ts\": [\n\t\t3968,\n\t\t6452\n\t],\n\t\"./bjsubway/bj6\": [\n\t\t4140,\n\t\t2200\n\t],\n\t\"./bjsubway/bj6.ts\": [\n\t\t4140,\n\t\t2200\n\t],\n\t\"./bjsubway/bj7\": [\n\t\t9755,\n\t\t9950\n\t],\n\t\"./bjsubway/bj7.ts\": [\n\t\t9755,\n\t\t9950\n\t],\n\t\"./bjsubway/bj8\": [\n\t\t2013,\n\t\t6583\n\t],\n\t\"./bjsubway/bj8.ts\": [\n\t\t2013,\n\t\t6583\n\t],\n\t\"./bjsubway/bj9\": [\n\t\t7639,\n\t\t4015\n\t],\n\t\"./bjsubway/bj9.ts\": [\n\t\t7639,\n\t\t4015\n\t],\n\t\"./bjsubway/dae\": [\n\t\t1101,\n\t\t3084\n\t],\n\t\"./bjsubway/dae.ts\": [\n\t\t1101,\n\t\t3084\n\t],\n\t\"./bjsubway/s1l\": [\n\t\t9750,\n\t\t2846\n\t],\n\t\"./bjsubway/s1l.ts\": [\n\t\t9750,\n\t\t2846\n\t],\n\t\"./bjsubway/t1l\": [\n\t\t9891,\n\t\t8924\n\t],\n\t\"./bjsubway/t1l.ts\": [\n\t\t9891,\n\t\t8924\n\t],\n\t\"./bjsubway/xjl\": [\n\t\t209,\n\t\t2100\n\t],\n\t\"./bjsubway/xjl.ts\": [\n\t\t209,\n\t\t2100\n\t],\n\t\"./bjsubway/yzl\": [\n\t\t8602,\n\t\t199\n\t],\n\t\"./bjsubway/yzl.ts\": [\n\t\t8602,\n\t\t199\n\t],\n\t\"./data\": [\n\t\t9794\n\t],\n\t\"./data.ts\": [\n\t\t9794\n\t],\n\t\"./fmetro/fs2\": [\n\t\t4188,\n\t\t9655\n\t],\n\t\"./fmetro/fs2.ts\": [\n\t\t4188,\n\t\t9655\n\t],\n\t\"./fmetro/tgm1\": [\n\t\t3231,\n\t\t6555\n\t],\n\t\"./fmetro/tgm1.ts\": [\n\t\t3231,\n\t\t6555\n\t],\n\t\"./fmetro/tnh1\": [\n\t\t7549,\n\t\t2663\n\t],\n\t\"./fmetro/tnh1.ts\": [\n\t\t7549,\n\t\t2663\n\t],\n\t\"./gzmtr/apm\": [\n\t\t5540,\n\t\t6080\n\t],\n\t\"./gzmtr/apm.ts\": [\n\t\t5540,\n\t\t6080\n\t],\n\t\"./gzmtr/gf\": [\n\t\t5670,\n\t\t8724\n\t],\n\t\"./gzmtr/gf.ts\": [\n\t\t5670,\n\t\t8724\n\t],\n\t\"./gzmtr/gz1\": [\n\t\t4867,\n\t\t4694\n\t],\n\t\"./gzmtr/gz1.ts\": [\n\t\t4867,\n\t\t4694\n\t],\n\t\"./gzmtr/gz13\": [\n\t\t5811,\n\t\t5074\n\t],\n\t\"./gzmtr/gz13.ts\": [\n\t\t5811,\n\t\t5074\n\t],\n\t\"./gzmtr/gz14\": [\n\t\t8492,\n\t\t4754\n\t],\n\t\"./gzmtr/gz14.ts\": [\n\t\t8492,\n\t\t4754\n\t],\n\t\"./gzmtr/gz18\": [\n\t\t8778,\n\t\t2490\n\t],\n\t\"./gzmtr/gz18.ts\": [\n\t\t8778,\n\t\t2490\n\t],\n\t\"./gzmtr/gz2\": [\n\t\t4887,\n\t\t5910\n\t],\n\t\"./gzmtr/gz2.ts\": [\n\t\t4887,\n\t\t5910\n\t],\n\t\"./gzmtr/gz21\": [\n\t\t5884,\n\t\t403\n\t],\n\t\"./gzmtr/gz21.ts\": [\n\t\t5884,\n\t\t403\n\t],\n\t\"./gzmtr/gz22\": [\n\t\t7653,\n\t\t1180\n\t],\n\t\"./gzmtr/gz22.ts\": [\n\t\t7653,\n\t\t1180\n\t],\n\t\"./gzmtr/gz3\": [\n\t\t3328,\n\t\t1899\n\t],\n\t\"./gzmtr/gz3.ts\": [\n\t\t3328,\n\t\t1899\n\t],\n\t\"./gzmtr/gz4\": [\n\t\t8505,\n\t\t6899\n\t],\n\t\"./gzmtr/gz4.ts\": [\n\t\t8505,\n\t\t6899\n\t],\n\t\"./gzmtr/gz5\": [\n\t\t3691,\n\t\t1471\n\t],\n\t\"./gzmtr/gz5.ts\": [\n\t\t3691,\n\t\t1471\n\t],\n\t\"./gzmtr/gz6\": [\n\t\t8793,\n\t\t6293\n\t],\n\t\"./gzmtr/gz6.ts\": [\n\t\t8793,\n\t\t6293\n\t],\n\t\"./gzmtr/gz7\": [\n\t\t3208,\n\t\t5680\n\t],\n\t\"./gzmtr/gz7.ts\": [\n\t\t3208,\n\t\t5680\n\t],\n\t\"./gzmtr/gz8\": [\n\t\t1796,\n\t\t852\n\t],\n\t\"./gzmtr/gz8.ts\": [\n\t\t1796,\n\t\t852\n\t],\n\t\"./gzmtr/gz9\": [\n\t\t9086,\n\t\t758\n\t],\n\t\"./gzmtr/gz9.ts\": [\n\t\t9086,\n\t\t758\n\t],\n\t\"./gzmtr/thp1\": [\n\t\t1663,\n\t\t7855\n\t],\n\t\"./gzmtr/thp1.ts\": [\n\t\t1663,\n\t\t7855\n\t],\n\t\"./gzmtr/thz1\": [\n\t\t4742,\n\t\t4387\n\t],\n\t\"./gzmtr/thz1.ts\": [\n\t\t4742,\n\t\t4387\n\t],\n\t\"./kmrailtransit/km1\": [\n\t\t3390,\n\t\t4996\n\t],\n\t\"./kmrailtransit/km1.ts\": [\n\t\t3390,\n\t\t4996\n\t],\n\t\"./kmrailtransit/km2\": [\n\t\t6465,\n\t\t6569\n\t],\n\t\"./kmrailtransit/km2.ts\": [\n\t\t6465,\n\t\t6569\n\t],\n\t\"./kmrailtransit/km3\": [\n\t\t6934,\n\t\t3692\n\t],\n\t\"./kmrailtransit/km3.ts\": [\n\t\t6934,\n\t\t3692\n\t],\n\t\"./kmrailtransit/km4\": [\n\t\t9884,\n\t\t2791\n\t],\n\t\"./kmrailtransit/km4.ts\": [\n\t\t9884,\n\t\t2791\n\t],\n\t\"./kmrailtransit/km5\": [\n\t\t2968,\n\t\t4254\n\t],\n\t\"./kmrailtransit/km5.ts\": [\n\t\t2968,\n\t\t4254\n\t],\n\t\"./kmrailtransit/km6\": [\n\t\t6496,\n\t\t74\n\t],\n\t\"./kmrailtransit/km6.ts\": [\n\t\t6496,\n\t\t74\n\t],\n\t\"./kvtransit/klMonorail\": [\n\t\t4423,\n\t\t3456\n\t],\n\t\"./kvtransit/klMonorail.ts\": [\n\t\t4423,\n\t\t3456\n\t],\n\t\"./kvtransit/lrtAmpang\": [\n\t\t8096,\n\t\t7211\n\t],\n\t\"./kvtransit/lrtAmpang.ts\": [\n\t\t8096,\n\t\t7211\n\t],\n\t\"./kvtransit/lrtKelanaJaya\": [\n\t\t8971,\n\t\t7769\n\t],\n\t\"./kvtransit/lrtKelanaJaya.ts\": [\n\t\t8971,\n\t\t7769\n\t],\n\t\"./kvtransit/lrtSriPataling\": [\n\t\t175,\n\t\t1475\n\t],\n\t\"./kvtransit/lrtSriPataling.ts\": [\n\t\t175,\n\t\t1475\n\t],\n\t\"./kvtransit/mrtKajang\": [\n\t\t1683,\n\t\t7321\n\t],\n\t\"./kvtransit/mrtKajang.ts\": [\n\t\t1683,\n\t\t7321\n\t],\n\t\"./mlm/taipa\": [\n\t\t9897,\n\t\t7910\n\t],\n\t\"./mlm/taipa.ts\": [\n\t\t9897,\n\t\t7910\n\t],\n\t\"./mtr/ael\": [\n\t\t6641,\n\t\t6153\n\t],\n\t\"./mtr/ael.ts\": [\n\t\t6641,\n\t\t6153\n\t],\n\t\"./mtr/drl\": [\n\t\t27,\n\t\t6568\n\t],\n\t\"./mtr/drl.ts\": [\n\t\t27,\n\t\t6568\n\t],\n\t\"./mtr/eal\": [\n\t\t6301,\n\t\t8476\n\t],\n\t\"./mtr/eal.ts\": [\n\t\t6301,\n\t\t8476\n\t],\n\t\"./mtr/isl\": [\n\t\t8173,\n\t\t8330\n\t],\n\t\"./mtr/isl.ts\": [\n\t\t8173,\n\t\t8330\n\t],\n\t\"./mtr/ktl\": [\n\t\t9023,\n\t\t8615\n\t],\n\t\"./mtr/ktl.ts\": [\n\t\t9023,\n\t\t8615\n\t],\n\t\"./mtr/sile\": [\n\t\t9776,\n\t\t5797\n\t],\n\t\"./mtr/sile.ts\": [\n\t\t9776,\n\t\t5797\n\t],\n\t\"./mtr/tkl\": [\n\t\t4254,\n\t\t388\n\t],\n\t\"./mtr/tkl.ts\": [\n\t\t4254,\n\t\t388\n\t],\n\t\"./mtr/tml\": [\n\t\t2593,\n\t\t1074\n\t],\n\t\"./mtr/tml.ts\": [\n\t\t2593,\n\t\t1074\n\t],\n\t\"./mtr/twl\": [\n\t\t457,\n\t\t3437\n\t],\n\t\"./mtr/twl.ts\": [\n\t\t457,\n\t\t3437\n\t],\n\t\"./njmetro/nj1\": [\n\t\t2530,\n\t\t6010\n\t],\n\t\"./njmetro/nj1.ts\": [\n\t\t2530,\n\t\t6010\n\t],\n\t\"./njmetro/nj10\": [\n\t\t1931,\n\t\t5458\n\t],\n\t\"./njmetro/nj10.ts\": [\n\t\t1931,\n\t\t5458\n\t],\n\t\"./njmetro/nj2\": [\n\t\t6630,\n\t\t6432\n\t],\n\t\"./njmetro/nj2.ts\": [\n\t\t6630,\n\t\t6432\n\t],\n\t\"./njmetro/nj3\": [\n\t\t9413,\n\t\t5391\n\t],\n\t\"./njmetro/nj3.ts\": [\n\t\t9413,\n\t\t5391\n\t],\n\t\"./njmetro/nj4\": [\n\t\t9002,\n\t\t2259\n\t],\n\t\"./njmetro/nj4.ts\": [\n\t\t9002,\n\t\t2259\n\t],\n\t\"./qdmetro/qd11\": [\n\t\t5554,\n\t\t3969\n\t],\n\t\"./qdmetro/qd11.ts\": [\n\t\t5554,\n\t\t3969\n\t],\n\t\"./qdmetro/qd13\": [\n\t\t6318,\n\t\t1416\n\t],\n\t\"./qdmetro/qd13.ts\": [\n\t\t6318,\n\t\t1416\n\t],\n\t\"./qdmetro/qd2\": [\n\t\t4059,\n\t\t2856\n\t],\n\t\"./qdmetro/qd2.ts\": [\n\t\t4059,\n\t\t2856\n\t],\n\t\"./qdmetro/qd3\": [\n\t\t2250,\n\t\t45\n\t],\n\t\"./qdmetro/qd3.ts\": [\n\t\t2250,\n\t\t45\n\t],\n\t\"./qdmetro/qd8\": [\n\t\t7869,\n\t\t7425\n\t],\n\t\"./qdmetro/qd8.ts\": [\n\t\t7869,\n\t\t7425\n\t],\n\t\"./saopaulometro/sp1\": [\n\t\t7216,\n\t\t4636\n\t],\n\t\"./saopaulometro/sp1.ts\": [\n\t\t7216,\n\t\t4636\n\t],\n\t\"./saopaulometro/sp10\": [\n\t\t2468,\n\t\t9538\n\t],\n\t\"./saopaulometro/sp10.ts\": [\n\t\t2468,\n\t\t9538\n\t],\n\t\"./saopaulometro/sp11\": [\n\t\t8094,\n\t\t4985\n\t],\n\t\"./saopaulometro/sp11.ts\": [\n\t\t8094,\n\t\t4985\n\t],\n\t\"./saopaulometro/sp12\": [\n\t\t7121,\n\t\t2198\n\t],\n\t\"./saopaulometro/sp12.ts\": [\n\t\t7121,\n\t\t2198\n\t],\n\t\"./saopaulometro/sp13\": [\n\t\t731,\n\t\t9963\n\t],\n\t\"./saopaulometro/sp13.ts\": [\n\t\t731,\n\t\t9963\n\t],\n\t\"./saopaulometro/sp15\": [\n\t\t6637,\n\t\t9714\n\t],\n\t\"./saopaulometro/sp15.ts\": [\n\t\t6637,\n\t\t9714\n\t],\n\t\"./saopaulometro/sp2\": [\n\t\t2032,\n\t\t7866\n\t],\n\t\"./saopaulometro/sp2.ts\": [\n\t\t2032,\n\t\t7866\n\t],\n\t\"./saopaulometro/sp3\": [\n\t\t4985,\n\t\t9874\n\t],\n\t\"./saopaulometro/sp3.ts\": [\n\t\t4985,\n\t\t9874\n\t],\n\t\"./saopaulometro/sp4\": [\n\t\t3619,\n\t\t5503\n\t],\n\t\"./saopaulometro/sp4.ts\": [\n\t\t3619,\n\t\t5503\n\t],\n\t\"./saopaulometro/sp5\": [\n\t\t4700,\n\t\t8832\n\t],\n\t\"./saopaulometro/sp5.ts\": [\n\t\t4700,\n\t\t8832\n\t],\n\t\"./saopaulometro/sp7\": [\n\t\t6199,\n\t\t2808\n\t],\n\t\"./saopaulometro/sp7.ts\": [\n\t\t6199,\n\t\t2808\n\t],\n\t\"./saopaulometro/sp8\": [\n\t\t7222,\n\t\t2494\n\t],\n\t\"./saopaulometro/sp8.ts\": [\n\t\t7222,\n\t\t2494\n\t],\n\t\"./saopaulometro/sp9\": [\n\t\t6612,\n\t\t5758\n\t],\n\t\"./saopaulometro/sp9.ts\": [\n\t\t6612,\n\t\t5758\n\t],\n\t\"./shmetro/sh1\": [\n\t\t3056,\n\t\t1456\n\t],\n\t\"./shmetro/sh1.ts\": [\n\t\t3056,\n\t\t1456\n\t],\n\t\"./shmetro/sh10\": [\n\t\t1809,\n\t\t4655\n\t],\n\t\"./shmetro/sh10.ts\": [\n\t\t1809,\n\t\t4655\n\t],\n\t\"./shmetro/sh11\": [\n\t\t9749,\n\t\t854\n\t],\n\t\"./shmetro/sh11.ts\": [\n\t\t9749,\n\t\t854\n\t],\n\t\"./shmetro/sh12\": [\n\t\t3035,\n\t\t5364\n\t],\n\t\"./shmetro/sh12.ts\": [\n\t\t3035,\n\t\t5364\n\t],\n\t\"./shmetro/sh13\": [\n\t\t784,\n\t\t8424\n\t],\n\t\"./shmetro/sh13.ts\": [\n\t\t784,\n\t\t8424\n\t],\n\t\"./shmetro/sh14\": [\n\t\t7883,\n\t\t1756\n\t],\n\t\"./shmetro/sh14.ts\": [\n\t\t7883,\n\t\t1756\n\t],\n\t\"./shmetro/sh15\": [\n\t\t8178,\n\t\t5091\n\t],\n\t\"./shmetro/sh15.ts\": [\n\t\t8178,\n\t\t5091\n\t],\n\t\"./shmetro/sh16\": [\n\t\t4303,\n\t\t3510\n\t],\n\t\"./shmetro/sh16.ts\": [\n\t\t4303,\n\t\t3510\n\t],\n\t\"./shmetro/sh17\": [\n\t\t8987,\n\t\t4615\n\t],\n\t\"./shmetro/sh17.ts\": [\n\t\t8987,\n\t\t4615\n\t],\n\t\"./shmetro/sh18\": [\n\t\t7594,\n\t\t3236\n\t],\n\t\"./shmetro/sh18.ts\": [\n\t\t7594,\n\t\t3236\n\t],\n\t\"./shmetro/sh2\": [\n\t\t2039,\n\t\t2605\n\t],\n\t\"./shmetro/sh2.ts\": [\n\t\t2039,\n\t\t2605\n\t],\n\t\"./shmetro/sh3\": [\n\t\t1280,\n\t\t9912\n\t],\n\t\"./shmetro/sh3.ts\": [\n\t\t1280,\n\t\t9912\n\t],\n\t\"./shmetro/sh4\": [\n\t\t1608,\n\t\t875\n\t],\n\t\"./shmetro/sh4.ts\": [\n\t\t1608,\n\t\t875\n\t],\n\t\"./shmetro/sh5\": [\n\t\t1912,\n\t\t9387\n\t],\n\t\"./shmetro/sh5.ts\": [\n\t\t1912,\n\t\t9387\n\t],\n\t\"./shmetro/sh6\": [\n\t\t269,\n\t\t5402\n\t],\n\t\"./shmetro/sh6.ts\": [\n\t\t269,\n\t\t5402\n\t],\n\t\"./shmetro/sh7\": [\n\t\t231,\n\t\t9708\n\t],\n\t\"./shmetro/sh7.ts\": [\n\t\t231,\n\t\t9708\n\t],\n\t\"./shmetro/sh8\": [\n\t\t3760,\n\t\t5161\n\t],\n\t\"./shmetro/sh8.ts\": [\n\t\t3760,\n\t\t5161\n\t],\n\t\"./shmetro/sh9\": [\n\t\t2179,\n\t\t7794\n\t],\n\t\"./shmetro/sh9.ts\": [\n\t\t2179,\n\t\t7794\n\t],\n\t\"./szmetro/sz1\": [\n\t\t5794,\n\t\t1989\n\t],\n\t\"./szmetro/sz1.ts\": [\n\t\t5794,\n\t\t1989\n\t],\n\t\"./szmetro/sz3\": [\n\t\t9290,\n\t\t3317\n\t],\n\t\"./szmetro/sz3.ts\": [\n\t\t9290,\n\t\t3317\n\t],\n\t\"./szmetro/sz4\": [\n\t\t4750,\n\t\t8222\n\t],\n\t\"./szmetro/sz4.ts\": [\n\t\t4750,\n\t\t8222\n\t],\n\t\"./zzmetro/zz1\": [\n\t\t4586,\n\t\t2881\n\t],\n\t\"./zzmetro/zz1.ts\": [\n\t\t4586,\n\t\t2881\n\t],\n\t\"./zzmetro/zz14\": [\n\t\t5633,\n\t\t9946\n\t],\n\t\"./zzmetro/zz14.ts\": [\n\t\t5633,\n\t\t9946\n\t],\n\t\"./zzmetro/zz2\": [\n\t\t5942,\n\t\t6151\n\t],\n\t\"./zzmetro/zz2.ts\": [\n\t\t5942,\n\t\t6151\n\t],\n\t\"./zzmetro/zz3\": [\n\t\t2873,\n\t\t555\n\t],\n\t\"./zzmetro/zz3.ts\": [\n\t\t2873,\n\t\t555\n\t],\n\t\"./zzmetro/zz4\": [\n\t\t3284,\n\t\t3642\n\t],\n\t\"./zzmetro/zz4.ts\": [\n\t\t3284,\n\t\t3642\n\t],\n\t\"./zzmetro/zz5\": [\n\t\t1093,\n\t\t9855\n\t],\n\t\"./zzmetro/zz5.ts\": [\n\t\t1093,\n\t\t9855\n\t],\n\t\"./zzmetro/zz6\": [\n\t\t3577,\n\t\t8523\n\t],\n\t\"./zzmetro/zz6.ts\": [\n\t\t3577,\n\t\t8523\n\t],\n\t\"./zzmetro/zz9\": [\n\t\t8381,\n\t\t5464\n\t],\n\t\"./zzmetro/zz9.ts\": [\n\t\t8381,\n\t\t5464\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 2770;\nmodule.exports = webpackAsyncContext;"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","SvgWrapper","props","type","style","svgWidth","svgHeight","canvasScale","theme","children","useEffect","document","getElementById","href","process","xmlns","xmlnsXlink","height","viewBox","colorInterpolationFilters","fill","width","Suspense","fallback","strokeWidth","stroke","flexDirection","overflowX","content","margin","flex","border","SvgRouter","location","useLocation","navigate","useNavigate","dispatch","useDispatch","useAppSelector","state","app","canvasToShow","param","svgWidths","svg_height","rmgStyle","pathname","nextStyle","split","slice","values","RmgStyle","includes","setStyle","filteredCanvas","canvasList","filter","canvas","sx","RunInGZMTR","lazy","RailMapGZMTR","DestinationMTR","RailMapMTR","DestinationSHMetro","RunInSHMetro","RailMapSHMetro","IndoorSHMetro","CanvasType","InfoSection","useTranslation","selectedStation","console","log","stn_list","num","name","secondaryName","fields","label","value","placeholder","onChange","updateStationNum","hidden","updateStationName","updateStationSecondaryName","p","as","size","minW","FlagSvgEmoji","countryCode","svgFilename","useState","undefined","src","setSrc","default","catch","err","error","message","alt","h","mr","CityPicker","defaultValueId","i18n","data","cityList","currentItem","find","item","displayValue","languages","lng","displayHandler","isCensorTWFlag","country","LanguageCode","language","isWindowsClient","navigator","platform","flagSvg","countryList","flagEmoji","predicate","input","some","defaultValue","ColourPicker","city","paletteList","cityCode","setPaletteList","usePalette","palette","displayName","fg","MonoColour","bg","colour","ColourModal","isOpen","onClose","defaultTheme","onUpdate","setCityCode","lineCode","setLineCode","bgColour","setBgColour","fgColour","setFgColour","toString","paletteFields","component","line","customFields","variant","CityCode","options","isSubmitEnabled","isFitted","colorScheme","w","defaultIndex","fontSize","marginRight","color","isExternal","MdOpenInNew","onClick","disabled","ColourUtil","hex","parseInt","alpha","this","hexToRgb","join","hex1","hex2","reduce","acc","cur","idx","Math","pow","ThemeButton","mt","_hover","fade","icon","InterchangeCard","interchangeList","onAdd","onDelete","isModalOpen","setIsModalOpen","selectedIndex","setSelectedIndex","interchangeFields","it","i","val","direction","length","spacing","align","noLabel","InterchangeSection","transfer","getOSINameFields","setIndex","osi_names","updateStationOsiName","handleAdd","info","addInterchange","handleDelete","j","removeInterchange","handleUpdate","updateInterchange","infoList","Fragment","alignSelf","leftIcon","RmgButtonGroup","selections","multiSelect","setValue","isAttached","selection","isSelected","isDisabled","prevValue","nextValue","v","handleToggle","MoreSection","services","facility","loop_pivot","serviceSelections","Services","service","mtrFacilityOptions","Facilities","shmetroFacilityOptions","updateStationServices","updateStationFacility","isChecked","checked","updateStationLoopPivot","oneLine","BranchSection","stationList","parents","branch","branchOptions","BranchStyle","getFirstStationOptions","Direction","positionOptions","upper","lower","getFields","updateStationBranchType","updateStationBranchFirstStation","indexOf","flipStationBranchPosition","StationSidePanel","LayoutSection","y_pc","branch_spacing","padding","direction_gz_x","direction_gz_y","canvasConfig","setSvgWidth","Number","setSvgHeight","min","max","setYPercentage","setBranchSpacing","setPaddingPercentage","setDirectionIndicatorX","setDirectionIndicatorY","DesignSection","lineName","line_name","lineNum","line_num","platformNum","platform_num","psdNum","psd_num","namePosMTR","customiseMTRDest","info_panel_type","directionSelections","ShortDirection","panelTypeGZMTROptions","PanelTypeGZMTR","panelTypeSHMetroOptions","PanelTypeShmetro","setLineName","setLineNum","setPlatform","setPsdNum","setPanelType","nextDirection","setDirection","staggerNameSelections","mtrSpecifiedFields","isStagger","staggerStationNames","flipStationNames","isLegacy","toggleLineNameBeforeDestination","terminal","customiseDestinationName","nextTheme","setTheme","LoopSection","branches","helper","loop","loop_info","bank","left_and_right_factor","bottom_factor","setLoop","setLoopBank","floor","setLoopLeftAndRightFactor","setLoopBottomFactor","GZMTRNoteCard","note","fields1","fields2","GZMTRNoteSection","notesGZMTR","updateNote","removeNote","addNote","StyleSidePanel","getYShareMTR","stnId","stnList","stnPred","RemoveConfirmModal","cancelRef","onConfirm","leastDestructiveRef","fontWeight","ref","ml","StationSidePanelFooter","isRemoveModalOpen","setIsRemoveModalOpen","setCurrentStation","stationId","getState","setSidePanelMode","SidePanelMode","setSelectedStation","removeInvalidColineOnRemoveStation","newStnList","JSON","parse","stringify","forEach","parId","childId","right","left","splice","setStationsBulk","removeStation","setGlobalAlert","status","ColineCard","colineInfo","routeOptions","onUpdateRoute","onUpdateColourInfo","from","to","colors","ColineSection","useAppDispatch","selectedBranch","colineInfoList","findAllColinesInBranch","possibleCombinations","getPossibleCombinations","entries","colineId","route","updateColine","colourInfo","updateColineColor","colourIndex","removeColineColor","handleDeleteColour","addColine","AutoNumModal","where","setWhere","setFrom","maxLength","setMaxLength","sort","setSort","isColineBranch","validator","isNaN","debouncedDelay","asc","desc","isSubmitDisabled","autoNumbering","ActionSection","isAutoNumModalOpen","setIsAutoNumModalOpen","wrap","flexShrink","flexBasis","marginTop","reverseStations","BranchSidePanel","SidePanel","sidePanelMode","mode","STATION","header","text","body","footer","STYLE","BRANCH","CLOSE","downloadAs","filename","blob","Blob","downloadBlobAs","url","window","URL","createObjectURL","a","createElement","download","appendChild","click","removeChild","revokeObjectURL","readFileAsText","file","reader","FileReader","onloadend","result","readAsText","cloneSvgCanvas","isTransparent","isShowBorder","scale","key","querySelector","getPropertyValue","match","thisSVGHeight","elem","cloneNode","setAttribute","setProperty","tag","querySelectorAll","l","sheet","cssRules","rule","cssText","txt","s","textContent","prepend","getBase64FontFace","uris","alert","readBlobAsDataURL","readAsDataURL","svgEl","uniqueCharacters","Array","Set","el","innerHTML","replace","fonts","load","fontFaceList","styleSheet","distinctCssRules","font","matchedRule","cssStyle","fontFamily","family","unicodeRange","ruleStyle","matchedStyle","concat","all","cssRule","ruleStyleSrc","isSafari","userAgent","fetch","fontResp","fontDataUri","test","svgW","baseVal","svgH","devicePixelRatio","ctx","getContext","clearRect","elStyle","getComputedStyle","dominantBaseline","textAnchor","reject","img","Image","onload","drawImage","toBlob","onerror","btoa","unescape","encodeURIComponent","outerHTML","DownloadModal","canvasToDownload","setCanvasToDownload","setIsTransparent","setIsShowBorder","setScale","format","setFormat","currentStationId","current_stn_idx","canvasOptions","scaleOptions","formatOptions","png","svg","disabledOptions","handleDownload","option","stationIdListToDownload","zip","JSZip","replaceAll","setTimeout","removeAttribute","base64","generateAsync","zipData","DownloadActions","isDownloadModalOpen","setIsDownloadModalOpen","Button","rightIcon","Date","valueOf","CompanyCode","UploadConfirmModal","uploadedParam","onOpenParam","companies","basic","mtr","gzmtr","shmetro","bjsubway","fmetro","en","kmrailtransit","kvtransit","mlm","njmetro","qdmetro","saopaulometro","pt","szmetro","zzmetro","TemplateModal","handleSelect","company","setIsLoading","isLazy","orientation","maxW","translateText","templateList","b","findIndex","c","templates","Flex","py","px","template","justifyContent","overflow","OpenActions","isUploadModalOpen","setIsUploadModalOpen","isTemplateModalOpen","setIsTemplateModalOpen","setUploadedParam","uploadModalCloseRef","useRef","fileInputRef","handleUpload","event","target","files","paramStr","updatedParam","updateParam","handleOpenParam","rmgStorage","writeFile","AllCanvas","selectCanvas","reRenderApp","openFromNewParam","accept","current","HeaderActions","PageHeader","canvasSelections","pl","pr","Environments","CONTRIBUTORS_LIST","HelpModal","scrollBehavior","mb","my","contributor","open","WindowHeader","isHelpModalOpen","setIsHelpModalOpen","environment","hostname","DEV","UAT","PRD","handleChangeLanguage","changeLanguage","documentElement","lang","title","version","packageJson","popoverHeader","Trans","i18nKey","popoverBody","zoomOut","zoomIn","IconButton","addStation","position","newId","nanoid","newStationInfo","tick_direc","paid_area","nextStationList","verifyNewBranchEnds","every","AddStationModal","preposition","setPreposition","pivot","setPivot","setError","stationIdList","selectableStations","handleSelectWhere","before","after","addStationToExistingBranch","NewBranchModal","setTo","setPosition","fromError","setFromError","toError","setToError","newBranchEndStationOptions","isTwoSidedBranchOut","isYShare0","new","ext","handleSelectFrom","isInvalid","Boolean","handleSelectTo","StationAgGrid","GridTabs","isAddStationModalOpen","setIsAddStationModalOpen","isNewBranchModalOpen","setIsNewBranchModalOpen","display","index","setSelectedBranch","marginLeft","overflowY","_","isIndeterminate","branchIndex","LoadingModal","isLoading","top","alignItems","AppRoot","globalAlert","paramString","pb","zh","ms","getPossibleStnIdsFromMainLine","flat","possibleStnIdsFromMainLine","allEntries","results","entry","subResults","cartesian","getRowSpanForColine","coline","clId","cl","thisIndex","thatIndex","checkColineValidity","colineInMainLine","colineInBranches","getPossibleStnIdsFromBranchLine","terminals","deleteStnId","nextColine","setColineBulk","newColineInfo","interchangeIndex","nextColours","colineIdx","interchangeInfo","int"],"sourceRoot":""}