{"version":3,"file":"static/js/AppRoot.a04f7de8.chunk.js","mappings":"oFAAA,IAAIA,EAAM,CACT,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,IAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,IACA,KAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,kDAAmD,CAClD,MACA,MAED,kDAAmD,CAClD,MACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CACP,IAGD,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,GAClC,GACD,CACAX,EAAoBa,KAAO,WAAa,OAAOC,OAAOD,KAAKd,EAAM,EACjEC,EAAoBW,GAAK,MACzBI,EAAOC,QAAUhB,C,wBC9KjB,IAAID,EAAM,CACT,cAAe,CACd,MACA,MAED,YAAa,CACZ,MACA,MAED,eAAgB,CACf,MACA,MAED,iBAAkB,CACjB,MACA,MAED,eAAgB,CACf,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,iBAAkB,CACjB,MACA,MAED,gBAAiB,CAChB,MACA,MAED,aAAc,CACb,MACA,MAED,iBAAkB,CACjB,MACA,MAED,gBAAiB,CAChB,MACA,MAED,eAAgB,CACf,MACA,MAED,iBAAkB,CACjB,MACA,MAED,kBAAmB,CAClB,MACA,MAED,aAAc,CACb,MACA,KAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,gBAAiB,CAChB,MACA,MAED,gBAAiB,CAChB,MACA,MAED,iBAAkB,CACjB,MACA,MAED,iBAAkB,CACjB,MACA,MAED,cAAe,CACd,MACA,MAED,iBAAkB,CACjB,MACA,MAED,eAAgB,CACf,MACA,IAED,kBAAmB,CAClB,MACA,MAED,mBAAoB,CACnB,MACA,KAED,iBAAkB,CACjB,MACA,MAED,gBAAiB,CAChB,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,KACA,MAED,aAAc,CACb,MACA,KAED,iBAAkB,CACjB,MACA,MAED,gBAAiB,CAChB,MACA,MAED,gBAAiB,CAChB,MACA,MAED,aAAc,CACb,KACA,MAED,cAAe,CACd,MACA,MAED,iBAAkB,CACjB,MACA,MAED,mBAAoB,CACnB,MACA,KAED,eAAgB,CACf,MACA,MAED,YAAa,CACZ,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,gBAAiB,CAChB,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,KACA,MAED,cAAe,CACd,MACA,KAED,iBAAkB,CACjB,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,YAAa,CACZ,KACA,KAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,eAAgB,CACf,MACA,MAED,iBAAkB,CACjB,MACA,MAED,cAAe,CACd,KACA,MAED,oBAAqB,CACpB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,gBAAiB,CAChB,MACA,MAED,gBAAiB,CAChB,MACA,GAED,aAAc,CACb,MACA,MAED,gBAAiB,CAChB,MACA,MAED,gBAAiB,CAChB,MACA,MAED,gBAAiB,CAChB,MACA,MAED,gBAAiB,CAChB,MACA,MAED,iBAAkB,CACjB,MACA,KAED,iBAAkB,CACjB,MACA,MAED,cAAe,CACd,MACA,MAED,gBAAiB,CAChB,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,aAAc,CACb,MACA,MAED,eAAgB,CACf,MACA,MAED,mBAAoB,CACnB,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,aAAc,CACb,MACA,MAED,YAAa,CACZ,KACA,MAED,cAAe,CACd,MACA,MAED,YAAa,CACZ,MACA,MAED,gBAAiB,CAChB,IACA,MAED,iBAAkB,CACjB,MACA,OAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CACP,IAGD,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,EAC5B,GACD,CACAX,EAAoBa,KAAO,WAAa,OAAOC,OAAOD,KAAKd,EAAM,EACjEC,EAAoBW,GAAK,MACzBI,EAAOC,QAAUhB,C,wBC9WjB,IAAID,EAAM,CACT,sBAAuB,CACtB,MACA,MAED,uBAAwB,CACvB,KACA,MAED,oBAAqB,CACpB,KACA,MAED,sBAAuB,CACtB,MACA,MAED,uBAAwB,CACvB,MACA,MAED,uBAAwB,CACvB,KACA,MAED,uBAAwB,CACvB,MACA,MAED,uBAAwB,CACvB,MACA,MAED,uBAAwB,CACvB,MACA,MAED,uBAAwB,CACvB,MACA,MAED,uBAAwB,CACvB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,GACA,MAED,sBAAuB,CACtB,MACA,MAED,wBAAyB,CACxB,OAED,oBAAqB,CACpB,MACA,MAED,qBAAsB,CACrB,MACA,MAED,qBAAsB,CACrB,MACA,MAED,mBAAoB,CACnB,MACA,MAED,kBAAmB,CAClB,MACA,MAED,mBAAoB,CACnB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,KACA,MAED,oBAAqB,CACpB,MACA,MAED,mBAAoB,CACnB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,mBAAoB,CACnB,MACA,MAED,mBAAoB,CACnB,MACA,MAED,mBAAoB,CACnB,MACA,MAED,mBAAoB,CACnB,MACA,MAED,mBAAoB,CACnB,MACA,MAED,mBAAoB,CACnB,MACA,MAED,mBAAoB,CACnB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,oBAAqB,CACpB,MACA,KAED,uBAAwB,CACvB,MACA,MAED,uBAAwB,CACvB,KACA,MAED,uBAAwB,CACvB,MACA,MAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,IACA,MAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,KAED,8BAA+B,CAC9B,MACA,MAED,6BAA8B,CAC7B,MACA,MAED,iCAAkC,CACjC,MACA,MAED,kCAAmC,CAClC,MACA,MAED,6BAA8B,CAC7B,MACA,MAED,mBAAoB,CACnB,KACA,MAED,iBAAkB,CACjB,MACA,MAED,iBAAkB,CACjB,MACA,MAED,iBAAkB,CACjB,MACA,MAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,kBAAmB,CAClB,MACA,KAED,iBAAkB,CACjB,MACA,MAED,iBAAkB,CACjB,MACA,MAED,iBAAkB,CACjB,MACA,KAED,iBAAkB,CACjB,MACA,KAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,MAED,qBAAsB,CACrB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,qBAAsB,CACrB,MACA,MAED,qBAAsB,CACrB,MACA,MAED,qBAAsB,CACrB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,qBAAsB,CACrB,MACA,KAED,qBAAsB,CACrB,MACA,MAED,qBAAsB,CACrB,MACA,KAED,2BAA4B,CAC3B,KACA,MAED,4BAA6B,CAC5B,MACA,MAED,4BAA6B,CAC5B,MACA,MAED,4BAA6B,CAC5B,MACA,MAED,4BAA6B,CAC5B,MACA,KAED,4BAA6B,CAC5B,MACA,MAED,2BAA4B,CAC3B,MACA,KAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,KAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,MAED,qBAAsB,CACrB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,IAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sBAAuB,CACtB,KACA,MAED,sBAAuB,CA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","sources":["../node_modules/@railmapgen/rmg-palette-resources/flags|lazy|/^/.//.*$/|groupOptions: {}|namespace object","../node_modules/@railmapgen/rmg-palette-resources/palettes|lazy|/^/.//.*/.js$/|chunkName: palettes|groupOptions: {}|namespace object","../node_modules/@railmapgen/rmg-templates-resources/templates|lazy|/^/.//.*/.json$/|chunkName: templates|groupOptions: {}|namespace object","svgs/svg-router.tsx","svgs/use-canvas-map.tsx","components/side-panel/station-side-panel/info-section.tsx","components/modal/colour-modal/flag-svg-emoji.tsx","components/modal/colour-modal/city-picker.tsx","components/modal/colour-modal/colour-picker.tsx","components/modal/colour-modal/colour-modal.tsx","theme/colour-util.ts","components/side-panel/theme-button.tsx","components/side-panel/station-side-panel/interchange-card.tsx","components/common/rmg-button-group.tsx","components/side-panel/station-side-panel/interchange-section.tsx","components/side-panel/station-side-panel/more-section.tsx","components/side-panel/station-side-panel/branch-section.tsx","components/side-panel/station-side-panel/station-side-panel.tsx","components/side-panel/style-side-panel/layout-section.tsx","components/side-panel/style-side-panel/design-section.tsx","components/side-panel/style-side-panel/loop-section.tsx","components/side-panel/style-side-panel/gzmtr-note-card.tsx","components/side-panel/style-side-panel/gzmtr-note-section.tsx","components/side-panel/style-side-panel/style-side-panel.tsx","methods.ts","components/modal/remove-confirm-modal.tsx","redux/param/remove-station-action.ts","components/side-panel/station-side-panel/station-side-panel-footer.tsx","components/side-panel/branch-side-panel/coline-card.tsx","components/side-panel/branch-side-panel/coline-section.tsx","components/modal/auto-num-modal.tsx","components/side-panel/branch-side-panel/action-section.tsx","components/side-panel/branch-side-panel/branch-side-panel.tsx","components/side-panel/side-panel.tsx","util/utils.ts","util/export-utils.ts","components/modal/download-modal.tsx","components/page-header/download-actions.tsx","components/modal/upload-confirm-modal.tsx","components/modal/template-modal.tsx","components/page-header/open-actions.tsx","redux/param/open-new-action.ts","components/page-header/header-actions.tsx","components/page-header/page-header.tsx","util/config.ts","components/modal/help-modal.tsx","components/root/window-header.tsx","redux/param/add-station-action.ts","components/modal/add-station-modal.tsx","components/modal/new-branch-modal.tsx","components/ag-grid/grid-tabs.tsx","components/modal/loading-modal.tsx","components/root/global-alerts.tsx","components/app-root.tsx","redux/param/coline-action.ts","svgs|lazy|/^/.//.*//index$/|groupOptions: {}|namespace object"],"sourcesContent":["var map = {\n\t\"./1F1E6-1F1F9.svg\": [\n\t\t89121,\n\t\t9121\n\t],\n\t\"./1F1E6-1F1FF.svg\": [\n\t\t89427,\n\t\t9427\n\t],\n\t\"./1F1E7-1F1F7.svg\": [\n\t\t97304,\n\t\t7304\n\t],\n\t\"./1F1E8-1F1E6.svg\": [\n\t\t80056,\n\t\t56\n\t],\n\t\"./1F1E8-1F1F1.svg\": [\n\t\t43450,\n\t\t3450\n\t],\n\t\"./1F1E8-1F1F3.svg\": [\n\t\t52537,\n\t\t2537\n\t],\n\t\"./1F1E9-1F1EA.svg\": [\n\t\t36311,\n\t\t6311\n\t],\n\t\"./1F1E9-1F1F0.svg\": [\n\t\t21890,\n\t\t1890\n\t],\n\t\"./1F1EA-1F1EC.svg\": [\n\t\t57365,\n\t\t7365\n\t],\n\t\"./1F1EA-1F1F8.svg\": [\n\t\t98721,\n\t\t8721\n\t],\n\t\"./1F1EB-1F1F7.svg\": [\n\t\t48514,\n\t\t8514\n\t],\n\t\"./1F1EC-1F1F7.svg\": [\n\t\t99515,\n\t\t9515\n\t],\n\t\"./1F1ED-1F1F0.svg\": [\n\t\t62248,\n\t\t2248\n\t],\n\t\"./1F1ED-1F1FA.svg\": [\n\t\t268,\n\t\t268\n\t],\n\t\"./1F1EE-1F1F3.svg\": [\n\t\t66236,\n\t\t6236\n\t],\n\t\"./1F1EE-1F1F7.svg\": [\n\t\t22617,\n\t\t2617\n\t],\n\t\"./1F1EE-1F1F9.svg\": [\n\t\t53541,\n\t\t3541\n\t],\n\t\"./1F1EF-1F1F5.svg\": [\n\t\t42741,\n\t\t2741\n\t],\n\t\"./1F1F0-1F1F7.svg\": [\n\t\t22255,\n\t\t2255\n\t],\n\t\"./1F1F2-1F1F4.svg\": [\n\t\t86435,\n\t\t6435\n\t],\n\t\"./1F1F2-1F1FD.svg\": [\n\t\t43086,\n\t\t3086\n\t],\n\t\"./1F1F2-1F1FE.svg\": [\n\t\t76082,\n\t\t6082\n\t],\n\t\"./1F1F3-1F1F4.svg\": [\n\t\t16095,\n\t\t6095\n\t],\n\t\"./1F1F5-1F1EA.svg\": [\n\t\t52955,\n\t\t2955\n\t],\n\t\"./1F1F5-1F1F1.svg\": [\n\t\t54700,\n\t\t4700\n\t],\n\t\"./1F1F5-1F1F9.svg\": [\n\t\t77791,\n\t\t7791\n\t],\n\t\"./1F1F7-1F1F4.svg\": [\n\t\t7224,\n\t\t7224\n\t],\n\t\"./1F1F7-1F1FA.svg\": [\n\t\t6031,\n\t\t6031\n\t],\n\t\"./1F1F8-1F1E6.svg\": [\n\t\t68600,\n\t\t8600\n\t],\n\t\"./1F1F8-1F1EA.svg\": [\n\t\t71550,\n\t\t1550\n\t],\n\t\"./1F1F8-1F1EC.svg\": [\n\t\t91229,\n\t\t1229\n\t],\n\t\"./1F1F9-1F1ED.svg\": [\n\t\t16203,\n\t\t6203\n\t],\n\t\"./1F1F9-1F1F7.svg\": [\n\t\t92237,\n\t\t2237\n\t],\n\t\"./1F1F9-1F1FC.svg\": [\n\t\t64252,\n\t\t4252\n\t],\n\t\"./1F1FA-1F1F3.svg\": [\n\t\t23353,\n\t\t3353\n\t],\n\t\"./1F1FA-1F1F8.svg\": [\n\t\t65439,\n\t\t5439\n\t],\n\t\"./1F1FB-1F1F3.svg\": [\n\t\t90419,\n\t\t3886\n\t],\n\t\"./1F3F4-E0067-E0062-E0065-E006E-E0067-E007F.svg\": [\n\t\t16129,\n\t\t6129\n\t],\n\t\"./1F3F4-E0067-E0062-E0073-E0063-E0074-E007F.svg\": [\n\t\t60138,\n\t\t138\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 74018;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./athens.js\": [\n\t\t46128,\n\t\t6869\n\t],\n\t\"./baku.js\": [\n\t\t92481,\n\t\t6810\n\t],\n\t\"./bangkok.js\": [\n\t\t36870,\n\t\t5792\n\t],\n\t\"./barcelona.js\": [\n\t\t36340,\n\t\t2358\n\t],\n\t\"./beijing.js\": [\n\t\t32145,\n\t\t436\n\t],\n\t\"./berlin.js\": [\n\t\t37976,\n\t\t5520\n\t],\n\t\"./boston.js\": [\n\t\t68835,\n\t\t1321\n\t],\n\t\"./bucharest.js\": [\n\t\t35249,\n\t\t5189\n\t],\n\t\"./budapest.js\": [\n\t\t68895,\n\t\t6739\n\t],\n\t\"./cairo.js\": [\n\t\t36509,\n\t\t7599\n\t],\n\t\"./changchun.js\": [\n\t\t97459,\n\t\t7081\n\t],\n\t\"./changsha.js\": [\n\t\t40574,\n\t\t4874\n\t],\n\t\"./chengdu.js\": [\n\t\t16312,\n\t\t9186\n\t],\n\t\"./chongqing.js\": [\n\t\t40300,\n\t\t8719\n\t],\n\t\"./copenhagen.js\": [\n\t\t47070,\n\t\t7206\n\t],\n\t\"./daegu.js\": [\n\t\t96995,\n\t\t134\n\t],\n\t\"./dalian.js\": [\n\t\t65169,\n\t\t9770\n\t],\n\t\"./delhi.js\": [\n\t\t53707,\n\t\t8189\n\t],\n\t\"./dongguan.js\": [\n\t\t63280,\n\t\t9898\n\t],\n\t\"./dortmund.js\": [\n\t\t86079,\n\t\t4447\n\t],\n\t\"./edinburgh.js\": [\n\t\t70285,\n\t\t1847\n\t],\n\t\"./eskisehir.js\": [\n\t\t51686,\n\t\t6951\n\t],\n\t\"./foshan.js\": [\n\t\t73204,\n\t\t1392\n\t],\n\t\"./frankfurt.js\": [\n\t\t12040,\n\t\t5449\n\t],\n\t\"./glasgow.js\": [\n\t\t34476,\n\t\t17\n\t],\n\t\"./gothenburg.js\": [\n\t\t66801,\n\t\t8237\n\t],\n\t\"./guadalajara.js\": [\n\t\t39399,\n\t\t886\n\t],\n\t\"./guangzhou.js\": [\n\t\t65841,\n\t\t4788\n\t],\n\t\"./hangzhou.js\": [\n\t\t33427,\n\t\t3106\n\t],\n\t\"./hanoi.js\": [\n\t\t30507,\n\t\t4073\n\t],\n\t\"./harbin.js\": [\n\t\t4826,\n\t\t5303\n\t],\n\t\"./hefei.js\": [\n\t\t82317,\n\t\t310\n\t],\n\t\"./hochiminh.js\": [\n\t\t46770,\n\t\t5081\n\t],\n\t\"./hongkong.js\": [\n\t\t54243,\n\t\t1951\n\t],\n\t\"./istanbul.js\": [\n\t\t73107,\n\t\t8183\n\t],\n\t\"./jinan.js\": [\n\t\t5719,\n\t\t8140\n\t],\n\t\"./kansai.js\": [\n\t\t70382,\n\t\t3417\n\t],\n\t\"./kaohsiung.js\": [\n\t\t33037,\n\t\t3875\n\t],\n\t\"./klangvalley.js\": [\n\t\t20137,\n\t\t425\n\t],\n\t\"./kunming.js\": [\n\t\t28852,\n\t\t7826\n\t],\n\t\"./lima.js\": [\n\t\t39118,\n\t\t2028\n\t],\n\t\"./lisbon.js\": [\n\t\t88814,\n\t\t9890\n\t],\n\t\"./london.js\": [\n\t\t38087,\n\t\t5944\n\t],\n\t\"./macao.js\": [\n\t\t18015,\n\t\t4737\n\t],\n\t\"./madrid.js\": [\n\t\t68020,\n\t\t3579\n\t],\n\t\"./milan.js\": [\n\t\t94410,\n\t\t8975\n\t],\n\t\"./montreal.js\": [\n\t\t53678,\n\t\t1614\n\t],\n\t\"./munich.js\": [\n\t\t87368,\n\t\t5066\n\t],\n\t\"./nanjing.js\": [\n\t\t1664,\n\t\t2168\n\t],\n\t\"./naples.js\": [\n\t\t73738,\n\t\t743\n\t],\n\t\"./newtaipei.js\": [\n\t\t99114,\n\t\t8291\n\t],\n\t\"./ningbo.js\": [\n\t\t28820,\n\t\t8413\n\t],\n\t\"./osaka.js\": [\n\t\t11064,\n\t\t6195\n\t],\n\t\"./oslo.js\": [\n\t\t8057,\n\t\t441\n\t],\n\t\"./other.js\": [\n\t\t77642,\n\t\t6546\n\t],\n\t\"./ottawa.js\": [\n\t\t40254,\n\t\t5288\n\t],\n\t\"./paris.js\": [\n\t\t22720,\n\t\t3658\n\t],\n\t\"./qingdao.js\": [\n\t\t57994,\n\t\t2194\n\t],\n\t\"./rheinruhr.js\": [\n\t\t86870,\n\t\t1342\n\t],\n\t\"./riyadh.js\": [\n\t\t81000,\n\t\t7153\n\t],\n\t\"./sanfrancisco.js\": [\n\t\t64747,\n\t\t5885\n\t],\n\t\"./sanktpeterburg.js\": [\n\t\t21832,\n\t\t6977\n\t],\n\t\"./santiago.js\": [\n\t\t12568,\n\t\t7719\n\t],\n\t\"./saopaulo.js\": [\n\t\t56956,\n\t\t9\n\t],\n\t\"./seoul.js\": [\n\t\t23266,\n\t\t9450\n\t],\n\t\"./shanghai.js\": [\n\t\t89656,\n\t\t1608\n\t],\n\t\"./shaoxing.js\": [\n\t\t84891,\n\t\t2871\n\t],\n\t\"./shenyang.js\": [\n\t\t22266,\n\t\t2832\n\t],\n\t\"./shenzhen.js\": [\n\t\t44691,\n\t\t1902\n\t],\n\t\"./singapore.js\": [\n\t\t32459,\n\t\t530\n\t],\n\t\"./stockholm.js\": [\n\t\t14606,\n\t\t7101\n\t],\n\t\"./suzhou.js\": [\n\t\t99819,\n\t\t4111\n\t],\n\t\"./taichung.js\": [\n\t\t65230,\n\t\t5418\n\t],\n\t\"./taipei.js\": [\n\t\t89489,\n\t\t2338\n\t],\n\t\"./tehran.js\": [\n\t\t52573,\n\t\t4760\n\t],\n\t\"./tianjin.js\": [\n\t\t47942,\n\t\t8759\n\t],\n\t\"./tokyo.js\": [\n\t\t23762,\n\t\t1568\n\t],\n\t\"./toronto.js\": [\n\t\t18148,\n\t\t5562\n\t],\n\t\"./tyneandwear.js\": [\n\t\t9314,\n\t\t5436\n\t],\n\t\"./vienna.js\": [\n\t\t55252,\n\t\t4688\n\t],\n\t\"./warsaw.js\": [\n\t\t9727,\n\t\t5028\n\t],\n\t\"./wuhan.js\": [\n\t\t93742,\n\t\t9989\n\t],\n\t\"./wuxi.js\": [\n\t\t4099,\n\t\t1134\n\t],\n\t\"./xiamen.js\": [\n\t\t54610,\n\t\t9327\n\t],\n\t\"./xian.js\": [\n\t\t72591,\n\t\t8951\n\t],\n\t\"./yokohama.js\": [\n\t\t695,\n\t\t5776\n\t],\n\t\"./zhengzhou.js\": [\n\t\t27357,\n\t\t8914\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 37827;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./basic/coline.json\": [\n\t\t32401,\n\t\t8014\n\t],\n\t\"./basic/default.json\": [\n\t\t8453,\n\t\t8241\n\t],\n\t\"./basic/loop.json\": [\n\t\t8909,\n\t\t9410\n\t],\n\t\"./bjsubway/bj1.json\": [\n\t\t48741,\n\t\t6729\n\t],\n\t\"./bjsubway/bj10.json\": [\n\t\t48461,\n\t\t6230\n\t],\n\t\"./bjsubway/bj11.json\": [\n\t\t3279,\n\t\t7646\n\t],\n\t\"./bjsubway/bj13.json\": [\n\t\t67443,\n\t\t1188\n\t],\n\t\"./bjsubway/bj14.json\": [\n\t\t92906,\n\t\t9523\n\t],\n\t\"./bjsubway/bj16.json\": [\n\t\t47062,\n\t\t6698\n\t],\n\t\"./bjsubway/bj17.json\": [\n\t\t58241,\n\t\t8760\n\t],\n\t\"./bjsubway/bj19.json\": [\n\t\t87819,\n\t\t2773\n\t],\n\t\"./bjsubway/bj2.json\": [\n\t\t75176,\n\t\t6552\n\t],\n\t\"./bjsubway/bj4.json\": [\n\t\t56450,\n\t\t7680\n\t],\n\t\"./bjsubway/bj5.json\": [\n\t\t81834,\n\t\t5653\n\t],\n\t\"./bjsubway/bj6.json\": [\n\t\t12022,\n\t\t9259\n\t],\n\t\"./bjsubway/bj7.json\": [\n\t\t26061,\n\t\t5482\n\t],\n\t\"./bjsubway/bj8.json\": [\n\t\t69846,\n\t\t9797\n\t],\n\t\"./bjsubway/bj9.json\": [\n\t\t39422,\n\t\t4269\n\t],\n\t\"./bjsubway/dae.json\": [\n\t\t34852,\n\t\t3981\n\t],\n\t\"./bjsubway/s1l.json\": [\n\t\t42830,\n\t\t2381\n\t],\n\t\"./bjsubway/t1l.json\": [\n\t\t41057,\n\t\t7200\n\t],\n\t\"./bjsubway/xjl.json\": [\n\t\t14,\n\t\t1095\n\t],\n\t\"./bjsubway/yzl.json\": [\n\t\t56315,\n\t\t2244\n\t],\n\t\"./company-config.json\": [\n\t\t76605\n\t],\n\t\"./fmetro/fs2.json\": [\n\t\t61139,\n\t\t7149\n\t],\n\t\"./fmetro/tgm1.json\": [\n\t\t81558,\n\t\t7160\n\t],\n\t\"./fmetro/tnh1.json\": [\n\t\t17249,\n\t\t6452\n\t],\n\t\"./gzmtr/apm.json\": [\n\t\t45098,\n\t\t6354\n\t],\n\t\"./gzmtr/gf.json\": [\n\t\t30571,\n\t\t2200\n\t],\n\t\"./gzmtr/gz1.json\": [\n\t\t28161,\n\t\t3082\n\t],\n\t\"./gzmtr/gz13.json\": [\n\t\t14745,\n\t\t9950\n\t],\n\t\"./gzmtr/gz14.json\": [\n\t\t9447,\n\t\t7877\n\t],\n\t\"./gzmtr/gz18.json\": [\n\t\t79361,\n\t\t6583\n\t],\n\t\"./gzmtr/gz2.json\": [\n\t\t87119,\n\t\t7724\n\t],\n\t\"./gzmtr/gz21.json\": [\n\t\t24695,\n\t\t4015\n\t],\n\t\"./gzmtr/gz22.json\": [\n\t\t92671,\n\t\t9826\n\t],\n\t\"./gzmtr/gz3.json\": [\n\t\t20622,\n\t\t3084\n\t],\n\t\"./gzmtr/gz4.json\": [\n\t\t25440,\n\t\t3109\n\t],\n\t\"./gzmtr/gz5.json\": [\n\t\t93880,\n\t\t2846\n\t],\n\t\"./gzmtr/gz6.json\": [\n\t\t27426,\n\t\t9925\n\t],\n\t\"./gzmtr/gz7.json\": [\n\t\t73290,\n\t\t8924\n\t],\n\t\"./gzmtr/gz8.json\": [\n\t\t69045,\n\t\t7332\n\t],\n\t\"./gzmtr/gz9.json\": [\n\t\t78481,\n\t\t2100\n\t],\n\t\"./gzmtr/thp1.json\": [\n\t\t65227,\n\t\t9416\n\t],\n\t\"./gzmtr/thz1.json\": [\n\t\t82887,\n\t\t199\n\t],\n\t\"./hrbmetro/hrb1.json\": [\n\t\t13002,\n\t\t4557\n\t],\n\t\"./hrbmetro/hrb2.json\": [\n\t\t6635,\n\t\t8512\n\t],\n\t\"./hrbmetro/hrb3.json\": [\n\t\t20555,\n\t\t2658\n\t],\n\t\"./kmrailtransit/km1.json\": [\n\t\t43285,\n\t\t9655\n\t],\n\t\"./kmrailtransit/km2.json\": [\n\t\t84760,\n\t\t4250\n\t],\n\t\"./kmrailtransit/km3.json\": [\n\t\t327,\n\t\t6555\n\t],\n\t\"./kmrailtransit/km4.json\": [\n\t\t41302,\n\t\t9675\n\t],\n\t\"./kmrailtransit/km5.json\": [\n\t\t21672,\n\t\t2663\n\t],\n\t\"./kmrailtransit/km6.json\": [\n\t\t35903,\n\t\t113\n\t],\n\t\"./kvtransit/klMonorail.json\": [\n\t\t57749,\n\t\t6080\n\t],\n\t\"./kvtransit/lrtAmpang.json\": [\n\t\t81534,\n\t\t8766\n\t],\n\t\"./kvtransit/lrtKelanaJaya.json\": [\n\t\t94219,\n\t\t8724\n\t],\n\t\"./kvtransit/lrtSriPataling.json\": [\n\t\t38174,\n\t\t6862\n\t],\n\t\"./kvtransit/mrtKajang.json\": [\n\t\t49512,\n\t\t4694\n\t],\n\t\"./mlm/taipa.json\": [\n\t\t4435,\n\t\t5945\n\t],\n\t\"./mtr/ael.json\": [\n\t\t16215,\n\t\t5074\n\t],\n\t\"./mtr/drl.json\": [\n\t\t86083,\n\t\t5958\n\t],\n\t\"./mtr/eal.json\": [\n\t\t19800,\n\t\t4754\n\t],\n\t\"./mtr/isl.json\": [\n\t\t7314,\n\t\t6533\n\t],\n\t\"./mtr/ktl.json\": [\n\t\t1400,\n\t\t2490\n\t],\n\t\"./mtr/sile.json\": [\n\t\t37438,\n\t\t169\n\t],\n\t\"./mtr/tcl.json\": [\n\t\t74512,\n\t\t5910\n\t],\n\t\"./mtr/tkl.json\": [\n\t\t91257,\n\t\t4991\n\t],\n\t\"./mtr/tml.json\": [\n\t\t45339,\n\t\t403\n\t],\n\t\"./mtr/twl.json\": [\n\t\t15030,\n\t\t564\n\t],\n\t\"./nbrailtransit/nb1.json\": [\n\t\t49444,\n\t\t1180\n\t],\n\t\"./nbrailtransit/nb2.json\": [\n\t\t80011,\n\t\t7792\n\t],\n\t\"./nbrailtransit/nb3.json\": [\n\t\t1295,\n\t\t1899\n\t],\n\t\"./nbrailtransit/nb4.json\": [\n\t\t57155,\n\t\t3497\n\t],\n\t\"./nbrailtransit/nb5.json\": [\n\t\t71198,\n\t\t6899\n\t],\n\t\"./njmetro/nj1.json\": [\n\t\t72868,\n\t\t4092\n\t],\n\t\"./njmetro/nj10.json\": [\n\t\t28421,\n\t\t1471\n\t],\n\t\"./njmetro/nj2.json\": [\n\t\t74583,\n\t\t4138\n\t],\n\t\"./njmetro/nj3.json\": [\n\t\t33347,\n\t\t6293\n\t],\n\t\"./njmetro/nj4.json\": [\n\t\t57811,\n\t\t4402\n\t],\n\t\"./qdmetro/qd11.json\": [\n\t\t80186,\n\t\t5680\n\t],\n\t\"./qdmetro/qd13.json\": [\n\t\t99736,\n\t\t5325\n\t],\n\t\"./qdmetro/qd2.json\": [\n\t\t35582,\n\t\t852\n\t],\n\t\"./qdmetro/qd3.json\": [\n\t\t23457,\n\t\t6288\n\t],\n\t\"./qdmetro/qd8.json\": [\n\t\t67703,\n\t\t758\n\t],\n\t\"./saopaulometro/sp1.json\": [\n\t\t2702,\n\t\t9619\n\t],\n\t\"./saopaulometro/sp10.json\": [\n\t\t81443,\n\t\t7855\n\t],\n\t\"./saopaulometro/sp11.json\": [\n\t\t48362,\n\t\t2750\n\t],\n\t\"./saopaulometro/sp12.json\": [\n\t\t57393,\n\t\t4387\n\t],\n\t\"./saopaulometro/sp13.json\": [\n\t\t12794,\n\t\t153\n\t],\n\t\"./saopaulometro/sp15.json\": [\n\t\t56267,\n\t\t4996\n\t],\n\t\"./saopaulometro/sp2.json\": [\n\t\t67182,\n\t\t911\n\t],\n\t\"./saopaulometro/sp3.json\": [\n\t\t91102,\n\t\t6569\n\t],\n\t\"./saopaulometro/sp4.json\": [\n\t\t42489,\n\t\t6890\n\t],\n\t\"./saopaulometro/sp5.json\": [\n\t\t62103,\n\t\t3692\n\t],\n\t\"./saopaulometro/sp7.json\": [\n\t\t99021,\n\t\t856\n\t],\n\t\"./saopaulometro/sp8.json\": [\n\t\t21280,\n\t\t2791\n\t],\n\t\"./saopaulometro/sp9.json\": [\n\t\t74337,\n\t\t5941\n\t],\n\t\"./shmetro/sh1.json\": [\n\t\t55562,\n\t\t4254\n\t],\n\t\"./shmetro/sh10.json\": [\n\t\t26438,\n\t\t4605\n\t],\n\t\"./shmetro/sh11.json\": [\n\t\t96485,\n\t\t74\n\t],\n\t\"./shmetro/sh12.json\": [\n\t\t67048,\n\t\t2632\n\t],\n\t\"./shmetro/sh13.json\": [\n\t\t49155,\n\t\t3456\n\t],\n\t\"./shmetro/sh14.json\": [\n\t\t42243,\n\t\t5294\n\t],\n\t\"./shmetro/sh15.json\": [\n\t\t86484,\n\t\t7211\n\t],\n\t\"./shmetro/sh16.json\": [\n\t\t71465,\n\t\t6745\n\t],\n\t\"./shmetro/sh17.json\": [\n\t\t7079,\n\t\t7769\n\t],\n\t\"./shmetro/sh18.json\": [\n\t\t94120,\n\t\t3263\n\t],\n\t\"./shmetro/sh2.json\": [\n\t\t4580,\n\t\t1475\n\t],\n\t\"./shmetro/sh3&4.json\": [\n\t\t57225,\n\t\t8781\n\t],\n\t\"./shmetro/sh3.json\": [\n\t\t17439,\n\t\t7321\n\t],\n\t\"./shmetro/sh4.json\": [\n\t\t21088,\n\t\t5993\n\t],\n\t\"./shmetro/sh5.json\": [\n\t\t47346,\n\t\t7910\n\t],\n\t\"./shmetro/sh6.json\": [\n\t\t48358,\n\t\t6632\n\t],\n\t\"./shmetro/sh7.json\": [\n\t\t13095,\n\t\t6153\n\t],\n\t\"./shmetro/sh8.json\": [\n\t\t64409,\n\t\t5925\n\t],\n\t\"./shmetro/sh9.json\": [\n\t\t57345,\n\t\t6568\n\t],\n\t\"./szmetro/sz1.json\": [\n\t\t47109,\n\t\t9477\n\t],\n\t\"./szmetro/sz2.json\": [\n\t\t96531,\n\t\t8476\n\t],\n\t\"./szmetro/sz3.json\": [\n\t\t51862,\n\t\t2023\n\t],\n\t\"./szmetro/sz4.json\": [\n\t\t47789,\n\t\t8330\n\t],\n\t\"./szmetro/sz8.json\": [\n\t\t95508,\n\t\t7522\n\t],\n\t\"./template-configs.json\": [\n\t\t72722\n\t],\n\t\"./torontosubway/ttc1.json\": [\n\t\t12966,\n\t\t5515\n\t],\n\t\"./torontosubway/ttc2.json\": [\n\t\t33298,\n\t\t5797\n\t],\n\t\"./torontosubway/ttc3.json\": [\n\t\t78973,\n\t\t1325\n\t],\n\t\"./torontosubway/ttc4.json\": [\n\t\t76730,\n\t\t388\n\t],\n\t\"./zzmetro/zz1.json\": [\n\t\t44557,\n\t\t7985\n\t],\n\t\"./zzmetro/zz14.json\": [\n\t\t52049,\n\t\t1074\n\t],\n\t\"./zzmetro/zz2.json\": [\n\t\t36226,\n\t\t8418\n\t],\n\t\"./zzmetro/zz3.json\": [\n\t\t45090,\n\t\t3437\n\t],\n\t\"./zzmetro/zz4.json\": [\n\t\t92332,\n\t\t1281\n\t],\n\t\"./zzmetro/zz5.json\": [\n\t\t53790,\n\t\t6010\n\t],\n\t\"./zzmetro/zz6.json\": [\n\t\t55444,\n\t\t3574\n\t],\n\t\"./zzmetro/zz9.json\": [\n\t\t81393,\n\t\t5458\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 91427;\nmodule.exports = webpackAsyncContext;","import React, { useEffect } from 'react';\nimport { CanvasType, RmgStyle } from '../constants/constants';\nimport { useRootSelector } from '../redux';\nimport { useDispatch } from 'react-redux';\nimport { setStyle } from '../redux/param/action';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Flex } from '@chakra-ui/react';\nimport ErrorBoundary from '../error-boundary';\nimport FallbackLoader from '../components/fallback-loader';\nimport useCanvasMap from './use-canvas-map';\n\nconst style = {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    '&::before, &::after': {\n        content: '\"\"',\n        margin: 'auto',\n    },\n    '& > svg': {\n        flex: '0 0 auto',\n        border: '1px solid black',\n    },\n};\n\nexport default function SvgRouter() {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const { canvasToShow, canvasScale } = useRootSelector(state => state.app);\n    const { svg_height: svgHeight, style: rmgStyle } = useRootSelector(state => state.param);\n\n    const canvasMap = useCanvasMap(rmgStyle);\n\n    useEffect(() => {\n        const pathname = location.pathname;\n        console.log(`SvgRouter:: requestedPath=${pathname}`);\n        if (pathname !== '/' + rmgStyle) {\n            const nextStyle = pathname.split('/').slice(-1)[0] as RmgStyle;\n            if (Object.values(RmgStyle).includes(nextStyle)) {\n                // set style in param\n                console.log(`SvgRouter:: updating param style to ${nextStyle}`);\n                dispatch(setStyle(nextStyle));\n            } else {\n                // push route to match param's style\n                console.log(`SvgRouter:: updating path to /${rmgStyle}`);\n                navigate(rmgStyle);\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        (document.getElementById('css_share') as HTMLLinkElement).href =\n            process.env.PUBLIC_URL + `/styles/share_${rmgStyle}.css`;\n    }, [rmgStyle]);\n\n    const filteredCanvas = (Object.keys(canvasMap) as CanvasType[]).filter(canvas =>\n        canvasToShow === 'all' ? true : canvasToShow === canvas\n    );\n\n    return (\n        <Flex sx={style}>\n            {Object.keys(canvasMap).length === 0 ? (\n                <FallbackLoader />\n            ) : (\n                filteredCanvas.map(canvas => (\n                    <ErrorBoundary\n                        key={canvas + rmgStyle}\n                        style={{ minWidth: 750, height: svgHeight * canvasScale, overflowY: 'auto' }}\n                    >\n                        {canvasMap[canvas]}\n                    </ErrorBoundary>\n                ))\n            )}\n        </Flex>\n    );\n}\n","import { ReactNode, useEffect, useState } from 'react';\nimport { CanvasType, RmgStyle } from '../constants/constants';\n\nexport default function useCanvasMap(style: RmgStyle) {\n    const [canvasMap, setCanvasMap] = useState<Partial<Record<CanvasType, ReactNode>>>({});\n\n    useEffect(() => {\n        import(`./${style}/index`)\n            .then(module => {\n                setCanvasMap(module.default);\n            })\n            .catch(e => {\n                console.error(`Failed to load canvas for style ${style}`, e);\n                setCanvasMap({});\n            });\n\n        // reset canvas map while loading module for next style\n        return () => {\n            setCanvasMap({});\n        };\n    }, [style]);\n\n    return canvasMap;\n}\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { updateStationName, updateStationNum, updateStationSecondaryName } from '../../../redux/param/action';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function InfoSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedStation = useRootSelector(state => state.app.selectedStation);\n    console.log('InfoSection:: Rendering for', selectedStation);\n    const style = useRootSelector(state => state.param.style);\n    const { num, name, secondaryName } = useRootSelector(state => state.param.stn_list[selectedStation]);\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'input',\n            label: t('StationSidePanel.info.num'),\n            value: num,\n            placeholder: '01',\n            onChange: (value: string) => dispatch(updateStationNum(selectedStation, value)),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'input',\n            label: t('Chinese name'),\n            value: name[0],\n            onChange: (value: string) => dispatch(updateStationName(selectedStation, [value, name[1]])),\n        },\n        {\n            type: 'input',\n            label: t('English name'),\n            value: name[1],\n            onChange: (value: string) => dispatch(updateStationName(selectedStation, [name[0], value])),\n        },\n        {\n            type: 'input',\n            label: t('StationSidePanel.info.zhSecondary'),\n            value: secondaryName ? secondaryName[0] : '',\n            placeholder: '1号航站楼',\n            onChange: (value: string) =>\n                dispatch(updateStationSecondaryName(selectedStation, [value, secondaryName ? secondaryName[1] : ''])),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'input',\n            label: t('StationSidePanel.info.enSecondary'),\n            value: secondaryName ? secondaryName[1] : '',\n            placeholder: 'Terminal 1',\n            onChange: (value: string) =>\n                dispatch(updateStationSecondaryName(selectedStation, [secondaryName ? secondaryName[0] : '', value])),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StationSidePanel.info.title')}\n            </Heading>\n\n            <RmgFields fields={fields} minW={130} />\n        </Box>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Image } from '@chakra-ui/react';\n\ninterface FlagSvgEmojiProps {\n    countryCode: string;\n    svgFilename?: string;\n}\n\nexport default function FlagSvgEmoji(props: FlagSvgEmojiProps) {\n    const { countryCode, svgFilename } = props;\n\n    const [src, setSrc] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        if (svgFilename) {\n            import('@railmapgen/rmg-palette-resources/flags/' + svgFilename)\n                .then(module => module.default)\n                .then(setSrc)\n                .catch(err => console.error(`Failed to find SVG file ${svgFilename} as ${err?.message}`));\n        }\n    }, [svgFilename]);\n\n    return src ? <Image src={src} alt={`Flag of ${countryCode}`} h={17} mr={1} /> : <></>;\n}\n","import React from 'react';\nimport { RmgAutoComplete } from '@railmapgen/rmg-components';\nimport { CityCode, CityEntry, cityList, countryList } from '@railmapgen/rmg-palette-resources';\nimport { LanguageCode } from '../../../constants/constants';\nimport { useTranslation } from 'react-i18next';\nimport FlagSvgEmoji from './flag-svg-emoji';\n\ninterface CityPickerProps {\n    defaultValueId?: CityCode;\n    onChange?: (val: CityCode) => void;\n}\n\nexport default function CityPicker(props: CityPickerProps) {\n    const { defaultValueId, onChange } = props;\n\n    const { i18n } = useTranslation();\n\n    const currentItem = defaultValueId ? cityList.find(item => item.id === defaultValueId) : undefined;\n\n    const displayValue = (item: CityEntry): string => {\n        return i18n.languages.map(lng => item.name[lng as LanguageCode]).find(name => name !== undefined)!!;\n    };\n\n    const displayHandler = (item: CityEntry) => {\n        const isCensorTWFlag =\n            item.country === 'TW' &&\n            [LanguageCode.ChineseSimp, LanguageCode.ChineseCN].includes(i18n.languages[0] as LanguageCode);\n        const isWindowsClient = ['Win32', 'Win64'].includes(navigator.platform);\n        // const isWindowsClient = true; // uncomment this line for Windows testing\n\n        const name = i18n.languages.map(lng => item.name[lng as LanguageCode]).find(name => name !== undefined);\n        const flagSvg = countryList.find(country => country.id === item.country)?.flagSvg;\n        const flagEmoji = countryList.find(country => country.id === item.country)?.flagEmoji;\n\n        return (\n            <>\n                {isCensorTWFlag ? (\n                    <span>🏴&nbsp;</span>\n                ) : isWindowsClient ? (\n                    <FlagSvgEmoji countryCode={item.country} svgFilename={flagSvg} />\n                ) : (\n                    <span>{flagEmoji}&nbsp;</span>\n                )}\n                {name}\n            </>\n        );\n    };\n\n    const predicate = (item: CityEntry, input: string): boolean => {\n        return Object.values(item.name).some(name => name.includes(input));\n    };\n\n    const data = cityList.slice().sort((a, b) => {\n        if (a.id === CityCode.Other) {\n            return 1;\n        } else if (b.id === CityCode.Other) {\n            return -1;\n        } else {\n            return displayValue(a).localeCompare(displayValue(b), i18n.languages[0]);\n        }\n    });\n\n    return (\n        <RmgAutoComplete\n            data={data}\n            displayValue={displayValue}\n            displayHandler={displayHandler}\n            predicate={predicate}\n            defaultValue={currentItem}\n            onChange={item => onChange?.(item.id)}\n        />\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { ColourHex, LanguageCode, MonoColour, PaletteEntry } from '../../../constants/constants';\nimport { RmgAutoComplete } from '@railmapgen/rmg-components';\nimport { CityCode } from '@railmapgen/rmg-palette-resources';\nimport { useTranslation } from 'react-i18next';\nimport { RmgLineBadge } from '@railmapgen/rmg-components';\n\nconst usePalette = (cityCode?: CityCode) => {\n    const [paletteList, setPaletteList] = useState<PaletteEntry[]>([]);\n\n    useEffect(() => {\n        import(/* webpackChunkName: \"palettes\" */ `@railmapgen/rmg-palette-resources/palettes/${cityCode}.js`)\n            .then(module => setPaletteList(module.default))\n            .catch(() => setPaletteList([]));\n    }, [cityCode]);\n\n    return paletteList;\n};\n\ninterface ColourPickerProps {\n    city?: CityCode;\n    defaultValueId?: string;\n    onChange?: (lineCode: string, bg: ColourHex, fg: MonoColour) => void;\n}\n\nexport default function ColourPicker(props: ColourPickerProps) {\n    const { city, defaultValueId, onChange } = props;\n\n    const { i18n } = useTranslation();\n\n    const paletteList = usePalette(city);\n\n    const currentItem = defaultValueId ? paletteList.find(palette => palette.id === defaultValueId) : undefined;\n\n    const displayValue = (item: PaletteEntry): string => {\n        return i18n.languages.map(lng => item.name[lng as LanguageCode]).find(name => name !== undefined)!!;\n    };\n\n    const displayHandler = (item: PaletteEntry) => {\n        const displayName = displayValue(item);\n\n        return <RmgLineBadge name={displayName} fg={item.fg || MonoColour.white} bg={item.colour} />;\n    };\n\n    const predicate = (item: PaletteEntry, input: string): boolean => {\n        return Object.values(item.name).some(name => name.includes(input));\n    };\n\n    return (\n        <RmgAutoComplete\n            data={paletteList}\n            displayValue={displayValue}\n            displayHandler={displayHandler}\n            predicate={predicate}\n            defaultValue={currentItem}\n            onChange={item => onChange?.(item.id, item.colour, item.fg || MonoColour.white)}\n        />\n    );\n}\n","import {\n    Button,\n    Icon,\n    Link,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    Tab,\n    TabList,\n    TabPanel,\n    TabPanels,\n    Tabs,\n    Text,\n    VStack,\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { ColourHex, MonoColour, Theme } from '../../../constants/constants';\nimport CityPicker from './city-picker';\nimport ColourPicker from './colour-picker';\nimport { CityCode } from '@railmapgen/rmg-palette-resources';\nimport { useTranslation } from 'react-i18next';\nimport { RmgFields, RmgFieldsField, RmgLineBadge } from '@railmapgen/rmg-components';\nimport { MdOpenInNew } from 'react-icons/md';\n\ninterface ColourModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    defaultTheme?: Theme;\n    onUpdate?: (theme: Theme) => void;\n}\n\nexport default function ColourModal(props: ColourModalProps) {\n    const { isOpen, onClose, defaultTheme, onUpdate } = props;\n\n    const { t } = useTranslation();\n\n    const [cityCode, setCityCode] = useState(defaultTheme?.[0]);\n    const [lineCode, setLineCode] = useState(defaultTheme?.[1]);\n    const [bgColour, setBgColour] = useState(defaultTheme?.[2] || '#AAAAAA');\n    const [fgColour, setFgColour] = useState(defaultTheme?.[3] || MonoColour.white);\n\n    useEffect(() => {\n        if (defaultTheme) {\n            setCityCode(defaultTheme[0]);\n            setLineCode(defaultTheme[1]);\n            setBgColour(defaultTheme[2]);\n            setFgColour(defaultTheme[3]);\n        }\n    }, [isOpen, defaultTheme?.toString()]);\n\n    const paletteFields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('ColourModal.city'),\n            component: (\n                <CityPicker\n                    defaultValueId={cityCode}\n                    onChange={value => {\n                        setCityCode(value);\n                        setLineCode(undefined);\n                        setBgColour('#AAAAAA');\n                        setFgColour(MonoColour.white);\n                    }}\n                />\n            ),\n        },\n        {\n            type: 'custom',\n            label: t('ColourModal.line'),\n            component: (\n                <ColourPicker\n                    city={cityCode}\n                    defaultValueId={lineCode}\n                    onChange={(line, bg, fg) => {\n                        setLineCode(line);\n                        setBgColour(bg);\n                        setFgColour(fg);\n                    }}\n                />\n            ),\n        },\n    ];\n\n    const customFields: RmgFieldsField[] = [\n        {\n            type: 'input',\n            label: t('ColourModal.bg'),\n            variant: 'color',\n            value: bgColour,\n            placeholder: '#F3D03E',\n            onChange: value => {\n                setCityCode(CityCode.Other);\n                setLineCode('other');\n                setBgColour(value as ColourHex);\n            },\n        },\n        {\n            type: 'select',\n            label: t('ColourModal.fg'),\n            value: fgColour,\n            options: {\n                [MonoColour.white]: t('ColourModal.white'),\n                [MonoColour.black]: t('ColourModal.black'),\n            },\n            onChange: value => {\n                setCityCode(CityCode.Other);\n                setLineCode('other');\n                setFgColour(value as MonoColour);\n            },\n        },\n    ];\n\n    const isSubmitEnabled = cityCode && lineCode && bgColour && fgColour;\n\n    const handleSubmit = () => {\n        if (isSubmitEnabled) {\n            onUpdate?.([cityCode, lineCode, bgColour, fgColour]);\n            onClose();\n        }\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('ColourModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <VStack>\n                        <RmgLineBadge name={t('ColourModal.example')} fg={fgColour} bg={bgColour} />\n\n                        <Tabs isFitted colorScheme=\"teal\" w=\"100%\" defaultIndex={cityCode === CityCode.Other ? 1 : 0}>\n                            <TabList>\n                                <Tab>{t('ColourModal.palette')}</Tab>\n                                <Tab>{t('ColourModal.custom')}</Tab>\n                            </TabList>\n\n                            <TabPanels>\n                                <TabPanel>\n                                    <RmgFields fields={paletteFields} />\n                                </TabPanel>\n                                <TabPanel>\n                                    <RmgFields fields={customFields} />\n                                </TabPanel>\n                            </TabPanels>\n                        </Tabs>\n                    </VStack>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Text fontSize=\"sm\" marginRight={2}>\n                        {t('ColourModal.seeAll')}\n                        <Link color=\"teal.500\" href=\"/rmg-palette\" isExternal={true}>\n                            RMG Palette <Icon as={MdOpenInNew} />\n                        </Link>\n                    </Text>\n\n                    <Button colorScheme=\"teal\" onClick={handleSubmit} disabled={!isSubmitEnabled}>\n                        {t('ColourModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import { ColourHex } from '../constants/constants';\nimport { rmgChakraTheme } from '@railmapgen/rmg-components';\n\nexport default class ColourUtil {\n    private static hexToRgb(hex: ColourHex): [number, number, number] {\n        return [parseInt(hex.slice(1, 3), 16), parseInt(hex.slice(3, 5), 16), parseInt(hex.slice(5, 7), 16)];\n    }\n\n    public static fade(hex: ColourHex, alpha: number): `rgba(${string})` {\n        return `rgba(${[...this.hexToRgb(hex), alpha].join(',')})`;\n    }\n\n    public static euclideanDistance(hex1: ColourHex, hex2: ColourHex): number {\n        return this.hexToRgb(hex1).reduce((acc, cur, idx) => {\n            return acc + Math.pow(cur - this.hexToRgb(hex2)[idx], 2);\n        }, 0);\n    }\n}\n\nexport const findNearestColour = (hex: ColourHex): string => {\n    const colourDb: Record<string, Record<string, ColourHex> | ColourHex> = rmgChakraTheme.colors;\n\n    const [nearestColour] = Object.entries(colourDb).reduce(\n        (acc, cur) => {\n            if (cur[0].includes('Alpha') || cur[0] === 'current') {\n                return acc;\n            } else if (typeof cur[1] === 'string') {\n                const dist = ColourUtil.euclideanDistance(hex, cur[1]);\n                return dist < acc[1] ? [cur[0], dist] : acc;\n            } else {\n                const dist = ColourUtil.euclideanDistance(hex, cur[1]['600']);\n                return dist < acc[1] ? [cur[0], dist] : acc;\n            }\n        },\n        ['brand', Infinity]\n    );\n    return nearestColour;\n};\n","import React from 'react';\nimport ColourUtil from '../../theme/colour-util';\nimport { MdCircle } from 'react-icons/md';\nimport { IconButton } from '@chakra-ui/react';\nimport { Theme } from '../../constants/constants';\nimport { useTranslation } from 'react-i18next';\n\ninterface ThemeButtonProps {\n    theme: Theme;\n    onClick?: () => void;\n}\n\nexport default function ThemeButton(props: ThemeButtonProps) {\n    const { theme, onClick } = props;\n\n    const { t } = useTranslation();\n\n    return (\n        <IconButton\n            size=\"xs\"\n            aria-label={t('Colour')}\n            mt=\"0.45px\"\n            color={theme[3]}\n            bg={theme[2]}\n            _hover={{ bg: ColourUtil.fade(theme[2], 0.7) }}\n            icon={<MdCircle />}\n            onClick={onClick}\n        />\n    );\n}\n","import React, { useState } from 'react';\nimport { Box, HStack, IconButton, Text } from '@chakra-ui/react';\nimport { InterchangeInfo, MonoColour, Theme } from '../../../constants/constants';\nimport { MdAdd, MdContentCopy, MdDelete } from 'react-icons/md';\nimport ColourModal from '../../modal/colour-modal/colour-modal';\nimport { useTranslation } from 'react-i18next';\nimport { useRootSelector } from '../../../redux';\nimport ThemeButton from '../theme-button';\nimport { RmgCard, RmgFields, RmgFieldsField, RmgLabel } from '@railmapgen/rmg-components';\n\ninterface InterchangeCardProps {\n    interchangeList: InterchangeInfo[];\n    onAdd?: (info: InterchangeInfo) => void;\n    onDelete?: (index: number) => void;\n    onUpdate?: (index: number, info: InterchangeInfo) => void;\n}\n\nexport default function InterchangeCard(props: InterchangeCardProps) {\n    const { interchangeList, onAdd, onDelete, onUpdate } = props;\n\n    const { t } = useTranslation();\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n\n    const { theme, stn_list: stationList } = useRootSelector(state => state.param);\n\n    const usedNameList = Object.values(stationList).reduce<[string[], string[]]>(\n        (acc, cur) => {\n            const [zhAcc, enAcc] = acc;\n            return [\n                [...new Set(zhAcc.concat(cur.transfer.info.flat().map(it => it[4])))],\n                [...new Set(enAcc.concat(cur.transfer.info.flat().map(it => it[5])))],\n            ];\n        },\n        [[], []]\n    );\n\n    const interchangeFields: RmgFieldsField[][] = interchangeList.map((it, i) => [\n        {\n            type: 'input',\n            label: t('Chinese name'),\n            value: it[4],\n            minW: '80px',\n            onChange: val => onUpdate?.(i, [it[0], it[1], it[2], it[3], val, it[5]]),\n            optionList: usedNameList[0],\n        },\n        {\n            type: 'input',\n            label: t('English name'),\n            value: it[5],\n            minW: '80px',\n            onChange: val => onUpdate?.(i, [it[0], it[1], it[2], it[3], it[4], val]),\n            optionList: usedNameList[1],\n        },\n    ]);\n\n    return (\n        <RmgCard direction=\"column\">\n            {interchangeList.length === 0 && (\n                <HStack spacing={0.5} data-testid={`interchange-card-stack`}>\n                    <Text as=\"i\" flex={1} align=\"center\" fontSize=\"md\" colorScheme=\"gray\">\n                        {t('StationSidePanel.interchange.noInterchanges')}\n                    </Text>\n\n                    <IconButton\n                        size=\"sm\"\n                        variant=\"ghost\"\n                        aria-label={t('StationSidePanel.interchange.add')}\n                        onClick={() => onAdd?.([theme[0], '', '#aaaaaa', MonoColour.white, '', ''])}\n                        icon={<MdAdd />}\n                    />\n                </HStack>\n            )}\n\n            {interchangeList.map((it, i) => (\n                <HStack key={i} spacing={0.5} data-testid={`interchange-card-stack-${i}`}>\n                    <RmgLabel label={t('Colour')} minW=\"40px\" noLabel={i !== 0}>\n                        <ThemeButton\n                            theme={[it[0], it[1], it[2], it[3]]}\n                            onClick={() => {\n                                setIsModalOpen(true);\n                                setSelectedIndex(i);\n                            }}\n                        />\n                    </RmgLabel>\n\n                    <RmgFields fields={interchangeFields[i]} noLabel={i !== 0} />\n\n                    {onAdd && i === interchangeFields.length - 1 ? (\n                        <IconButton\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            aria-label={t('StationSidePanel.interchange.copy')}\n                            onClick={() => onAdd?.(interchangeList.slice(-1)[0])} // duplicate last leg\n                            icon={<MdContentCopy />}\n                        />\n                    ) : (\n                        <Box minW={8} />\n                    )}\n\n                    {onDelete && (\n                        <IconButton\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            aria-label={t('StationSidePanel.interchange.remove')}\n                            onClick={() => onDelete?.(i)}\n                            icon={<MdDelete />}\n                        />\n                    )}\n                </HStack>\n            ))}\n\n            <ColourModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                defaultTheme={interchangeList[selectedIndex]?.slice(0, 4) as Theme}\n                onUpdate={theme =>\n                    onUpdate?.(selectedIndex, [\n                        ...theme,\n                        interchangeList[selectedIndex][4],\n                        interchangeList[selectedIndex][5],\n                    ])\n                }\n            />\n        </RmgCard>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup } from '@chakra-ui/react';\n\ntype ButtonGroupSelection<T> = {\n    label: string;\n    value: T;\n    disabled?: boolean;\n};\n\ntype RmgButtonGroupSingleSelectProps<T> = {\n    selections: ButtonGroupSelection<T>[];\n    defaultValue: T;\n    onChange?: (value: T) => void;\n    multiSelect?: false;\n};\n\ntype RmgButtonGroupMultiSelectProps<T> = {\n    selections: ButtonGroupSelection<T>[];\n    defaultValue: T[];\n    onChange?: (value: T[]) => void;\n    multiSelect: true;\n};\n\ntype RmgButtonGroupProps<T> = RmgButtonGroupSingleSelectProps<T> | RmgButtonGroupMultiSelectProps<T>;\n\nexport default function RmgButtonGroup<T extends string | boolean>(props: RmgButtonGroupProps<T>) {\n    const { selections, defaultValue, onChange, multiSelect } = props;\n\n    const [value, setValue] = useState(defaultValue);\n\n    useEffect(() => {\n        defaultValue.toString() && setValue(defaultValue);\n    }, [defaultValue.toString()]);\n\n    const handleToggle = (val: T) => {\n        if (multiSelect) {\n            const prevValue = value as T[];\n            const nextValue = prevValue.includes(val) ? prevValue.filter(v => v !== val) : [...prevValue, val];\n\n            setValue(nextValue);\n            (onChange as RmgButtonGroupMultiSelectProps<T>['onChange'])?.(nextValue);\n        } else {\n            setValue(val);\n            (onChange as RmgButtonGroupSingleSelectProps<T>['onChange'])?.(val);\n        }\n    };\n\n    return (\n        <ButtonGroup size=\"xs\" isAttached colorScheme=\"teal\" variant=\"outline\">\n            {selections.map((selection, i) => {\n                const isSelected =\n                    (typeof value === 'object' && value.includes(selection.value)) || value === selection.value;\n\n                // TODO: fix overlapped/missing border\n                const mr = i !== selections.length - 1 && !isSelected ? '-px' : undefined;\n\n                return (\n                    <Button\n                        key={selection.value.toString()}\n                        role=\"checkbox\"\n                        aria-checked={isSelected}\n                        variant={isSelected ? 'solid' : 'outline'}\n                        mr={mr}\n                        isDisabled={selection.disabled}\n                        onClick={() => handleToggle(selection.value)}\n                    >\n                        {selection.label}\n                    </Button>\n                );\n            })}\n        </ButtonGroup>\n    );\n}\n\ninterface RmgBooleanButtonGroupProps {\n    defaultValue: boolean;\n    onChange?: (value: boolean) => void;\n}\n\nexport const RmgBooleanButtonGroup = (props: RmgBooleanButtonGroupProps) => {\n    const selections = [\n        {\n            label: 'Yes',\n            value: true,\n        },\n        {\n            label: 'No',\n            value: false,\n        },\n    ];\n\n    return <RmgButtonGroup selections={selections} {...props} />;\n};\n","import React, { Fragment } from 'react';\nimport { Button, Flex, Heading, VStack } from '@chakra-ui/react';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport InterchangeCard from './interchange-card';\nimport {\n    addInterchange,\n    removeInterchange,\n    updateInterchange,\n    updateStationOsiName,\n    updateStationPaidArea,\n    updateStationTickDirection,\n} from '../../../redux/param/action';\nimport { InterchangeInfo, MonoColour, RmgStyle, ShortDirection } from '../../../constants/constants';\nimport { MdAdd } from 'react-icons/md';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\nimport RmgButtonGroup from '../../common/rmg-button-group';\n\nexport default function InterchangeSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedStation = useRootSelector(state => state.app.selectedStation);\n    const { theme, style } = useRootSelector(state => state.param);\n    const { transfer } = useRootSelector(state => state.param.stn_list[selectedStation]);\n\n    const getOSINameFields = (setIndex: number): RmgFieldsField[] => [\n        {\n            type: 'input',\n            label: t('Station Chinese name'),\n            value: transfer.osi_names[setIndex]?.[0],\n            hidden: ![RmgStyle.MTR].includes(style),\n            onChange: value =>\n                dispatch(updateStationOsiName(selectedStation, setIndex, [value, transfer.osi_names[setIndex]?.[1]])),\n        },\n        {\n            type: 'input',\n            label: t('Station English name'),\n            value: transfer.osi_names[setIndex]?.[1],\n            hidden: ![RmgStyle.MTR].includes(style),\n            onChange: value =>\n                dispatch(updateStationOsiName(selectedStation, setIndex, [transfer.osi_names[setIndex]?.[0], value])),\n        },\n        {\n            type: 'switch',\n            label: t('Paid area'),\n            isChecked: transfer.paid_area,\n            onChange: checked => dispatch(updateStationPaidArea(selectedStation, checked)),\n            hidden: ![RmgStyle.MTR].includes(style) || setIndex !== 0,\n            oneLine: true,\n        },\n    ];\n\n    const handleAdd = (i: number) => (info: InterchangeInfo) => {\n        dispatch(addInterchange(selectedStation, i, info));\n    };\n\n    const handleDelete = (i: number) => (j: number) => {\n        dispatch(removeInterchange(selectedStation, i, j));\n    };\n\n    const handleUpdate = (i: number) => (j: number, info: InterchangeInfo) => {\n        dispatch(updateInterchange(selectedStation, i, j, info));\n    };\n\n    const handleAddInterchangeGroup = () => {\n        dispatch(\n            addInterchange(selectedStation, transfer.info.length, [theme[0], '', '#AAAAAA', MonoColour.white, '', ''])\n        );\n    };\n\n    return (\n        <VStack align=\"flex-start\" p={1}>\n            <Flex w=\"100%\">\n                <Heading as=\"h5\" size=\"sm\" mr=\"auto\">\n                    {t('StationSidePanel.interchange.title')}\n                </Heading>\n\n                {style === RmgStyle.MTR && (\n                    <RmgButtonGroup\n                        selections={[\n                            { label: t('Text on the left'), value: ShortDirection.left },\n                            { label: t('Text on the right'), value: ShortDirection.right },\n                        ]}\n                        defaultValue={transfer.tick_direc}\n                        onChange={value => dispatch(updateStationTickDirection(selectedStation, value))}\n                    />\n                )}\n            </Flex>\n\n            {transfer.info.map((infoList, i) => (\n                <Fragment key={i}>\n                    <Heading as=\"h6\" size=\"xs\">\n                        {i === 0\n                            ? t('StationSidePanel.interchange.within')\n                            : i === 1\n                            ? t('StationSidePanel.interchange.outStation')\n                            : t('StationSidePanel.interchange.outSystem')}\n                    </Heading>\n\n                    {i !== 0 && <RmgFields fields={getOSINameFields(i - 1)} />}\n\n                    <InterchangeCard\n                        interchangeList={infoList}\n                        onAdd={handleAdd(i)}\n                        onDelete={handleDelete(i)}\n                        onUpdate={handleUpdate(i)}\n                    />\n                </Fragment>\n            ))}\n\n            {transfer.info.length < 3 && (\n                <Button\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    alignSelf=\"flex-end\"\n                    leftIcon={<MdAdd />}\n                    onClick={handleAddInterchangeGroup}\n                >\n                    {t('StationSidePanel.interchange.addGroup')}\n                </Button>\n            )}\n        </VStack>\n    );\n}\n","import { Box, Heading } from '@chakra-ui/react';\nimport React from 'react';\nimport RmgButtonGroup from '../../common/rmg-button-group';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { Facilities, RmgStyle, Services } from '../../../constants/constants';\nimport {\n    updateStationFacility,\n    updateStationLoopPivot,\n    updateStationServices,\n    updateStationOneLine,\n    updateStationIntPadding,\n    updateStationIntPaddingToAll,\n} from '../../../redux/param/action';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function MoreSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedStation = useRootSelector(state => state.app.selectedStation);\n    const { style, loop } = useRootSelector(state => state.param);\n    const { services, facility, loop_pivot, one_line, int_padding } = useRootSelector(\n        state => state.param.stn_list[selectedStation]\n    );\n\n    const serviceSelections = Object.values(Services).map(service => {\n        return {\n            label: t('StationSidePanel.more.' + service),\n            value: service,\n            disabled: service === Services.local && style !== RmgStyle.SHMetro,\n        };\n    });\n\n    const mtrFacilityOptions = {\n        [Facilities.none]: t('StationSidePanel.more.none'),\n        [Facilities.airport]: t('StationSidePanel.more.airport'),\n        [Facilities.hsr]: t('StationSidePanel.more.hsr'),\n        [Facilities.disney]: t('StationSidePanel.more.disney'),\n    };\n\n    const shmetroFacilityOptions = {\n        [Facilities.none]: t('StationSidePanel.more.none'),\n        [Facilities.airport]: t('StationSidePanel.more.airport'),\n        [Facilities.railway]: t('StationSidePanel.more.railway'),\n        [Facilities.disney]: t('StationSidePanel.more.disney'),\n    };\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('StationSidePanel.more.service'),\n            component: (\n                <RmgButtonGroup\n                    selections={serviceSelections}\n                    defaultValue={services}\n                    onChange={services => dispatch(updateStationServices(selectedStation, services))}\n                    multiSelect\n                />\n            ),\n            hidden: ![RmgStyle.GZMTR, RmgStyle.SHMetro].includes(style),\n        },\n        {\n            type: 'select',\n            label: t('StationSidePanel.more.facility'),\n            value: facility,\n            options: style === RmgStyle.MTR ? mtrFacilityOptions : shmetroFacilityOptions,\n            onChange: value => dispatch(updateStationFacility(selectedStation, value as Facilities)),\n            hidden: ![RmgStyle.MTR, RmgStyle.SHMetro].includes(style),\n        },\n        {\n            type: 'switch',\n            label: t('StationSidePanel.more.pivot'),\n            isChecked: loop_pivot,\n            onChange: checked => dispatch(updateStationLoopPivot(selectedStation, checked)),\n            hidden: ![RmgStyle.SHMetro].includes(style) || !loop,\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'switch',\n            label: t('StationSidePanel.more.oneLine'),\n            isChecked: one_line,\n            onChange: checked => dispatch(updateStationOneLine(selectedStation, checked)),\n            hidden: ![RmgStyle.SHMetro].includes(style),\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'input',\n            label: t('StationSidePanel.more.intPadding'),\n            value: int_padding.toString(),\n            validator: val => Number.isInteger(val),\n            onChange: val => dispatch(updateStationIntPadding(selectedStation, Number(val))),\n            hidden: ![RmgStyle.SHMetro].includes(style),\n        },\n        {\n            type: 'custom',\n            label: t('StationSidePanel.more.intPaddingApplyGlobal'),\n            component: (\n                <RmgButtonGroup\n                    selections={[{ label: t('StationSidePanel.more.apply'), value: '', disabled: false }]}\n                    defaultValue=\"\"\n                    onChange={_ => dispatch(updateStationIntPaddingToAll(selectedStation))}\n                />\n            ),\n            oneLine: true,\n            hidden: ![RmgStyle.SHMetro].includes(style),\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StationSidePanel.more.title')}\n            </Heading>\n\n            <RmgFields fields={fields} />\n        </Box>\n    );\n}\n","import { Box, Heading, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { BranchStyle, Direction } from '../../../constants/constants';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport {\n    flipStationBranchPosition,\n    updateStationBranchFirstStation,\n    updateStationBranchType,\n} from '../../../redux/param/action';\nimport { RmgCard, RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function BranchSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedStation = useRootSelector(state => state.app.selectedStation);\n    const stationList = useRootSelector(state => state.param.stn_list);\n    const { parents, children, branch } = stationList[selectedStation];\n\n    const branchOptions = {\n        [BranchStyle.through]: t('StationSidePanel.branch.through'),\n        [BranchStyle.nonThrough]: t('StationSidePanel.branch.nonThrough'),\n    };\n\n    const getFirstStationOptions = (direction: Direction) => {\n        return (direction === Direction.left ? parents : children).reduce<Record<string, string>>(\n            (acc, cur) => ({ ...acc, [cur]: stationList[cur].name.join(' ') }),\n            {}\n        );\n    };\n\n    const positionOptions = {\n        upper: t('StationSidePanel.branch.upper'),\n        lower: t('StationSidePanel.branch.lower'),\n    };\n\n    const getFields = (direction: Direction): RmgFieldsField[] => {\n        if (branch[direction].length) {\n            return [\n                {\n                    type: 'select',\n                    label: t('StationSidePanel.branch.type'),\n                    options: branchOptions,\n                    value: branch[direction][0],\n                    onChange: value =>\n                        dispatch(updateStationBranchType(selectedStation, direction, value as BranchStyle)),\n                },\n                {\n                    type: 'select',\n                    label: t('StationSidePanel.branch.firstStation'),\n                    options: getFirstStationOptions(direction),\n                    value: branch[direction][1],\n                    onChange: value =>\n                        dispatch(updateStationBranchFirstStation(selectedStation, direction, value as string)),\n                },\n                {\n                    type: 'select',\n                    label: t('StationSidePanel.branch.position'),\n                    options: positionOptions,\n                    value:\n                        (direction === Direction.left ? parents : children).indexOf(branch[direction][1]!) === 0\n                            ? 'upper'\n                            : 'lower',\n                    onChange: () => dispatch(flipStationBranchPosition(selectedStation, direction)),\n                },\n            ];\n        } else {\n            return [];\n        }\n    };\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('Branches')}\n            </Heading>\n\n            <Heading as=\"h6\" size=\"xs\">\n                {t('Branch on the left')}\n            </Heading>\n\n            <RmgCard direction=\"column\">\n                {parents.length === 2 ? (\n                    <RmgFields fields={getFields(Direction.left)} />\n                ) : (\n                    <Text as=\"i\" flex={1} align=\"center\" fontSize=\"md\" colorScheme=\"gray\">\n                        {t('No branches found')}\n                    </Text>\n                )}\n            </RmgCard>\n\n            <Heading as=\"h6\" size=\"xs\">\n                {t('Branch on the right')}\n            </Heading>\n\n            <RmgCard direction=\"column\">\n                {children.length === 2 ? (\n                    <RmgFields fields={getFields(Direction.right)} />\n                ) : (\n                    <Text as=\"i\" flex={1} align=\"center\" fontSize=\"md\" colorScheme=\"gray\">\n                        {t('No branches found')}\n                    </Text>\n                )}\n            </RmgCard>\n        </Box>\n    );\n}\n","import { Divider } from '@chakra-ui/react';\nimport React from 'react';\nimport InfoSection from './info-section';\nimport InterchangeSection from './interchange-section';\nimport MoreSection from './more-section';\nimport BranchSection from './branch-section';\nimport { RmgSidePanelBody } from '@railmapgen/rmg-components';\n\nexport default function StationSidePanel() {\n    return (\n        <RmgSidePanelBody>\n            <InfoSection />\n\n            <Divider />\n\n            <InterchangeSection />\n\n            <Divider />\n\n            <BranchSection />\n\n            <Divider />\n\n            <MoreSection />\n        </RmgSidePanelBody>\n    );\n}\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { useRootSelector } from '../../../redux';\nimport { canvasConfig, RmgStyle } from '../../../constants/constants';\nimport {\n    setBranchSpacingPct,\n    setDirectionIndicatorX,\n    setDirectionIndicatorY,\n    setPaddingPercentage,\n    setSvgHeight,\n    setSvgWidth,\n    setYPercentage,\n} from '../../../redux/param/action';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\n\nexport default function LayoutSection() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const {\n        style: rmgStyle,\n        svgWidth,\n        svg_height,\n        y_pc,\n        branchSpacingPct,\n        padding,\n        direction_gz_x,\n        direction_gz_y,\n        loop,\n    } = useRootSelector(state => state.param);\n\n    const fields: RmgFieldsField[] = [\n        ...canvasConfig[rmgStyle].map<RmgFieldsField>(canvas => ({\n            type: 'input',\n            label: t(`StyleSidePanel.layout.${canvas}Width`),\n            value: svgWidth[canvas].toString(),\n            onChange: val => dispatch(setSvgWidth(Number(val), canvas)),\n        })),\n        {\n            type: 'input',\n            label: t('StyleSidePanel.layout.canvasHeight'),\n            value: svg_height.toString(),\n            onChange: val => dispatch(setSvgHeight(Number(val))),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.verticalPosition'),\n            value: y_pc,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setYPercentage(val)),\n            hidden: ![RmgStyle.MTR, RmgStyle.GZMTR].includes(rmgStyle),\n        },\n        {\n            type: 'slider',\n            label: !loop ? t('Branch spacing') : t('StyleSidePanel.layout.branchSpacingLoop'),\n            value: branchSpacingPct,\n            min: 0,\n            max: loop ? 50 : 100,\n            onChange: val => dispatch(setBranchSpacingPct(val)),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.padding'),\n            value: padding,\n            min: 0,\n            max: 50,\n            onChange: val => dispatch(setPaddingPercentage(val)),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.directionGzX'),\n            value: direction_gz_x,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setDirectionIndicatorX(val)),\n            hidden: ![RmgStyle.GZMTR].includes(rmgStyle),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.layout.directionGzY'),\n            value: direction_gz_y,\n            min: 0,\n            max: 100,\n            onChange: val => dispatch(setDirectionIndicatorY(val)),\n            hidden: ![RmgStyle.GZMTR].includes(rmgStyle),\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.layout.title')}\n            </Heading>\n\n            <RmgFields fields={fields} minW={130} />\n        </Box>\n    );\n}\n","import React, { useState } from 'react';\nimport { Box, Button, Heading, HStack } from '@chakra-ui/react';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport ThemeButton from '../theme-button';\nimport ColourModal from '../../modal/colour-modal/colour-modal';\nimport {\n    customiseDestinationName,\n    flipStationNames,\n    setDirection,\n    setLineName,\n    setLineNum,\n    setPanelType,\n    setPlatform,\n    setPsdNum,\n    setTheme,\n    staggerStationNames,\n    toggleLineNameBeforeDestination,\n} from '../../../redux/param/action';\nimport RmgButtonGroup from '../../common/rmg-button-group';\nimport { PanelTypeGZMTR, PanelTypeShmetro, RmgStyle, ShortDirection } from '../../../constants/constants';\nimport { MdSwapVert } from 'react-icons/md';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function DesignSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const {\n        style,\n        theme,\n        line_name: lineName,\n        line_num: lineNum,\n        direction,\n        platform_num: platformNum,\n        psd_num: psdNum,\n        namePosMTR,\n        customiseMTRDest,\n        info_panel_type,\n    } = useRootSelector(state => state.param);\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const directionSelections = [\n        {\n            label: t('StyleSidePanel.design.left'),\n            value: ShortDirection.left,\n        },\n        {\n            label: t('StyleSidePanel.design.right'),\n            value: ShortDirection.right,\n        },\n    ];\n\n    const panelTypeGZMTROptions = Object.values(PanelTypeGZMTR).reduce<Record<string, string>>(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: t('StyleSidePanel.design.' + cur),\n        }),\n        {}\n    );\n\n    const panelTypeSHMetroOptions = Object.values(PanelTypeShmetro).reduce<Record<string, string>>(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: t('StyleSidePanel.design.' + cur),\n        }),\n        {}\n    );\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('Colour'),\n            component: <ThemeButton theme={theme} onClick={() => setIsModalOpen(true)} />,\n            minW: '40px',\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.zhLineName'),\n            value: lineName[0],\n            onChange: value => dispatch(setLineName([value, lineName[1]])),\n            minW: 130,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.enLineName'),\n            value: lineName[1],\n            onChange: value => dispatch(setLineName([lineName[0], value])),\n            minW: 130,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.lineNum'),\n            value: lineNum,\n            onChange: value => dispatch(setLineNum(value)),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.platformNum'),\n            value: platformNum || '',\n            onChange: value => dispatch(setPlatform(value)),\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.psdNum'),\n            value: psdNum,\n            onChange: value => dispatch(setPsdNum(value)),\n            hidden: ![RmgStyle.GZMTR].includes(style),\n        },\n        {\n            type: 'select',\n            label: t('StyleSidePanel.design.panelType'),\n            value: info_panel_type,\n            options: style === RmgStyle.GZMTR ? panelTypeGZMTROptions : panelTypeSHMetroOptions,\n            onChange: value => dispatch(setPanelType(value as PanelTypeGZMTR | PanelTypeShmetro)),\n            hidden: ![RmgStyle.GZMTR, RmgStyle.SHMetro].includes(style),\n        },\n        {\n            type: 'custom',\n            label: t('StyleSidePanel.design.direction'),\n            component: (\n                <RmgButtonGroup\n                    selections={directionSelections}\n                    defaultValue={direction}\n                    onChange={nextDirection => dispatch(setDirection(nextDirection))}\n                />\n            ),\n            minW: 'full',\n            oneLine: true,\n        },\n    ];\n\n    const staggerNameSelections = [\n        {\n            label: t('StyleSidePanel.design.alternatively'),\n            value: true,\n        },\n        {\n            label: t('StyleSidePanel.design.onOneSide'),\n            value: false,\n        },\n    ];\n\n    const mtrSpecifiedFields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('StyleSidePanel.design.nameDisplay'),\n            component: (\n                <HStack>\n                    <RmgButtonGroup\n                        selections={staggerNameSelections}\n                        defaultValue={namePosMTR.isStagger}\n                        onChange={value => dispatch(staggerStationNames(value))}\n                    />\n                    <Button\n                        size=\"xs\"\n                        variant=\"ghost\"\n                        leftIcon={<MdSwapVert />}\n                        onClick={() => dispatch(flipStationNames())}\n                    >\n                        {t('StyleSidePanel.design.flip')}\n                    </Button>\n                </HStack>\n            ),\n            minW: 'full',\n            oneLine: true,\n            hidden: ![RmgStyle.MTR].includes(style),\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.design.legacyDestination'),\n            isChecked: customiseMTRDest.isLegacy,\n            onChange: checked => dispatch(toggleLineNameBeforeDestination(checked)),\n            hidden: ![RmgStyle.MTR].includes(style),\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.design.overrideTerminal'),\n            isChecked: customiseMTRDest.terminal !== false,\n            onChange: checked => dispatch(customiseDestinationName(checked ? ['', ''] : false)),\n            hidden: ![RmgStyle.MTR].includes(style),\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.terminalZhName'),\n            value: customiseMTRDest.terminal ? customiseMTRDest.terminal[0] : '',\n            placeholder: '機場及博覽館',\n            onChange: value =>\n                dispatch(\n                    customiseDestinationName([value, customiseMTRDest.terminal ? customiseMTRDest.terminal[1] : ''])\n                ),\n            hidden: ![RmgStyle.MTR].includes(style) || customiseMTRDest.terminal === false,\n        },\n        {\n            type: 'input',\n            label: t('StyleSidePanel.design.terminalEnName'),\n            value: customiseMTRDest.terminal ? customiseMTRDest.terminal[1] : '',\n            placeholder: 'Airport and AsiaWorld-Expo',\n            onChange: value =>\n                dispatch(\n                    customiseDestinationName([customiseMTRDest.terminal ? customiseMTRDest.terminal[0] : '', value])\n                ),\n            hidden: ![RmgStyle.MTR].includes(style) || customiseMTRDest.terminal === false,\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.design.title')}\n            </Heading>\n\n            <RmgFields fields={[...fields, ...mtrSpecifiedFields]} minW={130} />\n\n            <ColourModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                defaultTheme={theme}\n                onUpdate={nextTheme => dispatch(setTheme(nextTheme))}\n            />\n        </Box>\n    );\n}\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { setLoop, setLoopBank, setLoopBottomFactor, setLoopLeftAndRightFactor } from '../../../redux/param/action';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\nexport default function LoopSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const { branches } = useRootSelector(state => state.helper);\n    const { loop, loop_info } = useRootSelector(state => state.param);\n    const { bank, left_and_right_factor, bottom_factor } = loop_info;\n\n    // loop line with 2 branches has no bottom_factor and a specialized left_and_right_factor_max\n    const arc: 'major' | 'minor' = 'minor';\n    const branch_stn_ids = branches\n        .flat()\n        .filter(\n            (\n                o => v =>\n                    (o[v] = (o[v] || 0) + 1) === 2\n            )({} as { [stn_id: string]: number })\n        ) // count each occurrence\n        .filter(stn_id => !['linestart', 'lineend'].includes(stn_id)); // find branch stations\n    const _ = Math.abs(branches[0].indexOf(branch_stn_ids[0]) - branches[0].indexOf(branch_stn_ids[1]));\n    const left_and_right_factor_max =\n        branches.length >= 2\n            ? // top length is fixed, change left_and_right_factor only\n              (arc === 'minor' ? Math.min : Math.max)(branches[0].length - 2 - _, _)\n            : Math.floor((branches[0].length - 2 - bottom_factor * 2) / 2);\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.loop.isLoop'),\n            isChecked: loop,\n            onChange: checked => dispatch(setLoop(checked)),\n            minW: 'full',\n            oneLine: true,\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.loop.isBank'),\n            isChecked: bank,\n            onChange: checked => dispatch(setLoopBank(checked)),\n            minW: 'full',\n            oneLine: true,\n            hidden: !loop,\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.loop.leftRightFactor'),\n            value: left_and_right_factor,\n            min: 0,\n            max: left_and_right_factor_max,\n            onChange: val => dispatch(setLoopLeftAndRightFactor(Math.floor(val))),\n            hidden: !loop,\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.loop.bottomFactor'),\n            value: bottom_factor,\n            min: 0,\n            max: Math.floor((branches[0].length - 2 - left_and_right_factor * 2) / 2),\n            onChange: val => dispatch(setLoopBottomFactor(Math.floor(val))),\n            hidden: !loop || (loop && branches.length > 2),\n        },\n    ];\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.loop.title')}\n            </Heading>\n\n            <RmgFields fields={fields} />\n        </Box>\n    );\n}\n","import React from 'react';\nimport { HStack, IconButton } from '@chakra-ui/react';\nimport { Note } from '../../../constants/constants';\nimport { MdDelete } from 'react-icons/md';\nimport { RmgCard, RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\ninterface GZMTRNoteCardProps {\n    note: Note;\n    onUpdate?: (value: Note) => void;\n    onDelete?: () => void;\n}\n\nexport default function GZMTRNoteCard(props: GZMTRNoteCardProps) {\n    const { note, onUpdate, onDelete } = props;\n    const { t } = useTranslation();\n\n    const fields1: RmgFieldsField[] = [\n        {\n            type: 'textarea',\n            label: t('StyleSidePanel.note.zhNote'),\n            value: note[0],\n            onChange: value => onUpdate?.([value, note[1], note[2], note[3], note[4]]),\n        },\n        {\n            type: 'textarea',\n            label: t('StyleSidePanel.note.enNote'),\n            value: note[1],\n            onChange: value => onUpdate?.([note[0], value, note[2], note[3], note[4]]),\n        },\n        {\n            type: 'switch',\n            label: t('StyleSidePanel.note.border'),\n            isChecked: note[4],\n            onChange: value => onUpdate?.([note[0], note[1], note[2], note[3], value]),\n            oneLine: true,\n        },\n    ];\n\n    const fields2: RmgFieldsField[] = [\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.note.positionX'),\n            value: note[2],\n            min: 0,\n            max: 100,\n            onChange: value => onUpdate?.([note[0], note[1], value, note[3], note[4]]),\n        },\n        {\n            type: 'slider',\n            label: t('StyleSidePanel.note.positionY'),\n            value: note[3],\n            min: 0,\n            max: 100,\n            onChange: value => onUpdate?.([note[0], note[1], note[2], value, note[4]]),\n        },\n    ];\n\n    return (\n        <RmgCard direction=\"column\">\n            <RmgFields fields={fields1} minW=\"full\" />\n            <HStack spacing={0.5}>\n                <RmgFields fields={fields2} />\n\n                <IconButton\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    aria-label={t('StyleSidePanel.note.remove')}\n                    onClick={() => onDelete?.()}\n                    icon={<MdDelete />}\n                />\n            </HStack>\n        </RmgCard>\n    );\n}\n","import React from 'react';\nimport { Box, Button, Heading, VStack } from '@chakra-ui/react';\nimport GZMTRNoteCard from './gzmtr-note-card';\nimport { addNote, removeNote, updateNote } from '../../../redux/param/action';\nimport { MdAdd } from 'react-icons/md';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { useTranslation } from 'react-i18next';\n\nexport default function GZMTRNoteSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const notesGZMTR = useRootSelector(state => state.param.notesGZMTR);\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('StyleSidePanel.note.title')}\n            </Heading>\n\n            <VStack spacing={0.5}>\n                {notesGZMTR.map((note, i) => (\n                    <GZMTRNoteCard\n                        key={i}\n                        note={note}\n                        onUpdate={value => dispatch(updateNote(i, value))}\n                        onDelete={() => dispatch(removeNote(i))}\n                    />\n                ))}\n\n                <Button\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    leftIcon={<MdAdd />}\n                    alignSelf=\"flex-end\"\n                    onClick={() => dispatch(addNote())}\n                >\n                    {t('StyleSidePanel.note.add')}\n                </Button>\n            </VStack>\n        </Box>\n    );\n}\n","import { Divider } from '@chakra-ui/react';\nimport React from 'react';\nimport { useRootSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport LayoutSection from './layout-section';\nimport DesignSection from './design-section';\nimport LoopSection from './loop-section';\nimport { RmgSidePanelBody } from '@railmapgen/rmg-components';\nimport GZMTRNoteSection from './gzmtr-note-section';\n\nexport default function StyleSidePanel() {\n    const { style } = useRootSelector(state => state.param);\n\n    return (\n        <RmgSidePanelBody>\n            <LayoutSection />\n\n            <Divider />\n\n            <DesignSection />\n\n            {style === RmgStyle.GZMTR && (\n                <>\n                    <Divider />\n\n                    <GZMTRNoteSection />\n                </>\n            )}\n\n            {style === RmgStyle.SHMetro && (\n                <>\n                    <Divider />\n\n                    <LoopSection />\n                </>\n            )}\n        </RmgSidePanelBody>\n    );\n}\n","import { StationDict } from './constants/constants';\n\n/**\n * Vertical position (in shares) of station icon if using MTR style (for consistency of method `RMGLine.newStnPossibleLoc()`).\n */\nexport const getYShareMTR = (stnId: string, stnList: StationDict): -1 | 0 | 1 => {\n    if (\n        ['linestart', 'lineend'].includes(stnId) ||\n        stnList[stnId].parents.length > 1 ||\n        stnList[stnId].children.length > 1\n    ) {\n        return 0;\n    }\n    var stnPred = stnList[stnId].parents[0];\n    if (stnPred) {\n        // parent exist\n        if (stnList[stnPred].children.length === 1) {\n            // no sibling, then y same as parent\n            return getYShareMTR(stnPred, stnList);\n        } else {\n            // sibling exists, then y depends on its idx of being children\n            return stnList[stnPred].children.indexOf(stnId) === 0 ? 1 : -1;\n        }\n    } else {\n        // no parent, must be linestart\n        return 0;\n    }\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n    Alert,\n    AlertIcon,\n    Box,\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { checkStationCouldBeRemoved, removeStation } from '../../redux/param/remove-station-action';\nimport { setSelectedStation, setSidePanelMode } from '../../redux/app/app-slice';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { SidePanelMode } from '../../constants/constants';\nimport { removeInvalidColineOnRemoveStation } from '../../redux/param/coline-action';\n\ninterface RemoveConfirmModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function RemoveConfirmModal(props: RemoveConfirmModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n\n    const dispatch = useRootDispatch();\n    const selectedStation = useRootSelector(state => state.app.selectedStation);\n\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        if (!isOpen) {\n            setError(false);\n        }\n    }, [isOpen]);\n\n    const handleConfirm = () => {\n        if (dispatch(checkStationCouldBeRemoved(selectedStation))) {\n            onClose();\n\n            // close side panel\n            dispatch(setSidePanelMode(SidePanelMode.CLOSE));\n\n            // reset selected station\n            dispatch(setSelectedStation('linestart'));\n\n            dispatch(removeInvalidColineOnRemoveStation(selectedStation));\n            dispatch(removeStation(selectedStation));\n        } else {\n            setError(true);\n        }\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                {error && (\n                    <Alert status=\"error\" variant=\"solid\" size=\"xs\">\n                        <AlertIcon />\n                        {t('Unable to remove this station.')}\n                    </Alert>\n                )}\n                <Box position=\"relative\">\n                    <ModalHeader>{t('Remove station')}</ModalHeader>\n                    <ModalCloseButton />\n                </Box>\n\n                <ModalBody>{t('Are you sure to remove station? You cannot undo this action.')}</ModalBody>\n\n                <ModalFooter>\n                    <Button onClick={onClose}>{t('Cancel')}</Button>\n                    <Button colorScheme=\"teal\" onClick={handleConfirm} ml={3}>\n                        {t('Confirm')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import { RootDispatch, RootState } from '../index';\nimport { getYShareMTR } from '../../methods';\nimport { StationDict } from '../../constants/constants';\nimport { setStationsBulk } from './action';\n\n/**\n * Return false when current algo can not handle this kind of station removal.\n * MUST BE CALLED AND CHECKED BEFORE removeStation!!!\n */\nexport const checkStationCouldBeRemoved = (stationId: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState): boolean => {\n        const { stn_list: stationList, current_stn_idx: currentStationIndex } = getState().param;\n\n        if (stationId === currentStationIndex) {\n            console.log('removeStation():: failed as current station cannot be deleted');\n            return false;\n        }\n\n        const { parents, children } = stationList[stationId];\n\n        if (Object.keys(stationList).length === 4) {\n            console.log('removeStation():: failed as only 2 stations remaining');\n            return false;\n        } else if (parents.length === 2 && children.length === 2) {\n            // Todo: rewrite, join two branches rather than reject?\n            console.log('removeStation():: failed as branches on both sides cannot be combined');\n            return false;\n        }\n\n        // reject if station is the last one on main branch\n        const isNotLastMainBranchStn = Object.keys(stationList).some(\n            id => ![stationId, 'linestart', 'lineend'].includes(id) && getYShareMTR(id, stationList) === 0\n        );\n        if (!isNotLastMainBranchStn) {\n            console.log('removeStation():: failed as selected station is the only station without siblings');\n            return false;\n        }\n\n        return true;\n    };\n};\n\nexport const removeStation = (stationId: string) => {\n    // checkStationCouldBeRemoved BEFORE removeStation!!!\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const stationList = getState().param.stn_list;\n        const { parents, children } = stationList[stationId];\n\n        let newStnList = JSON.parse(JSON.stringify(stationList)) as StationDict;\n\n        if (parents.length === 2 || children.length === 2) {\n            /**\n             * stn1 - stn2 - stn3\n             *         ^   \\\n             *               stn4\n             */\n            parents.forEach(parId => {\n                newStnList[parId].children = children;\n            });\n            children.forEach(childId => {\n                newStnList[childId].parents = parents;\n            });\n            if (parents.length === 1) {\n                newStnList[parents[0]].branch.right = newStnList[stationId].branch.right;\n            }\n            if (children.length === 1) {\n                newStnList[children[0]].branch.left = newStnList[stationId].branch.left;\n            }\n        } else if (stationList[parents[0]].children.length === 2 && stationList[children[0]].parents.length === 2) {\n            /**\n             * stn1 -     stn2    - stn3\n             *      \\      ^      /\n             *        stn4 - stn5\n             */\n            newStnList = {\n                ...stationList,\n                [parents[0]]: {\n                    ...stationList[parents[0]],\n                    children: stationList[parents[0]].children.filter(id => id !== stationId),\n                    branch: {\n                        ...stationList[parents[0]].branch,\n                        right: [],\n                    },\n                },\n                [children[0]]: {\n                    ...stationList[children[0]],\n                    parents: stationList[children[0]].parents.filter(id => id !== stationId),\n                    branch: {\n                        ...stationList[children[0]].branch,\n                        left: [],\n                    },\n                },\n            };\n        } else {\n            /**\n             * stn1 - stn2\n             *      \\\n             *        stn3 - stn4\n             *         ^\n             */\n\n            // parents have length 1\n            parents.forEach(parId => {\n                var idx = newStnList[parId].children.indexOf(stationId);\n                if (children.length) {\n                    newStnList[parId].children[idx] = children[0];\n                } else {\n                    // Right dest\n                    newStnList[parId].children.splice(idx, 1);\n                }\n\n                if (newStnList[parId].branch.right[1] === stationId) {\n                    newStnList[parId].branch.right[1] = children[0];\n                }\n            });\n\n            // children have length 1\n            children.forEach(childId => {\n                var idx = newStnList[childId].parents.indexOf(stationId);\n                if (parents.length) {\n                    newStnList[childId].parents[idx] = parents[0];\n                } else {\n                    // Left dest\n                    newStnList[childId].parents.splice(idx, 1);\n                }\n\n                if (newStnList[childId].branch.left[1] === stationId) {\n                    newStnList[childId].branch.left[1] = parents[0];\n                }\n            });\n        }\n\n        delete newStnList[stationId];\n        dispatch(setStationsBulk(newStnList));\n    };\n};\n","import { Button, HStack } from '@chakra-ui/react';\nimport { RmgSidePanelFooter } from '@railmapgen/rmg-components';\nimport React, { useState } from 'react';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport RemoveConfirmModal from '../../modal/remove-confirm-modal';\nimport { setCurrentStation } from '../../../redux/param/action';\nimport { useTranslation } from 'react-i18next';\n\nexport default function StationSidePanelFooter() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedStation = useRootSelector(state => state.app.selectedStation);\n\n    const [isRemoveModalOpen, setIsRemoveModalOpen] = useState(false);\n\n    return (\n        <RmgSidePanelFooter>\n            <HStack>\n                <Button size=\"sm\" variant=\"outline\" onClick={() => dispatch(setCurrentStation(selectedStation))}>\n                    {t('StationSidePanel.footer.current')}\n                </Button>\n                <Button size=\"sm\" variant=\"outline\" onClick={() => setIsRemoveModalOpen(true)}>\n                    {t('StationSidePanel.footer.remove')}\n                </Button>\n            </HStack>\n\n            <RemoveConfirmModal isOpen={isRemoveModalOpen} onClose={() => setIsRemoveModalOpen(false)} />\n        </RmgSidePanelFooter>\n    );\n}\n","import { RmgCard, RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport React, { useState } from 'react';\nimport { ColineInfo, InterchangeInfo, Theme } from '../../../constants/constants';\nimport ThemeButton from '../theme-button';\nimport ColourModal from '../../modal/colour-modal/colour-modal';\nimport { HStack, IconButton } from '@chakra-ui/react';\nimport { MdDelete } from 'react-icons/md';\nimport { useTranslation } from 'react-i18next';\n\ninterface ColineCardProps {\n    colineInfo: ColineInfo;\n    routeOptions: Record<string, string>;\n    onUpdateRoute?: (route: string) => void;\n    onUpdateColourInfo?: (colourInfo: InterchangeInfo) => void;\n    onDelete?: (colourIndex: number) => void;\n}\n\nexport default function ColineCard(props: ColineCardProps) {\n    const { colineInfo, routeOptions, onUpdateRoute, onUpdateColourInfo, onDelete } = props;\n    const { t } = useTranslation();\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const fields1: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: 'Route',\n            value: [colineInfo.from, colineInfo.to].join(','),\n            options: routeOptions,\n            onChange: value => onUpdateRoute?.(value as string),\n        },\n    ];\n\n    const fields2: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('Colour'),\n            component: (\n                <ThemeButton\n                    theme={[\n                        colineInfo.colors[0][0],\n                        colineInfo.colors[0][1],\n                        colineInfo.colors[0][2],\n                        colineInfo.colors[0][3],\n                    ]}\n                    onClick={() => setIsModalOpen(true)}\n                />\n            ),\n        },\n        {\n            type: 'input',\n            label: t('Chinese name'),\n            value: colineInfo.colors[0][4],\n            minW: 120,\n            onChange: value =>\n                onUpdateColourInfo?.([\n                    colineInfo.colors[0][0],\n                    colineInfo.colors[0][1],\n                    colineInfo.colors[0][2],\n                    colineInfo.colors[0][3],\n                    value,\n                    colineInfo.colors[0][5],\n                ]),\n        },\n        {\n            type: 'input',\n            label: t('English name'),\n            value: colineInfo.colors[0][5],\n            minW: 120,\n            onChange: value =>\n                onUpdateColourInfo?.([\n                    colineInfo.colors[0][0],\n                    colineInfo.colors[0][1],\n                    colineInfo.colors[0][2],\n                    colineInfo.colors[0][3],\n                    colineInfo.colors[0][4],\n                    value,\n                ]),\n        },\n    ];\n\n    return (\n        <RmgCard direction=\"column\">\n            <RmgFields fields={fields1} minW=\"full\" />\n            <HStack spacing={0.5}>\n                <RmgFields fields={fields2} />\n\n                <IconButton\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    aria-label=\"Delete colour for route\"\n                    onClick={() => onDelete?.(0)}\n                    icon={<MdDelete />}\n                />\n            </HStack>\n\n            <ColourModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                defaultTheme={colineInfo.colors[0].slice(0, 4) as Theme}\n                onUpdate={theme => onUpdateColourInfo?.([...theme, colineInfo.colors[0][4], colineInfo.colors[0][5]])}\n            />\n        </RmgCard>\n    );\n}\n","import React from 'react';\nimport { Button, Heading, VStack } from '@chakra-ui/react';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport {\n    addColine,\n    findAllColinesInBranch,\n    getPossibleCombinations,\n    removeColineColor,\n    updateColine,\n    updateColineColor,\n} from '../../../redux/param/coline-action';\nimport ColineCard from './coline-card';\nimport { MdAdd } from 'react-icons/md';\nimport { MonoColour } from '../../../constants/constants';\nimport { setGlobalAlert } from '../../../redux/app/app-slice';\nimport { useTranslation } from 'react-i18next';\n\nexport default function ColineSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedBranch = useRootSelector(state => state.app.selectedBranch);\n    const { theme, stn_list: stationList } = useRootSelector(state => state.param);\n\n    const colineInfoList = dispatch(findAllColinesInBranch(selectedBranch));\n    const possibleCombinations = dispatch(getPossibleCombinations(selectedBranch));\n\n    const getStationPairDisplayName = (pair: [string, string]) => {\n        return pair.map(id => stationList[id].name.join(' - ')).join(' ~ ');\n    };\n\n    const routeOptions = possibleCombinations.reduce<Record<string, string>>(\n        (acc, cur) => ({\n            ...acc,\n            [cur.join(',')]: getStationPairDisplayName(cur),\n        }),\n        {}\n    );\n\n    const handleAddTrackSharing = () => {\n        console.log(\n            `ColineSection.handleAddTrackSharing():: Adding track sharing to branch ${selectedBranch} with default combination`,\n            possibleCombinations[0]\n        );\n        dispatch(\n            addColine(possibleCombinations[0][0], possibleCombinations[0][1], [\n                [theme[0], '', '#AAAAAA', MonoColour.white, '', ''],\n            ])\n        );\n    };\n\n    const handleUpdateRoute = (colineId: string) => (route: string) => {\n        const [from, to] = route.split(',');\n        console.log(`ColineSection.handleUpdateRoute():: Updating route, colineId=${colineId}, from=${from}, to=${to}`);\n\n        try {\n            dispatch(updateColine(colineId, from, to));\n        } catch {\n            dispatch(setGlobalAlert({ status: 'error', message: 'Unable to draw this share track.' }));\n        }\n    };\n\n    const handleDeleteColour = (colineId: string, colourIndex: number) => {\n        dispatch(removeColineColor(colineId, colourIndex));\n    };\n\n    return (\n        <VStack align=\"flex-start\" p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('BranchSidePanel.coline.title')}\n            </Heading>\n\n            {Object.entries(colineInfoList).map(([id, colineInfo]) => (\n                <ColineCard\n                    key={id}\n                    colineInfo={colineInfo}\n                    routeOptions={routeOptions}\n                    onUpdateRoute={handleUpdateRoute(id)}\n                    onUpdateColourInfo={colourInfo => dispatch(updateColineColor(id, 0, colourInfo))}\n                    onDelete={colourIndex => handleDeleteColour(id, colourIndex)}\n                />\n            ))}\n\n            {(selectedBranch === 0 || Object.keys(colineInfoList).length === 0) && (\n                <Button\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    alignSelf=\"flex-end\"\n                    leftIcon={<MdAdd />}\n                    onClick={handleAddTrackSharing}\n                >\n                    {t('BranchSidePanel.coline.add')}\n                </Button>\n            )}\n        </VStack>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { RmgStyle } from '../../constants/constants';\nimport { isColineBranch } from '../../redux/param/coline-action';\nimport { autoNumbering } from '../../redux/param/action';\n\ninterface AutoNumModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function AutoNumModal(props: AutoNumModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedBranch = useRootSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useRootSelector(state => state.param);\n    const branches = useRootSelector(state => state.helper.branches);\n\n    const [where, setWhere] = useState(selectedBranch);\n    const [from, setFrom] = useState('1');\n    const [maxLength, setMaxLength] = useState('2');\n    const [sort, setSort] = useState<'asc' | 'desc'>('asc');\n\n    useEffect(() => {\n        setWhere(selectedBranch);\n    }, [selectedBranch]);\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('AutoNumModal.where'),\n            value: where,\n            options: {\n                ...branches.reduce(\n                    (acc, cur, idx) => ({\n                        ...acc,\n                        [idx]:\n                            idx === 0\n                                ? t('AutoNumModal.main')\n                                : style !== RmgStyle.SHMetro || !isColineBranch(cur, stationList)\n                                ? t('AutoNumModal.branch') + ' ' + idx\n                                : t('AutoNumModal.external') + ' ' + idx,\n                    }),\n                    {}\n                ),\n            },\n            onChange: value => setWhere(value as number),\n        },\n        {\n            type: 'input',\n            label: t('AutoNumModal.from'),\n            value: from,\n            validator: value => !isNaN(Number(value)),\n            onChange: setFrom,\n            debouncedDelay: 0,\n        },\n        {\n            type: 'input',\n            label: t('AutoNumModal.maxLength'),\n            validator: value => !isNaN(Number(value)),\n            value: maxLength,\n            onChange: setMaxLength,\n            debouncedDelay: 0,\n        },\n        {\n            type: 'select',\n            label: t('AutoNumModal.sort'),\n            value: sort,\n            options: {\n                asc: t('AutoNumModal.asc'),\n                desc: t('AutoNumModal.desc'),\n            },\n            onChange: value => setSort(value as 'asc' | 'desc'),\n        },\n    ];\n\n    const handleSubmit = () => {\n        dispatch(autoNumbering(where, Number(from), Number(maxLength), sort));\n        onClose();\n    };\n\n    const isSubmitDisabled = !from || !maxLength || isNaN(Number(from)) || isNaN(Number(maxLength));\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('AutoNumModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button colorScheme=\"teal\" isDisabled={isSubmitDisabled} onClick={handleSubmit}>\n                        {t('AutoNumModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Box, Button, Flex, Heading } from '@chakra-ui/react';\nimport { MdCached, MdFilter1 } from 'react-icons/md';\nimport AutoNumModal from '../../modal/auto-num-modal';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport { reverseStations } from '../../../redux/param/action';\n\nexport default function ActionSection() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const style = useRootSelector(state => state.param.style);\n\n    const [isAutoNumModalOpen, setIsAutoNumModalOpen] = useState(false);\n\n    return (\n        <Box p={1}>\n            <Heading as=\"h5\" size=\"sm\">\n                {t('BranchSidePanel.action.title')}\n            </Heading>\n\n            <Flex\n                wrap=\"wrap\"\n                sx={{\n                    p: 1,\n\n                    '&> *': {\n                        flexShrink: 0,\n                        flexBasis: '100%',\n\n                        '&:not(:first-child)': {\n                            marginTop: 2,\n                        },\n                    },\n                }}\n            >\n                {style === RmgStyle.GZMTR && (\n                    <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        leftIcon={<MdFilter1 />}\n                        alignSelf=\"flex-end\"\n                        onClick={() => setIsAutoNumModalOpen(true)}\n                    >\n                        {t('BranchSidePanel.action.autoNum')}\n                    </Button>\n                )}\n\n                <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    leftIcon={<MdCached />}\n                    alignSelf=\"flex-end\"\n                    onClick={() => dispatch(reverseStations(style === RmgStyle.SHMetro))}\n                >\n                    {style === RmgStyle.SHMetro\n                        ? t('BranchSidePanel.action.flip')\n                        : t('BranchSidePanel.action.reverse')}\n                </Button>\n            </Flex>\n\n            <AutoNumModal isOpen={isAutoNumModalOpen} onClose={() => setIsAutoNumModalOpen(false)} />\n        </Box>\n    );\n}\n","import { RmgSidePanelBody } from '@railmapgen/rmg-components';\nimport React from 'react';\nimport ColineSection from './coline-section';\nimport { Divider } from '@chakra-ui/react';\nimport ActionSection from './action-section';\nimport { useRootSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport { isColineBranch } from '../../../redux/param/coline-action';\n\nexport default function BranchSidePanel() {\n    const selectedBranch = useRootSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useRootSelector(state => state.param);\n    const branches = useRootSelector(state => state.helper.branches);\n\n    return (\n        <RmgSidePanelBody>\n            {style === RmgStyle.SHMetro &&\n                (selectedBranch === 0 || isColineBranch(branches[selectedBranch], stationList)) && (\n                    <>\n                        <ColineSection />\n                        <Divider />\n                    </>\n                )}\n\n            <ActionSection />\n        </RmgSidePanelBody>\n    );\n}\n","import React, { ReactNode } from 'react';\nimport { useRootSelector } from '../../redux';\nimport { setSidePanelMode } from '../../redux/app/app-slice';\nimport { useDispatch } from 'react-redux';\nimport { SidePanelMode } from '../../constants/constants';\nimport StationSidePanel from './station-side-panel/station-side-panel';\nimport StyleSidePanel from './style-side-panel/style-side-panel';\nimport { RmgMultiLineString, RmgSidePanel, RmgSidePanelHeader } from '@railmapgen/rmg-components';\nimport StationSidePanelFooter from './station-side-panel/station-side-panel-footer';\nimport BranchSidePanel from './branch-side-panel/branch-side-panel';\nimport { useTranslation } from 'react-i18next';\n\nconst SIDE_PANEL_WIDTH = 375;\n\nexport default function SidePanel() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const { sidePanelMode, selectedStation } = useRootSelector(state => state.app);\n    const name = useRootSelector(state => state.param.stn_list[selectedStation]?.name);\n\n    const mode: Record<SidePanelMode, { header: ReactNode; body?: ReactNode; footer?: ReactNode }> = {\n        STATION: {\n            header: <RmgMultiLineString text={name?.join(' - ') || ''} />,\n            body: <StationSidePanel />,\n            footer: <StationSidePanelFooter />,\n        },\n        STYLE: { header: t('StyleSidePanel.header'), body: <StyleSidePanel /> },\n        BRANCH: { header: t('BranchSidePanel.header'), body: <BranchSidePanel /> },\n        CLOSE: { header: 'Close' },\n    };\n\n    const handleClose = () => {\n        dispatch(setSidePanelMode(SidePanelMode.CLOSE));\n    };\n\n    return (\n        <RmgSidePanel isOpen={sidePanelMode !== SidePanelMode.CLOSE} width={SIDE_PANEL_WIDTH} header=\"Dummy header\">\n            <RmgSidePanelHeader onClose={handleClose}>{mode[sidePanelMode].header}</RmgSidePanelHeader>\n            {mode[sidePanelMode]?.body}\n            {mode[sidePanelMode]?.footer}\n        </RmgSidePanel>\n    );\n}\n","export const downloadAs = (filename: string, type: string, data: any) => {\n    const blob = new Blob([data], { type });\n    downloadBlobAs(filename, blob);\n};\n\nexport const downloadBlobAs = (filename: string, blob: Blob) => {\n    const url = window.URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n};\n\nexport const readFileAsText = (file: File) => {\n    return new Promise((resolve: (text: string) => void) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve(reader.result as string);\n        reader.readAsText(file);\n    });\n};\n\nexport const isSafari = () => {\n    return navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');\n};\n","import { CanvasType, RmgStyle } from '../constants/constants';\nimport { isSafari } from './utils';\n\nexport const cloneSvgCanvas = async (\n    canvas: CanvasType,\n    rmgStyle: RmgStyle,\n    isTransparent?: boolean,\n    isShowBorder?: boolean,\n    scale?: number\n): Promise<SVGSVGElement> => {\n    let [, thisSVGHeight] = ['--rmg-svg-width', '--rmg-svg-height']\n        .map(\n            key =>\n                (document.querySelector(`svg#${canvas}`) as SVGSVGElement).style.getPropertyValue(key).match(/\\d+/g)![0]\n        )\n        .map(Number);\n\n    const elem = document.querySelector(`svg#${canvas}`)!.cloneNode(true) as SVGSVGElement;\n    // elem.setAttribute('width', (thisSVGWidth * scaleFactor).toString());\n    elem.setAttribute('height', ((thisSVGHeight * (scale || 100)) / 100).toString());\n    elem.style.setProperty('all', 'initial');\n\n    ['share']\n        .map(tag =>\n            [\n                ...(\n                    [...document.querySelectorAll('link')].filter(l => l.id === 'css_' + tag)[0]?.sheet as CSSStyleSheet\n                ).cssRules,\n            ]\n                .map(rule => rule.cssText)\n                .join(' ')\n        )\n        .forEach(txt => {\n            let s = document.createElement('style');\n            s.textContent = txt;\n            elem.prepend(s);\n        });\n\n    elem.querySelector('rect#canvas-border')?.setAttribute('stroke', isShowBorder ? 'black' : 'none');\n    elem.querySelector('rect#canvas-bg')?.setAttribute('fill', isTransparent ? 'none' : 'white');\n\n    if (rmgStyle === RmgStyle.MTR) {\n        try {\n            const uris = await getBase64FontFace(elem);\n            const s = document.createElement('style');\n            s.textContent = uris.join('\\n');\n            elem.prepend(s);\n        } catch (err) {\n            alert('Failed to fonts. Fonts in the exported PNG will be missing.');\n            console.error(err);\n        }\n    }\n\n    return elem;\n};\n\n/**\n * Convert a `Blob` into Base64 data URL.\n * @param blob\n */\nconst readBlobAsDataURL = (blob: Blob): Promise<string> => {\n    return new Promise((resolve: (value: string) => void) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve(reader.result as string);\n        reader.readAsDataURL(blob);\n    });\n};\n\nconst matchCssRuleByFontFace = (rules: CSSFontFaceRule[], font: FontFace): CSSFontFaceRule | undefined => {\n    return rules.find(rule => {\n        const cssStyle = rule.style as any;\n        return (\n            cssStyle.fontFamily.replace(/^\"(.+)\"$/, '$1') === font.family && cssStyle.unicodeRange === font.unicodeRange\n        );\n    });\n};\n\nexport const getBase64FontFace = async (svgEl: SVGSVGElement): Promise<string[]> => {\n    const uniqueCharacters = Array.from(\n        new Set(\n            [\n                ...svgEl.querySelectorAll<SVGElement>('.rmg-name__zh'),\n                ...svgEl.querySelectorAll<SVGElement>('.rmg-name__en'),\n            ]\n                .map(el => el.innerHTML)\n                .join('')\n                .replace(/[\\s]/g, '')\n        )\n    ).join('');\n\n    const fontFaceList = await document.fonts.load('80px GenYoMin TW, Vegur', uniqueCharacters);\n    const cssRules = Array.from(\n        (document.querySelector<HTMLLinkElement>('link#css_share')!.sheet!.cssRules[0] as CSSImportRule).styleSheet\n            .cssRules\n    ) as CSSFontFaceRule[];\n    const distinctCssRules = fontFaceList.reduce<CSSFontFaceRule[]>((acc, cur) => {\n        const matchedRule = matchCssRuleByFontFace(cssRules, cur);\n        if (matchedRule) {\n            const existence = acc.find(rule => {\n                const ruleStyle = rule.style as any;\n                const matchedStyle = matchedRule.style as any;\n                return (\n                    ruleStyle.fontFamily === matchedStyle.fontFamily &&\n                    ruleStyle.unicodeRange === matchedStyle.unicodeRange\n                );\n            });\n            return existence ? acc : acc.concat(matchedRule);\n        } else {\n            return acc;\n        }\n    }, []);\n\n    return await Promise.all(\n        distinctCssRules.map(async cssRule => {\n            try {\n                const fontResp = await fetch(getAbsoluteUrl(cssRule));\n                const fontDataUri = await readBlobAsDataURL(await fontResp.blob());\n                return cssRule.cssText.replace(/src:[ \\w('\",\\-:/.)]+;/g, `src: url('${fontDataUri}'); `);\n            } catch (err) {\n                console.error(err);\n                return '';\n            }\n        })\n    );\n};\n\nexport const getAbsoluteUrl = (cssRule: CSSFontFaceRule) => {\n    const ruleStyleSrc = (cssRule.style as any).src;\n    return isSafari()\n        ? ruleStyleSrc.replace(/^url\\(\"([\\S]+)\"\\).*$/, '$1')\n        : process.env.PUBLIC_URL + '/styles/' + ruleStyleSrc.match(/^url\\(\"([\\S*]+)\"\\)/)?.[1];\n};\n\nexport const test = async (svgEl: SVGSVGElement, scale: number, isWait: boolean): Promise<Blob> => {\n    let svgW = svgEl.viewBox.baseVal.width;\n    let svgH = svgEl.viewBox.baseVal.height;\n\n    // svgEl.removeAttribute('height');\n\n    let canvas = document.querySelectorAll('canvas')[0];\n    canvas.width = Number(svgW) * window.devicePixelRatio * scale;\n    canvas.height = Number(svgH) * window.devicePixelRatio * scale;\n\n    svgEl.setAttribute('width', canvas.width.toString());\n    svgEl.setAttribute('height', canvas.height.toString());\n\n    let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // bypass Chrome min font size (to be improved)\n\n    svgEl.querySelectorAll('.rmg-name__en.rmg-name__mtr--station').forEach(el => el.setAttribute('font-size', '11px'));\n\n    svgEl\n        .querySelectorAll('.rmg-name__en.rmg-name__gzmtr--next2-dest')\n        .forEach(el => el.setAttribute('font-size', '8.5px'));\n\n    // svgEl\n    //     .querySelectorAll('text:not([font-size]), tspan:not([font-size])')\n    //     .forEach((el) => el.setAttribute('font-size', window.getComputedStyle(el).fontSize));\n\n    svgEl.querySelectorAll('text, tspan').forEach(el => {\n        let elStyle = window.getComputedStyle(el);\n        el.setAttribute('font-family', elStyle.fontFamily);\n        el.setAttribute('fill', elStyle.fill);\n        el.setAttribute('dominant-baseline', elStyle.dominantBaseline);\n        el.setAttribute('text-anchor', elStyle.textAnchor || '');\n        // el.removeAttribute('class');\n    });\n\n    // https://stackoverflow.com/questions/46399223/async-await-in-image-loading/52851789\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n            setTimeout(\n                () => {\n                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n                    canvas.toBlob(blob => resolve(blob!), 'image/png');\n                },\n                isWait ? 2000 : 0\n            );\n        };\n        img.onerror = reject;\n        img.src = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgEl.outerHTML)));\n    });\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    HStack,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { canvasConfig, CanvasType, RmgStyle } from '../../constants/constants';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport JSZip from 'jszip';\nimport { setCurrentStation } from '../../redux/param/action';\nimport { cloneSvgCanvas, test } from '../../util/export-utils';\nimport { downloadAs, downloadBlobAs, isSafari } from '../../util/utils';\nimport { useTranslation } from 'react-i18next';\nimport { waitForMs } from '../../utils';\nimport { setLoadingProgress, stopLoading } from '../../redux/app/app-slice';\n\ninterface DownloadModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function DownloadModal(props: DownloadModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n\n    const dispatch = useRootDispatch();\n\n    const [canvasToDownload, setCanvasToDownload] = useState('');\n    const [isTransparent, setIsTransparent] = useState(false);\n    const [isShowBorder, setIsShowBorder] = useState(false);\n    const [scale, setScale] = useState(100);\n    const [format, setFormat] = useState('png');\n\n    const canvasToShow = useRootSelector(state => state.app.canvasToShow);\n    const {\n        style,\n        stn_list: stationList,\n        current_stn_idx: currentStationId,\n        line_name: lineName,\n    } = useRootSelector(state => state.param);\n\n    useEffect(() => {\n        // reset canvas to download if on-screen canvas changed\n        if (canvasToShow !== 'all' && canvasToDownload !== '' && canvasToShow !== canvasToDownload) {\n            setCanvasToDownload('');\n        }\n    }, [canvasToShow]);\n\n    const canvasOptions = canvasConfig[style].reduce<Record<string, string>>(\n        (acc, cur) => {\n            if (canvasToShow === 'all' || cur === canvasToShow) {\n                return { ...acc, [cur]: t('CanvasType.' + cur) };\n            } else {\n                return { ...acc };\n            }\n        },\n        { '': t('DownloadModal.pleaseSelect') }\n    );\n\n    const scaleOptions = [25, 33, 50, 67, 75, 80, 90, 100, 110, 125, 150, 175, 200, 250, 300, 400, 500].reduce<\n        Record<number, string>\n    >(\n        (acc, cur) => ({\n            ...acc,\n            [cur]: `${cur}%`,\n        }),\n        {}\n    );\n\n    const formatOptions = {\n        png: t('DownloadModal.png'),\n        svg: t('DownloadModal.svg'),\n    };\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('DownloadModal.canvas'),\n            value: canvasToDownload,\n            options: canvasOptions,\n            disabledOptions: [''],\n            onChange: value => setCanvasToDownload(value as CanvasType),\n            minW: 'full',\n        },\n        {\n            type: 'switch',\n            label: t('DownloadModal.transparent'),\n            isChecked: isTransparent,\n            onChange: setIsTransparent,\n            oneLine: true,\n            minW: 'full',\n        },\n        {\n            type: 'switch',\n            label: t('DownloadModal.showBorder'),\n            isChecked: isShowBorder,\n            onChange: setIsShowBorder,\n            oneLine: true,\n            minW: 'full',\n        },\n        {\n            type: 'select',\n            label: t('DownloadModal.scale'),\n            value: scale,\n            options: scaleOptions,\n            onChange: value => setScale(value as number),\n        },\n        {\n            type: 'select',\n            label: t('DownloadModal.format'),\n            value: format,\n            options: formatOptions,\n            onChange: value => setFormat(value as string),\n        },\n    ];\n\n    const handleDownload = async (option: 'current' | 'all') => {\n        dispatch(setLoadingProgress(0));\n        const stationIdListToDownload =\n            option === 'current'\n                ? [currentStationId]\n                : Object.keys(stationList).filter(id => !['linestart', 'lineend'].includes(id));\n\n        const zip = new JSZip();\n\n        for (let index in stationIdListToDownload) {\n            dispatch(setLoadingProgress(((Number(index) + 1) / stationIdListToDownload.length) * 100));\n\n            const stnId = stationIdListToDownload[index];\n            // wait for svg elements updated for station A before we dispatch the current station to B.\n            dispatch(setCurrentStation(stnId));\n            await waitForMs(500);\n\n            const elem = await cloneSvgCanvas(\n                canvasToDownload as CanvasType,\n                style,\n                isTransparent,\n                isShowBorder,\n                scale\n            );\n\n            // append svg to the document so the bbox will be loaded correctly\n            // (but not for gzmtr and have no idea why)\n            document.body.appendChild(elem);\n\n            const filename = `rmg.${stnId}.${stationList[stnId].name[0]}.${stationList[stnId].name[1]}`.replaceAll(\n                ' ',\n                '_'\n            );\n            if (format === 'png') {\n                const isWait = isSafari() && index === '0';\n                const blob = await test(elem, scale / 100, isWait);\n\n                if (stationIdListToDownload.length > 1) {\n                    // batch download and split base64 for this\n                    // https://stackoverflow.com/questions/31305485/export-resized-image-in-canvas-to-new-jszip-package\n                    zip.file(`${filename}.png`, blob);\n                } else {\n                    downloadBlobAs(`${filename}.png`, blob);\n                }\n            } else if (format === 'svg') {\n                elem.removeAttribute('height');\n                const data = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(elem.outerHTML)));\n\n                if (stationIdListToDownload.length > 1) {\n                    zip.file(`${filename}.svg`, data.split('base64,')[1], { base64: true });\n                } else {\n                    downloadAs(filename + '.svg', 'image/svg+xml', elem.outerHTML);\n                }\n            }\n\n            // don't forget to release it after use\n            document.body.removeChild(elem);\n        }\n\n        // generate the zip for batch download\n        if (stationIdListToDownload.length > 1) {\n            const zipData = await zip.generateAsync({ type: 'blob' });\n            const filename = `rmg.${lineName[0]}.${lineName[1]}.zip`.replaceAll(' ', '_');\n            downloadBlobAs(filename, zipData);\n        }\n\n        // revert to original station\n        dispatch(setCurrentStation(currentStationId));\n        dispatch(stopLoading());\n        onClose();\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('DownloadModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <HStack>\n                        <Button\n                            colorScheme=\"teal\"\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handleDownload('current')}\n                            disabled={!canvasToDownload}\n                        >\n                            {t('DownloadModal.downloadOne')}\n                        </Button>\n                        {style !== RmgStyle.GZMTR && (\n                            <Button\n                                colorScheme=\"teal\"\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handleDownload('all')}\n                                disabled={!canvasToDownload}\n                            >\n                                {t('DownloadModal.downloadAll')}\n                            </Button>\n                        )}\n                    </HStack>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useState } from 'react';\nimport { Button, Menu, MenuButton, MenuList, MenuItem } from '@chakra-ui/react';\nimport { MdExpandMore } from 'react-icons/md';\nimport { downloadAs } from '../../util/utils';\nimport { useRootSelector } from '../../redux';\nimport { useTranslation } from 'react-i18next';\nimport DownloadModal from '../modal/download-modal';\n\nexport default function DownloadActions() {\n    const { t } = useTranslation();\n\n    const [isDownloadModalOpen, setIsDownloadModalOpen] = useState(false);\n\n    const param = useRootSelector(state => state.param);\n\n    const handleDownloadJson = () => {\n        downloadAs(`RMG_${new Date().valueOf()}.json`, 'application/json', JSON.stringify(param));\n    };\n\n    return (\n        <Menu>\n            <MenuButton as={Button} variant=\"ghost\" size=\"sm\" rightIcon={<MdExpandMore />}>\n                {t('DownloadActions.downloads')}\n            </MenuButton>\n            <MenuList>\n                <MenuItem onClick={handleDownloadJson}>{t('DownloadActions.configFile')}</MenuItem>\n                <MenuItem onClick={() => setIsDownloadModalOpen(true)}>{t('DownloadActions.images')}</MenuItem>\n            </MenuList>\n\n            <DownloadModal isOpen={isDownloadModalOpen} onClose={() => setIsDownloadModalOpen(false)} />\n        </Menu>\n    );\n}\n","import React, { RefObject } from 'react';\nimport {\n    AlertDialog,\n    AlertDialogBody,\n    AlertDialogContent,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogOverlay,\n    Button,\n} from '@chakra-ui/react';\nimport { MonoColour, RMGParam } from '../../constants/constants';\nimport { RmgLineBadge } from '@railmapgen/rmg-components';\nimport { useTranslation } from 'react-i18next';\n\ninterface UploadConfirmModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    cancelRef: RefObject<HTMLButtonElement>;\n    uploadedParam?: RMGParam;\n    onOpenParam: (param: Record<string, any>) => void;\n}\n\nexport default function UploadConfirmModal(props: UploadConfirmModalProps) {\n    const { isOpen, onClose, cancelRef, uploadedParam, onOpenParam } = props;\n    const { t } = useTranslation();\n\n    const handleConfirm = () => {\n        if (uploadedParam) {\n            onOpenParam(uploadedParam);\n        }\n        onClose();\n    };\n\n    return (\n        <AlertDialog isOpen={isOpen} leastDestructiveRef={cancelRef} onClose={onClose}>\n            <AlertDialogOverlay>\n                <AlertDialogContent>\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                        {t('UploadConfirmModal.title')}\n                    </AlertDialogHeader>\n\n                    <AlertDialogBody>\n                        {t('UploadConfirmModal.message1')}\n                        <RmgLineBadge\n                            name={uploadedParam?.line_name?.join(' ') || ''}\n                            fg={uploadedParam?.theme?.[3] || MonoColour.white}\n                            bg={uploadedParam?.theme?.[2] || '#AAAAAA'}\n                        />\n                        {t('UploadConfirmModal.message2') +\n                            (uploadedParam ? Object.keys(uploadedParam.stn_list).length - 2 : 0) +\n                            t('UploadConfirmModal.message3')}\n                    </AlertDialogBody>\n\n                    <AlertDialogFooter>\n                        <Button ref={cancelRef} onClick={onClose}>\n                            {t('UploadConfirmModal.cancel')}\n                        </Button>\n                        <Button colorScheme=\"teal\" onClick={handleConfirm} ml={3}>\n                            {t('UploadConfirmModal.confirm')}\n                        </Button>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialogOverlay>\n        </AlertDialog>\n    );\n}\n","import React from 'react';\nimport {\n    Button,\n    Flex,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalHeader,\n    ModalOverlay,\n    Tab,\n    TabList,\n    TabPanel,\n    TabPanels,\n    Tabs,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { translateText } from '../../i18n/config';\nimport { useRootDispatch } from '../../redux';\nimport { companyConfig, templateList } from '@railmapgen/rmg-templates-resources';\nimport { startLoading } from '../../redux/app/app-slice';\n\ninterface TemplateModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onOpenParam: (param: Record<string, any>) => void;\n}\n\nexport default function TemplateModal(props: TemplateModalProps) {\n    const { isOpen, onClose, onOpenParam } = props;\n\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const handleSelect = async (company: string, filename: string) => {\n        dispatch(startLoading());\n        const module = await import(\n            /* webpackChunkName: \"templates\" */ `@railmapgen/rmg-templates-resources/templates/${company}/${filename}.json`\n        );\n        onOpenParam(module.default);\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('TemplateModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <Tabs isLazy size=\"sm\" orientation=\"vertical\">\n                        <TabList maxW={150}>\n                            {companyConfig.map(company => (\n                                <Tab key={company.id}>{translateText(company.name)}</Tab>\n                            ))}\n                        </TabList>\n\n                        <TabPanels maxW={250}>\n                            {Object.entries(templateList)\n                                .sort(\n                                    (a, b) =>\n                                        companyConfig.findIndex(c => c.id === a[0]) -\n                                        companyConfig.findIndex(c => c.id === b[0])\n                                )\n                                .map(([company, templates]) => (\n                                    <TabPanel key={company} as={Flex} flexDirection=\"column\" py={0} px={1}>\n                                        {templates.map(template => (\n                                            <Button\n                                                key={template.filename}\n                                                variant=\"ghost\"\n                                                size=\"sm\"\n                                                justifyContent=\"flex-start\"\n                                                overflow=\"hidden\"\n                                                onClick={() => handleSelect(company, template.filename)}\n                                            >\n                                                {translateText(template.name)}\n                                            </Button>\n                                        ))}\n                                    </TabPanel>\n                                ))}\n                        </TabPanels>\n                    </Tabs>\n                </ModalBody>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { ChangeEvent, useRef, useState } from 'react';\nimport { Button, Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/react';\nimport { MdExpandMore, MdInsertDriveFile, MdNoteAdd, MdUpload } from 'react-icons/md';\nimport { useTranslation } from 'react-i18next';\nimport { updateParam } from '../../utils';\nimport { readFileAsText } from '../../util/utils';\nimport UploadConfirmModal from '../modal/upload-confirm-modal';\nimport { setGlobalAlert } from '../../redux/app/app-slice';\nimport { LanguageCode, RMGParam } from '../../constants/constants';\nimport TemplateModal from '../modal/template-modal';\nimport { openFromNewParam } from '../../redux/param/open-new-action';\nimport { initParam } from '../../redux/param/util';\nimport { useRootDispatch, useRootSelector } from '../../redux';\n\nexport default function OpenActions() {\n    const { t, i18n } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const style = useRootSelector(state => state.param.style);\n\n    const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n    const [isTemplateModalOpen, setIsTemplateModalOpen] = useState(false);\n    const [uploadedParam, setUploadedParam] = useState<RMGParam | undefined>(undefined);\n\n    const uploadModalCloseRef = useRef<HTMLButtonElement | null>(null);\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n\n    const handleUpload = async (event: ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        console.log('OpenActions.handleUpload():: received file', file);\n\n        if (file?.type !== 'application/json') {\n            dispatch(setGlobalAlert({ status: 'error', message: t('OpenActions.invalidType') }));\n        } else {\n            try {\n                const paramStr = await readFileAsText(file);\n                const updatedParam = updateParam(JSON.parse(paramStr));\n                setUploadedParam(updatedParam as RMGParam);\n                setIsUploadModalOpen(true);\n            } catch (err) {\n                dispatch(setGlobalAlert({ status: 'error', message: t('OpenActions.unknownError') }));\n                console.error(\n                    'OpenActions.handleUpload():: Unknown error occurred while parsing the uploaded file',\n                    err\n                );\n            }\n        }\n\n        // clear field for next upload\n        event.target.value = '';\n    };\n\n    const handleOpenParam = (param: Record<string, any>) => {\n        dispatch(openFromNewParam(param));\n    };\n\n    return (\n        <Menu>\n            <MenuButton as={Button} variant=\"ghost\" size=\"sm\" rightIcon={<MdExpandMore />}>\n                {t('OpenActions.openFrom')}\n            </MenuButton>\n            <MenuList>\n                <MenuItem\n                    icon={<MdNoteAdd />}\n                    onClick={() => handleOpenParam(initParam(style, i18n.language as LanguageCode))}\n                >\n                    {t('Empty template')}\n                </MenuItem>\n\n                <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    accept=\".json\"\n                    hidden={true}\n                    onChange={handleUpload}\n                    data-testid=\"file-upload\"\n                />\n                <MenuItem icon={<MdUpload />} onClick={() => fileInputRef?.current?.click()}>\n                    {t('OpenActions.upload')}\n                </MenuItem>\n\n                <MenuItem icon={<MdInsertDriveFile />} onClick={() => setIsTemplateModalOpen(true)}>\n                    {t('OpenActions.templates')}\n                </MenuItem>\n            </MenuList>\n\n            <UploadConfirmModal\n                isOpen={isUploadModalOpen}\n                onClose={() => setIsUploadModalOpen(false)}\n                cancelRef={uploadModalCloseRef}\n                uploadedParam={uploadedParam}\n                onOpenParam={handleOpenParam}\n            />\n\n            <TemplateModal\n                isOpen={isTemplateModalOpen}\n                onClose={() => setIsTemplateModalOpen(false)}\n                onOpenParam={handleOpenParam}\n            />\n        </Menu>\n    );\n}\n","import { RootDispatch, RootState } from '../index';\nimport { updateParam } from '../../utils';\nimport { AllCanvas, canvasConfig, RMGParam, SidePanelMode } from '../../constants/constants';\nimport { selectCanvas, setSelectedStation, setSidePanelMode, stopLoading } from '../app/app-slice';\nimport { reRenderApp } from '../../index';\n\nexport const openFromNewParam = (param: Record<string, any>) => {\n    return async (dispatch: RootDispatch, getState: () => RootState) => {\n        const updatedParam = updateParam(param) as RMGParam;\n        await window.rmgStorage.writeFile('rmgParam', JSON.stringify(updatedParam));\n\n        // close side panel, reset selection\n        dispatch(setSidePanelMode(SidePanelMode.CLOSE));\n        dispatch(setSelectedStation('linestart'));\n\n        // reset to AllCanvas if the current canvas is not supported in the new style\n        const canvasToShow = getState().app.canvasToShow;\n        const canvas = canvasConfig[updatedParam.style].some(c => c === canvasToShow) ? canvasToShow : AllCanvas;\n        await dispatch(selectCanvas(canvas));\n        reRenderApp(updatedParam);\n        dispatch(stopLoading());\n    };\n};\n","import React from 'react';\nimport { HStack, Button } from '@chakra-ui/react';\nimport DownloadActions from './download-actions';\nimport { MdPalette } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { SidePanelMode } from '../../constants/constants';\nimport { setSidePanelMode } from '../../redux/app/app-slice';\nimport { useTranslation } from 'react-i18next';\nimport OpenActions from './open-actions';\n\nexport default function HeaderActions() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    return (\n        <HStack ml=\"auto\">\n            <DownloadActions />\n\n            <OpenActions />\n\n            <Button\n                variant=\"solid\"\n                size=\"sm\"\n                colorScheme=\"teal\"\n                leftIcon={<MdPalette />}\n                onClick={() => dispatch(setSidePanelMode(SidePanelMode.STYLE))}\n            >\n                {t('HeaderActions.editStyle')}\n            </Button>\n        </HStack>\n    );\n}\n","import React from 'react';\nimport HeaderActions from './header-actions';\nimport RmgButtonGroup from '../common/rmg-button-group';\nimport { selectCanvas, zoomToScale } from '../../redux/app/app-slice';\nimport { AllCanvas, canvasConfig, CanvasType } from '../../constants/constants';\nimport { useTranslation } from 'react-i18next';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { RmgFields, RmgFieldsField, RmgPageHeader } from '@railmapgen/rmg-components';\nimport { MdZoomIn, MdZoomOut } from 'react-icons/md';\n\nexport default function PageHeader() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const { canvasToShow, canvasScale } = useRootSelector(state => state.app);\n    const style = useRootSelector(state => state.param.style);\n\n    const canvasSelections = [AllCanvas, ...canvasConfig[style]].map(canvas => ({\n        label: t('CanvasType.' + canvas),\n        value: canvas,\n    }));\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'custom',\n            label: t('Canvas to show'),\n            component: (\n                <RmgButtonGroup\n                    selections={canvasSelections}\n                    defaultValue={canvasToShow}\n                    onChange={canvas => dispatch(selectCanvas(canvas as CanvasType | typeof AllCanvas))}\n                />\n            ),\n        },\n        {\n            type: 'slider',\n            label: t('Canvas scale'),\n            value: canvasScale,\n            min: 0.1,\n            max: 2,\n            step: 0.1,\n            onChange: value => dispatch(zoomToScale(value)),\n            leftIcon: <MdZoomOut />,\n            rightIcon: <MdZoomIn />,\n            minW: 160,\n        },\n    ];\n\n    return (\n        <RmgPageHeader>\n            <RmgFields fields={fields} />\n\n            <HeaderActions />\n        </RmgPageHeader>\n    );\n}\n","import packageJson from '../../package.json';\n\nexport enum Environments {\n    DEV = 'DEV',\n    UAT = 'UAT',\n    PRD = 'PRD',\n}\n\nexport const getEnvironment = () => {\n    if (window.location.hostname === 'localhost') {\n        return Environments.DEV;\n    } else if (window.location.hostname.includes('uat')) {\n        return Environments.UAT;\n    } else {\n        return Environments.PRD;\n    }\n};\n\nexport const getVersion = () => {\n    return packageJson.version;\n};\n","import React from 'react';\nimport {\n    Avatar,\n    Button,\n    Flex,\n    Heading,\n    Icon,\n    Link,\n    ListItem,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    OrderedList,\n    Tag,\n    TagLabel,\n    Text,\n    VStack,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { MdOpenInNew } from 'react-icons/md';\n\nconst CONTRIBUTORS_ADMINS = ['52PD', 'linchen1965'];\nconst CONTRIBUTORS_LIST = [\n    'jealousyge',\n    'Jay20081229',\n    'clearng-kly',\n    'Dingdong2334',\n    'C1P918R',\n    'AnDanJuneUnderline',\n    'GrassRabbit1410',\n    'xiany114514',\n    'Andy1782010',\n    'Thomastzc',\n    'Tianxiu11111',\n];\n\ninterface HelpModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function HelpModal(props: HelpModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose} size=\"xl\" scrollBehavior=\"inside\">\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('Help and support')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <Heading as=\"h5\" size=\"sm\" mb={2}>\n                        {t('Terms and conditions')}\n                    </Heading>\n\n                    <OrderedList>\n                        <ListItem>\n                            The layout of the elements on the signage or rail map, is designed by{' '}\n                            <Link color=\"teal.500\" href=\"https://www.gzmtr.com/\" isExternal={true}>\n                                Guangzhou Metro Group <Icon as={MdOpenInNew} />\n                            </Link>\n                            {', '}\n                            <Link color=\"teal.500\" href=\"https://www.mtr.com.hk/\" isExternal={true}>\n                                MTR Corporation <Icon as={MdOpenInNew} />\n                            </Link>\n                            {' or '}\n                            <Link color=\"teal.500\" href=\"https://www.shmetro.com/\" isExternal={true}>\n                                Shanghai Shentong Metro Group <Icon as={MdOpenInNew} />\n                            </Link>\n                            , depending on your selection. You shall grant appropriate permit or license from the\n                            relevant company above before using the generated images for commercial purposes, if it is\n                            required to do so.\n                            <br />\n                            標誌版或路線圖之元素之佈局，基於你所選擇之風格，為\n                            <Link color=\"teal.500\" href=\"https://www.gzmtr.com/\" isExternal={true}>\n                                廣州地鐵集團公司 <Icon as={MdOpenInNew} />\n                            </Link>\n                            ，\n                            <Link color=\"teal.500\" href=\"https://www.mtr.com.hk/\" isExternal={true}>\n                                港鐵公司 <Icon as={MdOpenInNew} />\n                            </Link>\n                            或\n                            <Link color=\"teal.500\" href=\"https://www.shmetro.com/\" isExternal={true}>\n                                上海申通地鐵集團 <Icon as={MdOpenInNew} />\n                            </Link>\n                            所設計。在產生之圖像用作商業用途前，你應向相關公司取得適當之許可證或授權。\n                        </ListItem>\n                        <ListItem>\n                            The elements including shapes and lines on the image are drawn by{' '}\n                            <Link color=\"teal.500\" href=\"https://www.github.com/wongchito\" isExternal={true}>\n                                Chito Wong <Icon as={MdOpenInNew} />\n                            </Link>\n                            {' and '}\n                            <Link color=\"teal.500\" href=\"https://www.github.com/thekingofcity\" isExternal={true}>\n                                thekingofcity <Icon as={MdOpenInNew} />\n                            </Link>\n                            , based on the design standards or rules of the companies listed above. You may use them for\n                            any purposes, but it is recommended to state the name and the link of software alongside.\n                            <br />\n                            圖像之元素，包括圖形及線條，均由\n                            <Link color=\"teal.500\" href=\"https://www.github.com/wongchito\" isExternal={true}>\n                                Chito Wong <Icon as={MdOpenInNew} />\n                            </Link>\n                            及\n                            <Link color=\"teal.500\" href=\"https://www.github.com/thekingofcity\" isExternal={true}>\n                                thekingofcity <Icon as={MdOpenInNew} />\n                            </Link>\n                            基於上述公司之設計標準或準則繪製。你可將其用於任何目的，但我們建議你於使用同時附以我們之名字以及該軟件之連結。\n                        </ListItem>\n                        <ListItem>\n                            Due to copyright, licensing and other legal restrictions, Rail Map Generator uses{' '}\n                            <Link color=\"teal.500\" href=\"https://github.com/ButTaiwan/genyo-font\" isExternal={true}>\n                                GenYoMin provided by ButTaiwan <Icon as={MdOpenInNew} />\n                            </Link>\n                            , and Vegur instead of MTRSung and Myriad Pro respectively to display and generate MTR-style\n                            signage. You shall grant appropriate permit or license from the manufacturers before using\n                            those generated images for commercial purposes.\n                            <br />\n                            由於著作權及其他法律限制，鐵路路線圖產生器使用\n                            <Link color=\"teal.500\" href=\"https://github.com/ButTaiwan/genyo-font\" isExternal={true}>\n                                由ButTaiwan提供之源樣明體 <Icon as={MdOpenInNew} />\n                            </Link>\n                            ，以及Vegur，以代替港鐵樣式標誌牌所使用之地鐵宋及Myriad\n                            Pro。在產生之圖像用作商業用途前，你應向字型生產廠商取得適當之許可證或授權。\n                        </ListItem>\n                        <ListItem>\n                            The exported images in PNG or SVG format may be modified, published, or used for other\n                            purposes, under the conditions above.\n                            <br />\n                            輸出之PNG或SVG種類之圖像可基於上述條款，用於修改、發行或其他用途。\n                        </ListItem>\n                        <ListItem>\n                            All flag emojis shown on Windows platforms are designed by{' '}\n                            <Link color=\"teal.500\" href=\"https://openmoji.org/\" isExternal={true}>\n                                OpenMoji <Icon as={MdOpenInNew} />\n                            </Link>{' '}\n                            – the open-source emoji and icon project. License:\n                            <Link\n                                color=\"teal.500\"\n                                href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n                                isExternal={true}\n                            >\n                                CC BY-SA 4.0 <Icon as={MdOpenInNew} />\n                            </Link>\n                            <br />\n                            於Windows作業系統上顯示之旗幟Emoji為\n                            <Link color=\"teal.500\" href=\"https://openmoji.org/\" isExternal={true}>\n                                OpenMoji <Icon as={MdOpenInNew} />\n                            </Link>\n                            所設計。許可證：\n                            <Link\n                                color=\"teal.500\"\n                                href=\"https://creativecommons.org/licenses/by-sa/4.0/\"\n                                isExternal={true}\n                            >\n                                CC BY-SA 4.0 <Icon as={MdOpenInNew} />\n                            </Link>\n                        </ListItem>\n                        <ListItem>\n                            We reserve the rights, without prior notice, to modify, add, or remove these terms. The\n                            Chinese translation is for reference only. In case of any discrepancy between the English\n                            version and the Chinese version, the English version shall prevail.\n                            <br />\n                            我們保留修改、新增或移除上述條款之權利，而無需另行通知。中文譯本僅供參考，文義如與英文有歧異，概以英文本為準。\n                        </ListItem>\n                    </OrderedList>\n\n                    <Heading as=\"h5\" size=\"sm\" mt={3} mb={2}>\n                        {t('Contributors')}\n                    </Heading>\n\n                    <Heading as=\"h6\" size=\"xs\" my={1}>\n                        {t('Core contributors')}\n                    </Heading>\n\n                    <VStack>\n                        <Tag\n                            size=\"lg\"\n                            minW=\"80%\"\n                            onClick={() => window.open('https://github.com/wongchito', '_blank')}\n                            cursor=\"pointer\"\n                        >\n                            <Avatar src=\"https://github.com/wongchito.png\" size=\"lg\" my={2} ml={-1} mr={2} />\n                            <TagLabel>\n                                <Text fontSize=\"lg\" fontWeight=\"bold\" mb={1}>\n                                    Chito Wong\n                                </Text>\n                                <Text fontSize=\"sm\">Project initiator</Text>\n                                <Text fontSize=\"sm\">Author of MTR and Guangzhou Metro styles</Text>\n                            </TagLabel>\n                        </Tag>\n                        <Tag\n                            size=\"lg\"\n                            minW=\"80%\"\n                            onClick={() => window.open('https://github.com/thekingofcity', '_blank')}\n                            cursor=\"pointer\"\n                        >\n                            <Avatar src=\"https://github.com/thekingofcity.png\" size=\"lg\" my={2} ml={-1} mr={2} />\n                            <TagLabel>\n                                <Text fontSize=\"lg\" fontWeight=\"bold\" mb={1}>\n                                    thekingofcity\n                                </Text>\n                                <Text fontSize=\"sm\">Author of Shanghai Metro style</Text>\n                                <Text fontSize=\"sm\">Desktop version (Electron) maintainer</Text>\n                            </TagLabel>\n                        </Tag>\n                    </VStack>\n\n                    <Heading as=\"h6\" size=\"xs\" my={1}>\n                        {t('Resource contributors')}\n                    </Heading>\n\n                    <Flex wrap=\"wrap\">\n                        {CONTRIBUTORS_ADMINS.map(contributor => (\n                            <Tag\n                                key={contributor}\n                                size=\"lg\"\n                                mb={1}\n                                mr={1}\n                                flex=\"100%\"\n                                onClick={() =>\n                                    window.open(\n                                        `https://github.com/railmapgen/rmg/issues?q=is:issue+author:${contributor}`,\n                                        '_blank'\n                                    )\n                                }\n                                cursor=\"pointer\"\n                            >\n                                <Avatar src={`https://github.com/${contributor}.png`} size=\"xs\" ml={-1} mr={2} />\n                                <TagLabel>{contributor}</TagLabel>\n                                <TagLabel flexGrow={1} />\n                                <TagLabel>\n                                    <Text fontSize=\"sm\">{t('Resource Administrator')}</Text>\n                                </TagLabel>\n                            </Tag>\n                        ))}\n                        {CONTRIBUTORS_LIST.map(contributor => (\n                            <Tag\n                                key={contributor}\n                                size=\"lg\"\n                                mb={1}\n                                mr={1}\n                                onClick={() =>\n                                    window.open(\n                                        `https://github.com/railmapgen/rmg/issues?q=is:issue+author:${contributor}`,\n                                        '_blank'\n                                    )\n                                }\n                                cursor=\"pointer\"\n                            >\n                                <Avatar src={`https://github.com/${contributor}.png`} size=\"xs\" ml={-1} mr={2} />\n                                <TagLabel>{contributor}</TagLabel>\n                            </Tag>\n                        ))}\n                    </Flex>\n\n                    <Text>\n                        {t('Visit')}{' '}\n                        <Link\n                            color=\"teal.500\"\n                            href=\"https://github.com/railmapgen/rmg/wiki/How-to-add-color-palette-and-line-templates\"\n                            isExternal={true}\n                        >\n                            {t('Contribution Wiki')} <Icon as={MdOpenInNew} />\n                        </Link>\n                        {t(', open an issue and join us today!')}\n                    </Text>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        colorScheme=\"teal\"\n                        onClick={() => window.open('https://github.com/railmapgen/rmg', '_blank')}\n                    >\n                        {t('Visit GitHub')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useState } from 'react';\nimport { Heading, HStack, Icon, IconButton, Link, Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/react';\nimport { getEnvironment, getVersion } from '../../util/config';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { MdHelp, MdLocationCity, MdOpenInNew, MdTranslate } from 'react-icons/md';\nimport { LanguageCode, RmgStyle } from '../../constants/constants';\nimport { useDispatch } from 'react-redux';\nimport { setStyle } from '../../redux/param/action';\nimport * as ReactRouterDom from 'react-router-dom';\nimport HelpModal from '../modal/help-modal';\nimport { RmgEnvBadge, RmgWindowHeader } from '@railmapgen/rmg-components';\n\nexport default function WindowHeader() {\n    const { t, i18n } = useTranslation();\n    const dispatch = useDispatch();\n\n    const [isHelpModalOpen, setIsHelpModalOpen] = useState(false);\n\n    const environment = getEnvironment();\n\n    const handleChangeLanguage = async (language: LanguageCode) => {\n        const t = await i18n.changeLanguage(language);\n        document.documentElement.lang = language;\n        document.title = t('WindowHeader.heading');\n    };\n\n    return (\n        <RmgWindowHeader>\n            <Heading as=\"h4\" size=\"md\">\n                {t('WindowHeader.heading')}\n            </Heading>\n            <RmgEnvBadge\n                environment={environment}\n                version={getVersion()}\n                popoverHeader={\n                    <Trans i18nKey=\"WindowHeader.popoverHeader\" environment={environment}>\n                        You're on {{ environment }} environment!\n                    </Trans>\n                }\n                popoverBody={\n                    <Trans i18nKey=\"WindowHeader.popoverBody\">\n                        This is a testing environment where we don't guarantee the stability and compatibility. Please\n                        switch back to{' '}\n                        <Link\n                            color=\"teal.500\"\n                            href={'https://railmapgen.github.io' + window.location.pathname}\n                            isExternal={true}\n                        >\n                            Production environment <Icon as={MdOpenInNew} />\n                        </Link>\n                        .\n                    </Trans>\n                }\n            />\n\n            <HStack ml=\"auto\">\n                <Menu>\n                    <MenuButton as={IconButton} icon={<MdLocationCity />} variant=\"ghost\" size=\"sm\" />\n                    <MenuList>\n                        {Object.values(RmgStyle).map(style => (\n                            <ReactRouterDom.Link key={style} to={style}>\n                                <MenuItem onClick={() => dispatch(setStyle(style))}>\n                                    {t('WindowHeader.' + style)}\n                                </MenuItem>\n                            </ReactRouterDom.Link>\n                        ))}\n                    </MenuList>\n                </Menu>\n\n                <Menu>\n                    <MenuButton as={IconButton} icon={<MdTranslate />} variant=\"ghost\" size=\"sm\" />\n                    <MenuList>\n                        <MenuItem onClick={() => handleChangeLanguage(LanguageCode.English)}>English</MenuItem>\n                        <MenuItem onClick={() => handleChangeLanguage(LanguageCode.ChineseSimp)}>简体中文</MenuItem>\n                        <MenuItem onClick={() => handleChangeLanguage(LanguageCode.ChineseTrad)}>繁體中文</MenuItem>\n                    </MenuList>\n                </Menu>\n\n                <IconButton\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    aria-label=\"Help\"\n                    icon={<MdHelp />}\n                    onClick={() => setIsHelpModalOpen(true)}\n                />\n            </HStack>\n\n            <HelpModal isOpen={isHelpModalOpen} onClose={() => setIsHelpModalOpen(false)} />\n        </RmgWindowHeader>\n    );\n}\n","import { nanoid } from 'nanoid';\nimport { RootDispatch, RootState } from '../index';\nimport { BranchStyle } from '../../constants/constants';\nimport { getYShareMTR } from '../../methods';\nimport { setStationsBulk } from './action';\nimport { initStationInfo } from './util';\n\nexport const addStation = (where: `${number}` | 'new', from: string, to: string, position?: 'upper' | 'lower') => {\n    return (dispatch: RootDispatch, getState: () => RootState): string | false => {\n        const stationList = getState().param.stn_list;\n\n        // get new id\n        let newId = nanoid(6);\n        while (newId in stationList) {\n            newId = nanoid(6);\n        }\n        const newStationInfo = initStationInfo(newId);\n\n        if (where !== 'new') {\n            const nextStationList = {\n                ...stationList,\n                [from]: {\n                    ...stationList[from],\n                    children: stationList[from].children.map(id => (id === to ? newId : id)),\n                    branch: {\n                        left: stationList[from].branch.left,\n                        right:\n                            stationList[from].branch.right.length && stationList[from].branch.right[1] === to\n                                ? ([stationList[from].branch.right[0], newId] as [BranchStyle, string])\n                                : stationList[from].branch.right,\n                    },\n                },\n                [to]: {\n                    ...stationList[to],\n                    parents: stationList[to].parents.map(id => (id === from ? newId : id)),\n                    branch: {\n                        left:\n                            stationList[to].branch.left.length && stationList[to].branch.left[1] === from\n                                ? ([stationList[to].branch.left[0], newId] as [BranchStyle, string])\n                                : stationList[to].branch.left,\n                        right: stationList[to].branch.right,\n                    },\n                },\n                [newId]: {\n                    ...newStationInfo,\n                    parents: [from],\n                    children: [to],\n                },\n            };\n            dispatch(setStationsBulk(nextStationList));\n            return newId;\n        } else {\n            if (!position) {\n                return false;\n            }\n\n            const nextStationList = {\n                ...stationList,\n                [from]: {\n                    ...stationList[from],\n                    children:\n                        position === 'upper'\n                            ? [newId, stationList[from].children[0]]\n                            : [stationList[from].children[0], newId],\n                    branch: {\n                        left: stationList[from].branch.left,\n                        right: [BranchStyle.through, newId] as [BranchStyle, string],\n                    },\n                },\n                [to]: {\n                    ...stationList[to],\n                    parents:\n                        position === 'upper'\n                            ? [newId, stationList[to].parents[0]]\n                            : [stationList[to].parents[0], newId],\n                    branch: {\n                        left: [BranchStyle.through, newId] as [BranchStyle, string],\n                        right: stationList[to].branch.right,\n                    },\n                },\n                [newId]: {\n                    ...newStationInfo,\n                    parents: [from],\n                    children: [to],\n                },\n            };\n            dispatch(setStationsBulk(nextStationList));\n            return newId;\n        }\n    };\n};\n\nexport const addStationToExistingBranch = (where: number, preposition: 'before' | 'after', pivot: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState): false | string => {\n        const branches = getState().helper.branches;\n        const branch = branches[where];\n\n        if (branch?.length) {\n            if (preposition === 'before') {\n                const from = branch[branch.indexOf(pivot) - 1];\n                return dispatch(addStation(where.toString() as `${number}`, from, pivot));\n            } else {\n                const to = branch[branch.indexOf(pivot) + 1];\n                return dispatch(addStation(where.toString() as `${number}`, pivot, to));\n            }\n        } else {\n            return false;\n        }\n    };\n};\n\nexport const getNewBranchAllowedEnds = () => {\n    return (dispatch: RootDispatch, getState: () => RootState): string[] => {\n        const stationList = getState().param.stn_list;\n        const branches = getState().helper.branches;\n\n        return branches[0].filter(id => {\n            const isTwoSidedBranchOut = stationList[id].parents.length + stationList[id].children.length === 4;\n            const isYShare0 = getYShareMTR(id, stationList) === 0;\n\n            return !isTwoSidedBranchOut && isYShare0;\n        });\n    };\n};\n\nexport const verifyNewBranchEnds = (from: string, to: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState): string => {\n        const stationList = getState().param.stn_list;\n        const branches = getState().helper.branches;\n\n        // should be included in main line\n        if (!branches[0].includes(from) || !branches[0].includes(to)) {\n            return 'Branch should end at main line';\n        }\n\n        // from should come before to\n        if (branches[0].indexOf(from) >= branches[0].indexOf(to)) {\n            return 'Not in correct ordering';\n        }\n\n        // should not from linestart to lineend\n        if (from === 'linestart' && to === 'lineend') {\n            return 'Should not be parallel to main line';\n        }\n\n        // should not be open jaw from the first station\n        if (from === 'linestart' && branches[0].indexOf(to) === 1) {\n            return 'Branch should not be open jaw from the first station';\n        }\n\n        // should not be open jaw from the last station\n        if (to === 'lineend' && branches[0].indexOf(from) === branches[0].length - 2) {\n            return 'Branch should not be open jaw from the last station';\n        }\n\n        // from has one child, to has one parent\n        if (stationList[from].children.length > 1 || stationList[to].parents.length > 1) {\n            return 'Branch already exist';\n        }\n\n        // end station won't be a middle station of any branch except main line\n        const isExistBranchIncludesEndStation = branches\n            .slice(1)\n            .some(branch => branch.slice(1, -1).includes(from) || branch.slice(1, -1).includes(to));\n        if (isExistBranchIncludesEndStation) {\n            return 'Cannot branch out from existing branch';\n        }\n\n        // stations between both ends should be stations which isn't branching out\n        const isStationsBetweenNotBranchOut = branches[0]\n            .slice(branches[0].indexOf(from) + 1, branches[0].indexOf(to))\n            .every(id => stationList[id].parents.length === 1 && stationList[id].children.length === 1);\n        if (!isStationsBetweenNotBranchOut) {\n            return 'One or more stations between both ends are branching out';\n        }\n\n        return '';\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n    Alert,\n    AlertIcon,\n    Box,\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { RmgStyle, SidePanelMode } from '../../constants/constants';\nimport { isColineBranch } from '../../redux/param/coline-action';\nimport { useTranslation } from 'react-i18next';\nimport { addStationToExistingBranch } from '../../redux/param/add-station-action';\nimport { setSelectedStation, setSidePanelMode } from '../../redux/app/app-slice';\n\ninterface AddStationModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function AddStationModal(props: AddStationModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const selectedBranch = useRootSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useRootSelector(state => state.param);\n    const branches = useRootSelector(state => state.helper.branches);\n\n    const [where, setWhere] = useState(selectedBranch);\n    const [preposition, setPreposition] = useState<'before' | 'after'>('before');\n    const [pivot, setPivot] = useState('');\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        setWhere(selectedBranch);\n    }, [selectedBranch]);\n\n    useEffect(() => {\n        if (!isOpen) {\n            setError(false);\n        }\n    }, [isOpen]);\n\n    const selectableStations = branches[Number(where)]?.slice(1, -1) ?? [];\n\n    const getStationOptions = (stationIdList: string[]): Record<string, string> => {\n        return stationIdList.reduce(\n            (acc, cur) => ({\n                ...acc,\n                [cur]: stationList[cur]?.name.join(' - '),\n            }),\n            { '': t('AddStationModal.pleaseSelect') }\n        );\n    };\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('AddStationModal.where'),\n            value: where,\n            options: {\n                ...branches.reduce(\n                    (acc, cur, idx) => ({\n                        ...acc,\n                        [idx]:\n                            idx === 0\n                                ? t('AddStationModal.main')\n                                : style !== RmgStyle.SHMetro || !isColineBranch(cur, stationList)\n                                ? t('AddStationModal.branch') + ' ' + idx\n                                : t('AddStationModal.external') + ' ' + idx,\n                    }),\n                    {}\n                ),\n            },\n            onChange: value => handleSelectWhere(value as number),\n            minW: 'full',\n        },\n        {\n            type: 'select',\n            label: t('AddStationModal.preposition'),\n            value: preposition,\n            options: {\n                before: t('AddStationModal.before'),\n                after: t('AddStationModal.after'),\n            },\n            onChange: value => setPreposition(value as 'before' | 'after'),\n        },\n        {\n            type: 'select',\n            label: t('AddStationModal.pivot'),\n            value: pivot,\n            options: getStationOptions(selectableStations),\n            disabledOptions: [''],\n            onChange: value => setPivot(value as string),\n        },\n    ];\n\n    const handleSelectWhere = (value: number) => {\n        setWhere(value);\n        setPivot('');\n    };\n\n    const handleSubmit = () => {\n        const result = dispatch(addStationToExistingBranch(where, preposition, pivot));\n        if (result) {\n            onClose();\n\n            dispatch(setSelectedStation(result));\n            dispatch(setSidePanelMode(SidePanelMode.STATION));\n        } else {\n            console.log('false here');\n            setError(true);\n        }\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                {error && (\n                    <Alert status=\"error\" variant=\"solid\" size=\"xs\">\n                        <AlertIcon />\n                        {t('AddStationModal.error')}\n                    </Alert>\n                )}\n                <Box position=\"relative\">\n                    <ModalHeader>{t('AddStationModal.title')}</ModalHeader>\n                    <ModalCloseButton />\n                </Box>\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button colorScheme=\"teal\" onClick={handleSubmit} disabled={!pivot}>\n                        {t('AddStationModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from '@chakra-ui/react';\nimport { RmgFields, RmgFieldsField } from '@railmapgen/rmg-components';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { addStation, getNewBranchAllowedEnds, verifyNewBranchEnds } from '../../redux/param/add-station-action';\nimport { RmgStyle } from '../../constants/constants';\nimport { useTranslation } from 'react-i18next';\n\ninterface NewBranchModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nexport default function NewBranchModal(props: NewBranchModalProps) {\n    const { isOpen, onClose } = props;\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const [where, setWhere] = useState<'new' | 'ext'>('new');\n    const [from, setFrom] = useState('');\n    const [to, setTo] = useState('');\n    const [position, setPosition] = useState<'upper' | 'lower'>('upper');\n\n    const [fromError, setFromError] = useState('');\n    const [toError, setToError] = useState('');\n\n    const { style, stn_list: stationList } = useRootSelector(state => state.param);\n\n    useEffect(() => {\n        // reset whenever modal is closed\n        if (!isOpen) {\n            setWhere('new');\n            setFrom('');\n            setTo('');\n        }\n    }, [isOpen]);\n\n    const getStationOptions = (stationIdList: string[]): Record<string, string> => {\n        return stationIdList.reduce(\n            (acc, cur) => ({\n                ...acc,\n                [cur]: stationList[cur]?.name.join(' - '),\n            }),\n            { '': t('NewBranchModal.pleaseSelect') }\n        );\n    };\n\n    const newBranchEndStationOptions = getStationOptions(dispatch(getNewBranchAllowedEnds()));\n\n    const fields: RmgFieldsField[] = [\n        {\n            type: 'select',\n            label: t('NewBranchModal.where'),\n            value: where,\n            options: {\n                new: t('NewBranchModal.new'),\n                ext: t('NewBranchModal.ext'),\n            },\n            disabledOptions: style === RmgStyle.SHMetro ? [] : ['ext'],\n            onChange: value => handleSelectWhere(value as 'new' | 'ext'),\n            minW: 'full',\n        },\n        {\n            type: 'select',\n            label: t('NewBranchModal.from'),\n            value: from,\n            options: newBranchEndStationOptions,\n            disabledOptions: [''],\n            onChange: value => handleSelectFrom(value as string),\n            isInvalid: Boolean(fromError),\n        },\n        {\n            type: 'select',\n            label: t('NewBranchModal.to'),\n            value: to,\n            options: newBranchEndStationOptions,\n            disabledOptions: [''],\n            onChange: value => handleSelectTo(value as string),\n            isInvalid: Boolean(toError),\n        },\n        {\n            type: 'select',\n            label: t('NewBranchModal.position'),\n            value: position,\n            options: {\n                upper: t('NewBranchModal.upper'),\n                lower: t('NewBranchModal.lower'),\n            },\n            onChange: value => setPosition(value as 'upper' | 'lower'),\n            minW: 'full',\n            hidden: where !== 'new' || style === RmgStyle.SHMetro,\n        },\n    ];\n\n    const handleSelectWhere = (value: 'new' | 'ext') => {\n        setWhere(value);\n        setFrom('');\n        setTo('');\n        setFromError('');\n        setToError('');\n    };\n\n    const handleSelectFrom = (value: string) => {\n        setFrom(value);\n        setFromError('');\n\n        if (value && to) {\n            setToError(dispatch(verifyNewBranchEnds(value, to)));\n        }\n    };\n\n    const handleSelectTo = (value: string) => {\n        setTo(value);\n        setToError('');\n\n        if (from && value) {\n            setFromError(dispatch(verifyNewBranchEnds(from, value)));\n        }\n    };\n\n    const handleSubmit = () => {\n        let result: false | string;\n        if (where === 'ext') {\n            // SHMetro specific - treat lower branch as external line\n            result = dispatch(addStation('new', from, to, 'lower'));\n        } else {\n            if (style === RmgStyle.SHMetro) {\n                result = dispatch(addStation('new', from, to, 'upper'));\n            } else {\n                result = dispatch(addStation('new', from, to, position));\n            }\n        }\n\n        if (result) {\n            onClose();\n        }\n    };\n\n    const isSubmitDisabled = Boolean(!from || !to || fromError || toError);\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{t('NewBranchModal.title')}</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody>\n                    <RmgFields fields={fields} />\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        colorScheme=\"teal\"\n                        title={isSubmitDisabled ? fromError || toError : t('NewBranchModal.submit')}\n                        onClick={handleSubmit}\n                        disabled={isSubmitDisabled}\n                    >\n                        {t('NewBranchModal.submit')}\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React, { lazy, useState } from 'react';\nimport { Box, Button, HStack, IconButton, Progress, Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/react';\nimport { MdAdd } from 'react-icons/md';\nimport AddStationModal from '../modal/add-station-modal';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { RmgStyle, SidePanelMode } from '../../constants/constants';\nimport { isColineBranch } from '../../redux/param/coline-action';\nimport { setSelectedBranch, setSidePanelMode } from '../../redux/app/app-slice';\nimport { useTranslation } from 'react-i18next';\nimport NewBranchModal from '../modal/new-branch-modal';\nimport ErrorBoundary from '../../error-boundary';\n\nconst StationAgGrid = lazy(() => import(/* webpackChunkName: \"StationAgGrid\" */ './station-ag-grid'));\n\nexport default function GridTabs() {\n    const { t } = useTranslation();\n    const dispatch = useRootDispatch();\n\n    const [isAddStationModalOpen, setIsAddStationModalOpen] = useState(false);\n    const [isNewBranchModalOpen, setIsNewBranchModalOpen] = useState(false);\n\n    const selectedBranch = useRootSelector(state => state.app.selectedBranch);\n    const { style, stn_list: stationList } = useRootSelector(state => state.param);\n    const branches = useRootSelector(state => state.helper.branches);\n\n    const handleEditLineSection = () => {\n        dispatch(setSidePanelMode(SidePanelMode.BRANCH));\n    };\n\n    return (\n        <Box flex={1} overflow=\"hidden\">\n            <Tabs\n                height=\"100%\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                overflow=\"hidden\"\n                index={selectedBranch}\n                onChange={index => dispatch(setSelectedBranch(index))}\n            >\n                <TabList>\n                    {branches.map((branch, i) => {\n                        if (i === 0) {\n                            return <Tab key={i}>{t('GridTabs.main')}</Tab>;\n                        } else {\n                            if (style !== RmgStyle.SHMetro || !isColineBranch(branch, stationList)) {\n                                return <Tab key={i}>{t('GridTabs.branch') + ' ' + i}</Tab>;\n                            } else {\n                                return <Tab key={i}>{t('GridTabs.external') + ' ' + i}</Tab>;\n                            }\n                        }\n                    })}\n                    <IconButton\n                        size=\"sm\"\n                        variant=\"ghost\"\n                        alignSelf=\"center\"\n                        aria-label=\"New branch\"\n                        onClick={() => setIsNewBranchModalOpen(true)}\n                        icon={<MdAdd />}\n                    />\n\n                    <HStack marginLeft=\"auto\" marginRight={1}>\n                        <Button\n                            variant=\"outline\"\n                            size=\"xs\"\n                            leftIcon={<MdAdd />}\n                            onClick={() => setIsAddStationModalOpen(true)}\n                        >\n                            {t('GridTabs.addStation')}\n                        </Button>\n                        <Button size=\"xs\" colorScheme=\"teal\" onClick={handleEditLineSection}>\n                            {t('GridTabs.editLine')}\n                        </Button>\n                    </HStack>\n                </TabList>\n\n                <TabPanels flex={1} overflowY=\"auto\">\n                    {branches.map((_, i) => (\n                        <TabPanel key={i} padding={0} h=\"100%\">\n                            <ErrorBoundary suspenseFallback={<Progress isIndeterminate />}>\n                                <StationAgGrid branchIndex={i} />\n                            </ErrorBoundary>\n                        </TabPanel>\n                    ))}\n                </TabPanels>\n            </Tabs>\n\n            <AddStationModal isOpen={isAddStationModalOpen} onClose={() => setIsAddStationModalOpen(false)} />\n            <NewBranchModal isOpen={isNewBranchModalOpen} onClose={() => setIsNewBranchModalOpen(false)} />\n        </Box>\n    );\n}\n","import React from 'react';\nimport { CircularProgress, Flex, Modal, ModalOverlay } from '@chakra-ui/react';\nimport { useRootSelector } from '../../redux';\n\nexport default function LoadingModal() {\n    const isLoading = useRootSelector(state => state.app.isLoading);\n\n    return (\n        <Modal isOpen={isLoading !== undefined} onClose={() => {}}>\n            <ModalOverlay />\n            <Flex\n                position=\"absolute\"\n                top={0}\n                left={0}\n                h=\"100%\"\n                w=\"100%\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                zIndex={9999}\n            >\n                <CircularProgress\n                    isIndeterminate={isLoading === -1}\n                    value={isLoading && isLoading >= 0 ? isLoading : undefined}\n                    color=\"teal\"\n                />\n            </Flex>\n        </Modal>\n    );\n}\n","import React from 'react';\nimport { useRootDispatch, useRootSelector } from '../../redux';\nimport { Alert, AlertIcon, AlertStatus, CloseButton, Link } from '@chakra-ui/react';\nimport { closeGlobalAlert } from '../../redux/app/app-slice';\n\nexport default function GlobalAlerts() {\n    const dispatch = useRootDispatch();\n\n    const globalAlerts = useRootSelector(state => state.app.globalAlerts);\n\n    return (\n        <>\n            {Object.entries(globalAlerts).map(([status, { message, url }]) => (\n                <Alert key={status} status={status as AlertStatus} variant=\"solid\" size=\"xs\" pl={3} pr={1} py={0}>\n                    <AlertIcon />\n                    {url ? (\n                        <Link href={url} target=\"_blank\">\n                            {message}\n                        </Link>\n                    ) : (\n                        message\n                    )}\n                    <CloseButton ml=\"auto\" onClick={() => dispatch(closeGlobalAlert(status as AlertStatus))} />\n                </Alert>\n            ))}\n        </>\n    );\n}\n","import React, { useEffect } from 'react';\nimport SvgRouter from '../svgs/svg-router';\nimport SidePanel from './side-panel/side-panel';\nimport PageHeader from './page-header/page-header';\nimport WindowHeader from './root/window-header';\nimport { Box, Flex } from '@chakra-ui/react';\nimport { useRootSelector } from '../redux';\nimport GridTabs from './ag-grid/grid-tabs';\nimport LoadingModal from './modal/loading-modal';\nimport GlobalAlerts from './root/global-alerts';\nimport { RmgPage, RmgWindow } from '@railmapgen/rmg-components';\n\nexport default function AppRoot() {\n    const param = useRootSelector(state => state.param);\n    const paramString = JSON.stringify(param);\n\n    useEffect(() => {\n        window.rmgStorage.writeFile('rmgParam', paramString).then();\n    }, [paramString]);\n\n    return (\n        <RmgWindow>\n            <LoadingModal />\n            <WindowHeader />\n            <RmgPage>\n                <PageHeader />\n                <GlobalAlerts />\n                <Flex flex={1} overflow=\"hidden\" position=\"relative\">\n                    <Flex as=\"section\" direction=\"column\" flex={1} ml={1} mr={1} overflow=\"hidden\">\n                        <Box>\n                            <SvgRouter />\n                        </Box>\n                        <GridTabs />\n                    </Flex>\n\n                    <SidePanel />\n                </Flex>\n            </RmgPage>\n\n            <canvas style={{ display: 'none' }} />\n        </RmgWindow>\n    );\n}\n","import { RootDispatch, RootState } from '../index';\nimport { ColineInfo, InterchangeInfo, StationDict } from '../../constants/constants';\nimport { setColineBulk } from './action';\nimport { nanoid } from 'nanoid';\n\n// Cartesian product of multiple arrays in JavaScript\n// https://stackoverflow.com/questions/12303989/cartesian-product-of-multiple-arrays-in-javascript\n// Equivalent typescript version\n// https://gist.github.com/ssippe/1f92625532eef28be6974f898efb23ef?permalink_comment_id=3364149#gistcomment-3364149\nfunction cartesian<T>(...allEntries: T[][]): T[][] {\n    return allEntries.reduce<T[][]>(\n        (results, entries) =>\n            results\n                .map(result => entries.map(entry => result.concat([entry])))\n                .reduce((subResults, result) => subResults.concat(result), []),\n        [[]]\n    );\n}\n\n/**\n * Coline branch is also known as the lower branch.\n */\nexport const isColineBranch = (branch: string[], stnList: StationDict) =>\n    stnList[branch[0]].children.indexOf(branch[1]) ? true : false;\n\nexport const getPossibleStnIdsFromMainLine = (branches: string[][], stnList: StationDict) => [\n    branches[0][1], // skip linestart\n    branches[0][branches[0].length - 2], // skip lineend\n    ...branches[0].filter(stnId =>\n        // for every station in the main line, find if it branches out at this station\n        branches\n            .slice(1)\n            .filter(branch => isColineBranch(branch, stnList))\n            // branches after the first/main line may not have linestart or lineend\n            .map(branch => branch.filter(stnId => !['linestart', 'lineend'].includes(stnId)))\n            // only stations at both ends need to be taken into consideration\n            .map(branch => [branch[0], branch[branch.length - 1]])\n            .flat()\n            .includes(stnId)\n    ),\n];\n\nexport const getPossibleStnIdsFromBranchLine = (branches: string[][], stnList: StationDict) =>\n    branches\n        .slice(1)\n        .filter(branch => isColineBranch(branch, stnList))\n        .map(branch => branch.filter(stnId => !['linestart', 'lineend'].includes(stnId)))\n        .map(branch => [branch[0], branch[branch.length - 1]]);\n\nexport const getPossibleCombinations = (branchIndex: number) => {\n    return (dispatch: RootDispatch, getState: () => RootState): [string, string][] => {\n        const branches = getState().helper.branches;\n\n        if (branchIndex === 0) {\n            const stnList = getState().param.stn_list;\n            const possibleStnIdsFromMainLine = getPossibleStnIdsFromMainLine(branches, stnList);\n            return cartesian(possibleStnIdsFromMainLine, possibleStnIdsFromMainLine).filter(\n                val => val[0] !== val[1]\n            ) as [string, string][];\n        } else {\n            const branch = branches[branchIndex];\n            if (branch) {\n                const b = branch.filter(id => !['linestart', 'lineend'].includes(id));\n                return [[b[0], b.slice(-1)[0]]];\n            } else {\n                return [];\n            }\n        }\n    };\n};\n\n/**\n * Calculate row span for displaying track sharing column in StationAgGrid\n * @param stationId id of station that begins to span rows\n * @param branchIndex index of branch that the grid is displaying\n */\nexport const getRowSpanForColine = (stationId: string, branchIndex: number) => {\n    return (dispatch: RootDispatch, getState: () => RootState): [number, string | undefined] => {\n        const coline = getState().param.coline;\n        const branch = getState().helper.branches[branchIndex];\n\n        for (let [clId, cl] of Object.entries(coline)) {\n            if (cl.from === stationId && branch.includes(cl.to)) {\n                const thisIndex = branch.indexOf(stationId);\n                const thatIndex = branch.indexOf(cl.to);\n                if (thatIndex > thisIndex) {\n                    return [thatIndex - thisIndex + 1, clId];\n                }\n            } else if (cl.to === stationId && branch.includes(cl.to)) {\n                const thisIndex = branch.indexOf(stationId);\n                const thatIndex = branch.indexOf(cl.from);\n                if (thatIndex > thisIndex) {\n                    return [thatIndex - thisIndex + 1, clId];\n                }\n            }\n        }\n        return [0, undefined];\n    };\n};\n\n/**\n * Verify station selections from table are consecutive, which is the prerequisite for track sharing.\n * @param selectedIds IDs of the selected stations (get by gridApi)\n * @param branchIndex\n */\nexport const verifyAreSelectionsConsecutive = (selectedIds: string[], branchIndex: number) => {\n    return (dispatch: RootDispatch, getState: () => RootState): boolean => {\n        const branch = getState().helper.branches[branchIndex];\n\n        const from = selectedIds[0];\n        const to = selectedIds.slice(-1)[0];\n\n        const areConsecutiveSelections =\n            branch.slice(branch.indexOf(from), branch.indexOf(to) + 1).toString() === selectedIds.toString();\n        if (!areConsecutiveSelections) {\n            console.log('verifyAreSelectionsConsecutive():: Selections are NOT consecutive');\n            return false;\n        } else {\n            return true;\n        }\n    };\n};\n\n/**\n *  Checks the validity of from and to. Currently we accept coline if it:\n 1. Start from either ends of the mainline or branch stations and\n terminate at either ends of the mainline or branch stations.\n 2. Start from the one end of the branch line and\n terminate at the other end of the same branch line.\n\n * @param from station id from\n * @param to station id to\n */\nexport const checkColineValidity = (from: string, to: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const stnList = getState().param.stn_list;\n        const branches = getState().helper.branches;\n\n        if (from === to) {\n            throw new Error('addColine():: failed for same stnId');\n        }\n        // calculate if coline is in the main line\n        const colineInMainLine = getPossibleStnIdsFromMainLine(branches, stnList).filter(stnId =>\n            [from, to].includes(stnId)\n        );\n        // calculate if coline is in one branch line\n        const colineInBranches = getPossibleStnIdsFromBranchLine(branches, stnList).filter(terminals =>\n            [from, to].every(stnId => terminals.includes(stnId))\n        );\n        // see if coline is in the main line\n        if (colineInMainLine.length === 2 && colineInBranches.length > 0) {\n            throw new Error(`addColine():: main check failed for ${from}, ${to}`);\n        }\n        // see if coline is in one branch line\n        if (colineInMainLine.length !== 2 && colineInBranches.length !== 1) {\n            throw new Error(`addColine():: branch check failed for ${from}, ${to}`);\n        }\n    };\n};\n\nexport const findAllColinesInBranch = (branchIndex: number) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const coline = getState().param.coline;\n        const branches = getState().helper.branches;\n        const branch = branches[branchIndex];\n\n        if (branch) {\n            return Object.entries(coline).reduce<Record<string, ColineInfo>>((acc, cur) => {\n                if (branch.includes(cur[1].from) && branch.includes(cur[1].to)) {\n                    return { ...acc, [cur[0]]: cur[1] };\n                } else {\n                    return { ...acc };\n                }\n            }, {});\n        } else {\n            return {};\n        }\n    };\n};\n\n/**\n * Remove related coline when the deleteStn is the coline `from` or `to` station.\n */\nexport const removeInvalidColineOnRemoveStation = (deleteStnId: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (Object.keys(colineInfo).length === 0) return;\n\n        const nextColine = Object.entries(colineInfo).reduce<Record<string, ColineInfo>>((acc, cur) => {\n            if (cur[1].from !== deleteStnId && cur[1].to !== deleteStnId) {\n                return { ...acc, [cur[0]]: cur[1] };\n            } else {\n                return { ...acc };\n            }\n        }, {});\n\n        dispatch(setColineBulk(nextColine));\n    };\n};\n\nexport const addColine = (from: string, to: string, colors: InterchangeInfo[], display: boolean = true) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        dispatch(checkColineValidity(from, to));\n        dispatch(\n            setColineBulk({\n                ...colineInfo,\n                [nanoid(4)]: { from: from, to: to, colors: colors, display: display },\n            })\n        );\n    };\n};\n\nexport const updateColine = (colineId: string, from: string, to: string, display = true) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo) {\n            dispatch(checkColineValidity(from, to));\n\n            const newColineInfo = {\n                ...colineInfo,\n                [colineId]: { ...colineInfo[colineId], from, to, display },\n            };\n\n            dispatch(setColineBulk(newColineInfo));\n        }\n    };\n};\n\nexport const removeColine = (colineId: string) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo) {\n            const { [colineId]: _, ...nextColine } = colineInfo;\n            dispatch(setColineBulk(nextColine));\n        }\n    };\n};\n\n/**\n *\n * @param colineId\n * @param interchangeInfo\n */\nexport const addColineColor = (colineId: string, interchangeInfo: InterchangeInfo) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        colineInfo[colineId].colors = [...colineInfo[colineId].colors, interchangeInfo];\n\n        dispatch(setColineBulk(colineInfo));\n    };\n};\n\nexport const removeColineColor = (colineId: string, interchangeIndex: number) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo && colineInfo[colineId].colors.length > interchangeIndex) {\n            const nextColours = colineInfo[colineId].colors.filter((_, colineIdx) => colineIdx !== interchangeIndex);\n            if (nextColours.length === 0) {\n                // remove entire coline\n                const { [colineId]: _, ...nextColine } = colineInfo;\n                dispatch(setColineBulk(nextColine));\n            } else {\n                // update coline colour list\n                const nextColine = {\n                    ...colineInfo,\n                    [colineId]: { ...colineInfo[colineId], colors: nextColours },\n                };\n                dispatch(setColineBulk(nextColine));\n            }\n        }\n    };\n};\n\nexport const updateColineColor = (colineId: string, interchangeIndex: number, interchangeInfo: InterchangeInfo) => {\n    return (dispatch: RootDispatch, getState: () => RootState) => {\n        const colineInfo = getState().param.coline;\n\n        if (colineId in colineInfo && colineInfo[colineId].colors.length > interchangeIndex) {\n            colineInfo[colineId].colors = colineInfo[colineId].colors.map((int, colineIdx) =>\n                colineIdx === interchangeIndex\n                    ? ([0, 1, 2, 3, 4, 5].map(i =>\n                          interchangeInfo[i] === undefined ? int[i] : interchangeInfo[i]\n                      ) as InterchangeInfo)\n                    : int\n            );\n\n            dispatch(setColineBulk(colineInfo));\n        }\n    };\n};\n\n// DEBUG PROXY\n// declare const window: any;\n// window.addColine = addColine;\n// window.updateColine = updateColine;\n// window.removeColine = removeColine;\n// window.rmgStore.dispatch(window.removeColine(2))\n// let t = ['shanghai', 'sh4', '#5F259F', '#fff', '4号线', 'Line 4']\n// window.rmgStore.dispatch(window.addColine('s9tt', 'l1mz', [t]))\n","var map = {\n\t\"./gzmtr/index\": [\n\t\t226,\n\t\t226\n\t],\n\t\"./mtr/index\": [\n\t\t31711,\n\t\t9014,\n\t\t1711\n\t],\n\t\"./shmetro/index\": [\n\t\t58049,\n\t\t9014,\n\t\t8049\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 33489;\nmodule.exports = webpackAsyncContext;"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","all","slice","style","flexDirection","overflowX","content","margin","flex","border","SvgRouter","location","useLocation","navigate","useNavigate","dispatch","useDispatch","useRootSelector","state","app","canvasToShow","canvasScale","param","svgHeight","svg_height","rmgStyle","canvasMap","useState","setCanvasMap","useEffect","default","catch","console","error","useCanvasMap","pathname","log","nextStyle","split","values","RmgStyle","includes","setStyle","document","getElementById","href","process","filteredCanvas","filter","canvas","sx","length","minWidth","height","overflowY","InfoSection","useTranslation","useRootDispatch","selectedStation","stn_list","num","name","secondaryName","fields","type","label","value","placeholder","onChange","updateStationNum","hidden","updateStationName","updateStationSecondaryName","p","as","size","minW","FlagSvgEmoji","props","countryCode","svgFilename","undefined","src","setSrc","err","message","alt","h","mr","CityPicker","defaultValueId","i18n","currentItem","cityList","item","displayValue","languages","lng","find","data","sort","a","b","CityCode","localeCompare","displayHandler","isCensorTWFlag","country","LanguageCode","isWindowsClient","navigator","platform","flagSvg","countryList","flagEmoji","predicate","input","some","defaultValue","ColourPicker","city","paletteList","cityCode","setPaletteList","usePalette","palette","displayName","fg","MonoColour","bg","colour","ColourModal","isOpen","onClose","defaultTheme","onUpdate","setCityCode","lineCode","setLineCode","bgColour","setBgColour","fgColour","setFgColour","toString","paletteFields","component","line","customFields","variant","options","isSubmitEnabled","isFitted","colorScheme","w","defaultIndex","fontSize","marginRight","color","isExternal","MdOpenInNew","onClick","disabled","ColourUtil","hex","parseInt","alpha","this","hexToRgb","join","hex1","hex2","reduce","acc","cur","idx","Math","pow","ThemeButton","theme","mt","_hover","fade","icon","InterchangeCard","interchangeList","onAdd","onDelete","isModalOpen","setIsModalOpen","selectedIndex","setSelectedIndex","stationList","usedNameList","zhAcc","enAcc","Set","concat","transfer","info","flat","it","interchangeFields","i","val","optionList","direction","spacing","align","noLabel","RmgButtonGroup","selections","multiSelect","setValue","isAttached","selection","isSelected","role","isDisabled","prevValue","nextValue","v","handleToggle","InterchangeSection","getOSINameFields","setIndex","osi_names","updateStationOsiName","isChecked","paid_area","checked","updateStationPaidArea","oneLine","handleAdd","addInterchange","handleDelete","j","removeInterchange","handleUpdate","updateInterchange","ShortDirection","tick_direc","updateStationTickDirection","infoList","Fragment","alignSelf","leftIcon","MoreSection","loop","services","facility","loop_pivot","one_line","int_padding","serviceSelections","Services","service","mtrFacilityOptions","Facilities","shmetroFacilityOptions","updateStationServices","updateStationFacility","updateStationLoopPivot","updateStationOneLine","validator","Number","isInteger","updateStationIntPadding","_","updateStationIntPaddingToAll","BranchSection","parents","children","branch","branchOptions","BranchStyle","getFirstStationOptions","Direction","positionOptions","upper","lower","getFields","updateStationBranchType","updateStationBranchFirstStation","indexOf","flipStationBranchPosition","StationSidePanel","LayoutSection","svgWidth","y_pc","branchSpacingPct","padding","direction_gz_x","direction_gz_y","canvasConfig","setSvgWidth","setSvgHeight","min","max","setYPercentage","setBranchSpacingPct","setPaddingPercentage","setDirectionIndicatorX","setDirectionIndicatorY","DesignSection","lineName","line_name","lineNum","line_num","platformNum","platform_num","psdNum","psd_num","namePosMTR","customiseMTRDest","info_panel_type","directionSelections","panelTypeGZMTROptions","PanelTypeGZMTR","panelTypeSHMetroOptions","PanelTypeShmetro","setLineName","setLineNum","setPlatform","setPsdNum","setPanelType","nextDirection","setDirection","staggerNameSelections","mtrSpecifiedFields","isStagger","staggerStationNames","flipStationNames","isLegacy","toggleLineNameBeforeDestination","terminal","customiseDestinationName","nextTheme","setTheme","LoopSection","branches","helper","loop_info","bank","left_and_right_factor","bottom_factor","branch_stn_ids","stn_id","abs","left_and_right_factor_max","floor","setLoop","setLoopBank","setLoopLeftAndRightFactor","setLoopBottomFactor","GZMTRNoteCard","note","fields1","fields2","GZMTRNoteSection","notesGZMTR","updateNote","removeNote","addNote","StyleSidePanel","getYShareMTR","stnId","stnList","stnPred","RemoveConfirmModal","setError","status","position","stationId","getState","currentStationIndex","current_stn_idx","setSidePanelMode","SidePanelMode","setSelectedStation","removeInvalidColineOnRemoveStation","newStnList","JSON","parse","stringify","forEach","parId","childId","right","left","splice","setStationsBulk","removeStation","ml","StationSidePanelFooter","isRemoveModalOpen","setIsRemoveModalOpen","setCurrentStation","ColineCard","colineInfo","routeOptions","onUpdateRoute","onUpdateColourInfo","from","to","colors","ColineSection","selectedBranch","colineInfoList","findAllColinesInBranch","possibleCombinations","getPossibleCombinations","entries","colineId","route","updateColine","setGlobalAlert","colourInfo","updateColineColor","colourIndex","removeColineColor","handleDeleteColour","addColine","AutoNumModal","where","setWhere","setFrom","maxLength","setMaxLength","setSort","isColineBranch","isNaN","debouncedDelay","asc","desc","isSubmitDisabled","autoNumbering","ActionSection","isAutoNumModalOpen","setIsAutoNumModalOpen","wrap","flexShrink","flexBasis","marginTop","reverseStations","BranchSidePanel","SidePanel","sidePanelMode","mode","STATION","header","text","body","footer","STYLE","BRANCH","CLOSE","width","downloadAs","filename","blob","Blob","downloadBlobAs","url","window","URL","createObjectURL","createElement","download","appendChild","click","removeChild","revokeObjectURL","readFileAsText","file","reader","FileReader","onloadend","result","readAsText","isSafari","userAgent","cloneSvgCanvas","isTransparent","isShowBorder","scale","key","querySelector","getPropertyValue","match","thisSVGHeight","elem","cloneNode","setAttribute","setProperty","tag","querySelectorAll","l","sheet","cssRules","rule","cssText","txt","s","textContent","prepend","getBase64FontFace","uris","alert","readBlobAsDataURL","readAsDataURL","svgEl","uniqueCharacters","Array","el","innerHTML","replace","fonts","load","fontFaceList","styleSheet","distinctCssRules","font","matchedRule","cssStyle","fontFamily","family","unicodeRange","ruleStyle","matchedStyle","cssRule","fetch","getAbsoluteUrl","fontResp","fontDataUri","ruleStyleSrc","test","isWait","svgW","viewBox","baseVal","svgH","devicePixelRatio","ctx","getContext","clearRect","elStyle","getComputedStyle","fill","dominantBaseline","textAnchor","reject","img","Image","onload","setTimeout","drawImage","toBlob","onerror","btoa","unescape","encodeURIComponent","outerHTML","DownloadModal","canvasToDownload","setCanvasToDownload","setIsTransparent","setIsShowBorder","setScale","format","setFormat","currentStationId","canvasOptions","scaleOptions","formatOptions","png","svg","disabledOptions","handleDownload","option","setLoadingProgress","stationIdListToDownload","zip","JSZip","index","waitForMs","replaceAll","removeAttribute","base64","generateAsync","zipData","stopLoading","DownloadActions","isDownloadModalOpen","setIsDownloadModalOpen","Button","rightIcon","Date","valueOf","UploadConfirmModal","cancelRef","uploadedParam","onOpenParam","leastDestructiveRef","fontWeight","ref","TemplateModal","handleSelect","company","startLoading","isLazy","orientation","maxW","companyConfig","translateText","templateList","c","templates","Flex","py","px","template","justifyContent","overflow","OpenActions","isUploadModalOpen","setIsUploadModalOpen","isTemplateModalOpen","setIsTemplateModalOpen","setUploadedParam","uploadModalCloseRef","useRef","fileInputRef","handleUpload","event","target","files","paramStr","updatedParam","updateParam","handleOpenParam","rmgStorage","writeFile","AllCanvas","selectCanvas","reRenderApp","openFromNewParam","initParam","language","accept","current","HeaderActions","PageHeader","canvasSelections","step","zoomToScale","Environments","CONTRIBUTORS_ADMINS","CONTRIBUTORS_LIST","HelpModal","scrollBehavior","mb","my","open","cursor","contributor","flexGrow","WindowHeader","isHelpModalOpen","setIsHelpModalOpen","environment","hostname","DEV","UAT","PRD","handleChangeLanguage","changeLanguage","documentElement","lang","title","version","packageJson","popoverHeader","Trans","i18nKey","popoverBody","IconButton","addStation","newId","nanoid","newStationInfo","initStationInfo","nextStationList","verifyNewBranchEnds","every","AddStationModal","preposition","setPreposition","pivot","setPivot","stationIdList","selectableStations","handleSelectWhere","before","after","addStationToExistingBranch","NewBranchModal","setTo","setPosition","fromError","setFromError","toError","setToError","newBranchEndStationOptions","isTwoSidedBranchOut","isYShare0","new","ext","handleSelectFrom","isInvalid","Boolean","handleSelectTo","StationAgGrid","lazy","GridTabs","isAddStationModalOpen","setIsAddStationModalOpen","isNewBranchModalOpen","setIsNewBranchModalOpen","display","setSelectedBranch","marginLeft","suspenseFallback","isIndeterminate","branchIndex","LoadingModal","isLoading","top","alignItems","zIndex","GlobalAlerts","globalAlerts","pl","pr","closeGlobalAlert","AppRoot","paramString","getPossibleStnIdsFromMainLine","possibleStnIdsFromMainLine","allEntries","results","entry","subResults","cartesian","getRowSpanForColine","coline","clId","cl","thisIndex","thatIndex","checkColineValidity","colineInMainLine","colineInBranches","getPossibleStnIdsFromBranchLine","terminals","deleteStnId","nextColine","setColineBulk","newColineInfo","interchangeIndex","nextColours","colineIdx","interchangeInfo","int"],"sourceRoot":""}