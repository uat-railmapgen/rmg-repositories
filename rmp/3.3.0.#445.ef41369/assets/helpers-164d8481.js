import{S as g,d}from"./index-03dd700d.js";const p=/url\("([\S*]+)"\)/,S=t=>new Promise(e=>{const n=new FileReader;n.onloadend=()=>e(n.result),n.readAsDataURL(t)}),N=(t,e)=>t.find(n=>{const r=n.style;return r.getPropertyValue("font-family").replace(/^"(.+)"$/,"$1")===e.family&&r.getPropertyValue("unicode-range")===e.unicodeRange}),E=async(t,e,n,r,o)=>{var f,h;const i=Array.from(new Set(e.map(s=>[...t.querySelectorAll(s)]).flat().map(s=>s.innerHTML).join("").replace(/\s/g,""))).join(""),u=await document.fonts.load(n.join(", "),i),c=(h=(f=document.querySelector(`link#${r}`))==null?void 0:f.sheet)==null?void 0:h.cssRules;if(!c)return Promise.reject(new Error(`cssRules can not be found in link#${r}`));const a=Array.from(c).flatMap(s=>s instanceof CSSImportRule?Array.from(s.styleSheet.cssRules):s).filter(s=>s instanceof CSSFontFaceRule),l=u.reduce((s,m)=>{const y=N(a,m);return y?s.find(b=>{const x=b.style,M=y.style;return x.getPropertyValue("font-family")===M.getPropertyValue("font-family")&&x.getPropertyValue("unicode-range")===M.getPropertyValue("unicode-range")})?s:s.concat(y):s},[]);return await Promise.all(l.map(async s=>{try{const m=await fetch(_(o,s)),y=await S(await m.blob());return s.cssText.replace(p,`url('${y}')`)}catch(m){return console.error(m),""}}))},_=(t,e)=>{var r;const n=e.style.getPropertyValue("src");return t+((r=n.match(p))==null?void 0:r[1])},U={[g.MTR]:{className:[".rmp-name__mtr__zh",".rmp-name__mtr__en"],cssFont:["80px GenYoMin TW","Vegur"],cssName:"fonts_mtr",baseUrl:"/styles/"},[d.BerlinSBahnLineBadge]:{className:[".rmp-name__berlin"],cssFont:["16px Roboto"],cssName:"fonts_berlin",baseUrl:"/rmp/styles/"},[d.BerlinUBahnLineBadge]:{className:[".rmp-name__berlin"],cssFont:["16px Roboto"],cssName:"fonts_berlin",baseUrl:"/rmp/styles/"}},B=t=>{const e=t.currentTarget.getBoundingClientRect(),n=t.clientX-e.left,r=t.clientY-e.top;return{x:n,y:r}},F=(t,e)=>Math.round(t/e)*e,P=t=>{let[e,n,r,o]=[Number.MAX_VALUE,Number.MAX_VALUE,Number.MIN_VALUE,Number.MIN_VALUE];return t.forEachNode((i,u)=>{const c=document.getElementById(i);if(c){const a=V(c);e=Math.min(a.x,e),n=Math.min(a.y,n),r=Math.max(a.x+a.width,r),o=Math.max(a.y+a.height,o)}}),e-=50,n-=50,r+=100,o+=100,{xMin:e,yMin:n,xMax:r,yMax:o}},V=t=>{const e=t.getBBox(),n=t.ownerSVGElement,r=t.parentNode.getScreenCTM().inverse().multiply(t.getScreenCTM()),o=[n.createSVGPoint(),n.createSVGPoint(),n.createSVGPoint(),n.createSVGPoint()];o[0].x=e.x,o[0].y=e.y,o[1].x=e.x+e.width,o[1].y=e.y,o[2].x=e.x+e.width,o[2].y=e.y+e.height,o[3].x=e.x,o[3].y=e.y+e.height;let[i,u,c,a]=[Number.MAX_VALUE,Number.MAX_VALUE,Number.MIN_VALUE,Number.MIN_VALUE];return o.forEach(l=>{l=l.matrixTransform(r),i=Math.min(i,l.x),c=Math.max(c,l.x),u=Math.min(u,l.y),a=Math.max(a,l.y)}),e.x=i,e.width=c-i,e.y=u,e.height=a-u,e},w=navigator.platform.startsWith("Mac"),L=t=>{const e=Object.fromEntries([...Object.values(g),Object.values(d)].map(n=>[n,!1]));return t.forEachNode(n=>{const r=t.getNodeAttribute(n,"type");e[r]=!0}),e},T=t=>{for(let e=t.length-1;e>0;e--){const n=Math.floor(Math.random()*(e+1));[t[e],t[n]]=[t[n],t[e]]}return t};export{U as F,B as a,P as c,L as f,E as g,w as i,F as r,T as s};
