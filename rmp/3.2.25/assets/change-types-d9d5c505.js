import{S as f,c as u,l as A,K as b}from"./index-24333706.js";import{s as l}from"./facilities-77b73819.js";const r=[f.ShmetroBasic2020],d=(t,e,o)=>{const s=t.getNodeAttribute(e,"type"),n=t.getNodeAttribute(e,s).names,i={...l[o].defaultAttrs,names:n};(!Object.values(r).includes(s)||!Object.values(r).includes(o))&&(i.nameOffsetX=t.getNodeAttribute(e,s).nameOffsetX,i.nameOffsetY=t.getNodeAttribute(e,s).nameOffsetY),t.removeNodeAttribute(e,s),t.mergeNodeAttributes(e,{type:o,[o]:i})},E=(t,e,o)=>t.filterNodes((s,n)=>s.startsWith("stn")&&n.type===e).forEach(s=>{d(t,s,o)}),N=(t,e,o,s)=>t.filterEdges(n=>t.getEdgeAttribute(n,"style")===e).forEach(n=>{m(t,n,o,s)}),S=(t,e,o)=>{const s=t.getEdgeAttribute(e,"type");t.removeEdgeAttribute(e,s);const n=structuredClone(A[o].defaultAttrs);t.mergeEdgeAttributes(e,{type:o,[o]:n})},c=[u.SingleColor,u.BjsubwaySingleColor,u.BjsubwayTram,u.BjsubwayDotted,u.MTRRaceDays,u.MTRLightRail],m=(t,e,o,s)=>{const n=t.getEdgeAttribute(e,"style"),i=t.getEdgeAttribute(e,n);t.removeEdgeAttribute(e,n);const a=structuredClone(b[o].defaultAttrs);c.includes(n)&&c.includes(o)?a.color=i.color:o===u.SingleColor&&s&&(a.color=s),t.mergeEdgeAttributes(e,{style:o,[o]:a}),o===u.River?t.setEdgeAttribute(e,"zIndex",-5):t.setEdgeAttribute(e,"zIndex",0)};export{N as a,d as b,E as c,S as d,m as e};
