import{S as u,l as f,a8 as A,c as i}from"./index-febab319.js";import{s as c}from"./stations-03c6a73f.js";const r=[u.ShmetroBasic2020],b=(t,e,s)=>{const o=t.getNodeAttribute(e,"type"),n=t.getNodeAttribute(e,o).names,a={...c[s].defaultAttrs,names:n};(!Object.values(r).includes(o)||!Object.values(r).includes(s))&&(a.nameOffsetX=t.getNodeAttribute(e,o).nameOffsetX,a.nameOffsetY=t.getNodeAttribute(e,o).nameOffsetY),t.removeNodeAttribute(e,o),t.mergeNodeAttributes(e,{type:s,[s]:a})},g=(t,e,s)=>t.filterNodes((o,n)=>o.startsWith("stn")&&n.type===e).forEach(o=>{b(t,o,s)}),N=(t,e,s)=>{const o=t.getEdgeAttribute(e,"type");t.removeEdgeAttribute(e,o);const n=JSON.parse(JSON.stringify(f[s].defaultAttrs));t.mergeEdgeAttributes(e,{type:s,[s]:n})},O=(t,e,s,o)=>{const n=t.getEdgeAttribute(e,"style");t.removeEdgeAttribute(e,n);const a=JSON.parse(JSON.stringify(A[s].defaultAttrs));s===i.SingleColor&&o&&(a.color=o),t.mergeEdgeAttributes(e,{style:s,[s]:a}),s===i.River?t.setEdgeAttribute(e,"zIndex",-5):t.setEdgeAttribute(e,"zIndex",0)};export{b as a,N as b,g as c,O as d};
